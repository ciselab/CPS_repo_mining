TOTAL
Projects				Commits	#AP
robonomics_contracts	5		0
dronekit-android		61		2
cylon					20		0
android_app_manager		5		0
turtlebot				19		0
stofzuigerrobot			2		0
robonomics-js			-		-
turtlebot3				27		17
Valetudo				93		1
arduino-esp32			101		4
johnny-five				135		10
node_ar_drone			51		2
grbl					217		5
PX4-Autopilot			2590
==============================================
Legend
rc = Read the Code: from this commit the code was read (beside reading the commit message).
rcy = Read the Code, Yes to antipattern. Found an antipattern in the code.
rt = Read connected ticket.
. = There is something, but not related to research. Could be of interest to recheck in the future. Does not could towards #AP.
? = There might be an antipattern, recheck with colleguae. (Note: they are not considered an AP until being confirmed.)
mwn = Magical Waiting Number AP
hcf = Hard Coded Fine Tuning
fcr = Fixed Communication Rate
x = Commit has already been analysed and contained an AP. Will not add again.
==============================================
Project: robonomics_contracts

Words			Topics
cleaning		6, 12
rc		2806f69ba157d7b681a1acaa295dec0636afed7d Contracts code cleaning
		baa0375fd41d405846b27f14b0506f4e3e90a80f Cleaning Market contract; Added Voting library; Refactored ThesaurusPoll
Results: 0/2

expenses		7, 11, 13
		3b13c63ec74ebf295cd0ca2c0b8b8438f24d455d Updated gas expenses
		24c73de4ff93a7184008379a8183ae3a8d38fd4c Updated gas expenses
		5d52fec91f5fce01d0c470da5a82d4783f2e935f Updated gas expenses, release prepare
Results: 0/3

==============================================

Project: dronekit-android

Words			Topics
cleaned			3
		c1616d423747df397d65214d79e951015abfad98 cleaned up starter app gradle build file.
		110713c6fa6ce673776aee67ce67881bb1e9ef32 Cleaned up code
		e50d57c8405c0d46e2133dedc48fb89153b85e1a Cleaned up code
rc		089a41447a8643036e406710fbfd0b233037db76 cleaned up vehicle uid event broadcast.
		518be49f188792771c0e69fa77e0bfe6aae25bdf cleaned up obsolete apis: - Removed `CameraApi`: replaced by the `SoloLinkApi`. - Removed the `GOPRO` drone attribute: it will be replaced by a video state field within the `SoloLinkState` attribute.
		1d8ea40332f87ce9b6035ac4f37f3a107626fff4 Cleaned up unit tests.
		f87e20d909eb8f30b520936885afdf72ba88f564 Added the `ErrorType` class which contains a list of the errors type. Improved `AttributeEvent` javadocs. Cleaned up unused functionality. Updated parsing of the `STATUS_TEXT` mavlink message (fixes issue #82)
rc		c59c14ad783477d1a140382069af3e56f3d9f917 Cleaned up drone speed implementation. Cleaned up drone altitude implementation.
rc		afaf5146333187a072061480b947cf033f8d45db updated flight action buttons ui. cleaned up unneeded resources.
		80e667e74405a095cb3813126bb6eb6e5d70ed86 cleaned layout resource for the MissionLandFragment.
		972ec4bfbf6a9e88517dadb0119192efec91fe1f settled on a style for the mission item number picker. replaced the seekbar with the number picker. cleaned up MissionWaypointFragment's layout and implementation.
		2852477b688c8e1a1fcbc4405231f4365f2610bf cleaned file formatting.
		2f833912b4b48ea9b4735495f656044c5877fd66 Cleaned up android dependencies in the 'Core' and 'Mavlink' project.
rc		c4abd871657c5d923296c96fe1192de45274d981 Cleaned up
		7fc98d7ca4d646630e187ab2d5219fec6fe5cb2d cleaned up languages a bit
		03fc26d8c8f079c3bf0376147d18afdeebbbefbf cleaned up dp map interface.
		120ad19c825230e945681cfe22ba7cb7ac5c2002 cleaned up the styles resource file. added preference to disable usage statistics reporting. added 'up' navigation button to the settings screen.
		03272b89fff9141926a55cb2926c97f50327f41f cleaned up the styles resource file. added preference to disable usage statistics reporting. added 'up' navigation button to the settings screen.
		b78bc5f5c3df9e7a13e9cc882185813144aa7028 cleaned up unused drawable resource. updated spline waypoint icons, and mission list view.
rc		17e5189c7ef763003bee12f7dc9b7fdcdbc48eac cleaned up app SettingsFragment implementation.
		3cd5ea5a2c219c5a8aec87592fb3877713f0897b cleaned up gitignore file.
		0ad848da6e390a6cdee8af756be4631d3e179260 cleaned up map interface and related classes.
		46e1f8fdab6596a15d393aa49256ae31afd71845 removed InfoMenu since it's been replaced by InfoBarActionProvider. Cleaned up menu resources.
rc		bd6b2404ab5c6cb1c4bd2b3567c2294348b93156 cleaned port/rc.xml
Results: 0/24

broken			14
rc		f6fd775b4f93cc9540c83af2f7840b17022cc571 Survey: Fix imports broken by last commit
		b88cbeff162d28a56dd67790178f6407f3ebb6e8 Camera: Fix imports broken my last commit
		50ac94db12e29f9ea57e18f865a4c5b63978110e Rename: Fix references broken by move/rename
		61e76ffadd9fcacbd61e3c63ab4cdf4c388ce17f fixing broken references
		8cefd92fa0ef9c88e3ee323fdcd9727a90dcfd86 Fix paths broken by last commit
		3c576a37e4fb7bbedc62673313632e0c716e5cb6 Fix references broken on last commit
		da76d0152082d8df397c70ab3ec96e540066424d Update references broken by previus commit.
		6f3b4d035be61395c217d5f3343b80c796da7feb Parameters: validation of new values using metadata if available - GREEN=valid, RED=invalid, YELLOW=can't validate (metadata missing or broken)
		35f70aa4f1e19a22d5cc4a94090edcd3db9c936b Fixing some broken references
		b3217c05335792f36799cb46cd1f4f5e38f007a2 Fixing constructor broken by last commit
		8f8de97b3b8b943de6ebf29bb6a9e21a44f71fba Fixing the references broken by the last commit.
Results: 0/11

speed			20
		f4ea03bb1fa47cc96bfcf1255490ea99a197a1f2 Merge pull request #358 from dronekit/add_mission_speed_control
rc		88eb04e40a2b99883f6750b7949f0376262e5dd8 Moved mission speed to GenericMavLinkDrone. Added javadocs
rcy	hcf	2439e21d1ef95dc7f575e9e9da3af19d3047723b Add mission speed control in ServiceApp. Added Client api to pauseMission and setMissionSpeed
rc	.	be71d66c9ffaa243a0d27d1148bdfff6120c4ca2 Removed testing logic to set the control api speed.
rcy	hcf	a4d41067c2d5d79bb4eb39222ad7f229672270d4 normalized the speed parameters for the `turnTo` and `moveAtVelocity` control apis. added `manual_control` support for generic mavlink autopilots.
rc		c59c14ad783477d1a140382069af3e56f3d9f917 Cleaned up drone speed implementation. Cleaned up drone altitude implementation.
rc		d76a9b6c2418b8389d54267a72d0dbd0da2adf94 Fixed the issue causing lack of roi update when in follow mode on the nexus 6: the location object returned by the nexus 6 location provider is missing the speed value, which the roi estimator was relying on to update its state.
		0e7ca3fe7e253cae381ebc907992151e40c20c30 added implementation for the Altitude, Attitude, Battery, Parameter, and Speed drone properties.
rc	.	01af0f8449eb24d1a131f411549d5a453c74c7ed fixed unit for the change speed mission item.
		7f7e7204796ea6b3961d20b3af2d7e7f04cdc924 Merge pull request #1202 from DroidPlanner/doChangeSpeed
		9f4968b12de81b53aff14b2cc6737f6ff08e061c Editor: Add the Change Speed item to the editor
		e6991f106083a5af77067cf4916d199d2b04bc71 Test: Added unit test for ChangeSpeed
		65a9b353a17efae676b49fa4142ca06b02adebda Mission: Add the change speed mission item
rc		062d249fc55d41b18c89620e8334d71101273d81 adding logging to track the issue with the follow me speed check bug.
		634e4eae5f90558dd4d1ab39f6ede3bec073945e Merge pull request #1145 from kellyschrock/flyaway_avg_speed_upstream
		a1e6630e084f3cf787e3ac47fa4ab3530aa08270 Core: Add a function to get the target speed from the parameters
		a9d954aed35629ec8ebc531409be59a1597e6505 Method to return Speed in meters/second
		30fc3cdd8256a9460b387b1fb071829bf55ec30e Create new Speed class, and update related calls
		9a6bf958660a847b206535d6728587dd5ac7cd72 Getting up to speed with Android dev so I wanted to tackle Issue #302.
		94b97016453ba7ce7363aa31c9ef29c42a4cf76c Set Speed - Change hardcoded string to resource
		bed61ff65bd45561454fdc0d73ed208741adc014 Making the speed indicators work
		ae75769e7b9fba16557c44f36dd49b5b836fbdf1 Refactoring DialogMissionSetSpeed
		f3d9d11428e361667af321a89bf9f7de1de6898a Making the radioButtons for the DialogMissionSetSpeed work
		29de85aba61f801f0742973cb71138510d030c18 Added gps horizontal precision and activated vertical speed
		a133736581969ffef010f3f5e4683bb3f6b54d85 Adds airspeedTarget and altitudeTarget indicators.
		3e62739fb29703163bd085d9f1d29e77d7dc2e95 Adding a Vertical Speed Indicator to the HUD.
Results: 2/26

==============================================

Project: cylon

Words			Topics
halting			9
rc		f3efa83643d7d15ed1ceaacf0a7ed974c98bcdb0 Correct issue with Robot halting
rc		6de922f2fc37215e3384ff0b25c69a36818f8e09 Make halting on SIGINT async
rc		283b05b08a27a5250fc31561f3b657f0dac4edc4 Fixes bug with robot not halting, which caused connections, adaptors and devices to not disconnect.
Results: 0/3

improve			15, 17
		ad94b81e872154ccf2b518e8bad3453583a8dd64 Merge pull request #258 from hybridgroup/climate-improvements
		c063d254e08147d4d6ccbadf6af3a302cf0c3c39 Improve description wording in package.json
		ca749fd03ed2dd3c4ea59d827fefb5f9d060088f Fix an edge case and improve tests for API
		789347f6f8b61cbef15423010d6f83e792cf27f8 Improve inline docs for Utils functions
rc		a4cfc4b8ecd06cfa17a636c169af6ce31bcd6d15 Improve authentication middleware mounting
rc		26b92987a8d7c87aa350bf4c2b71e26cb8481750 Improve specs for Logger
		cb35cf27a5442818b7c659bdda1c4c5688576fa5 Improve specs for Driver class
		0a631513ee126b25d14be2051726ea1e5deaa178 Improve specs for Cylon.Adaptor class
		e7f96b8a6cf22dfcf91aae30fe00f2488e0bd19d Refactor and improve tests for Cylon.IO.DigitalPin
		0ebd4153d446cbfe70b2e9eef3da044d46527d2e Improve/expand test coverage for utils
		56b66bded4b2ee47b445563e9444e3b09a03cb61 Add/improve specs for Connection class
rc		263a1e502480cbec20b899314a113c248aa979f8 Start on improved Cylon specs
		20a67ef590230bb3c6e5acc1b2058964496b9824 Add and improve Robot tests
		707703cae29909e4fe46777817389d33da6da42c Improve Device specs
		ae3ddf6045c2378b26e07ace063fba6738098dbb 74-cylon-readme-improvements
		55d4709f421ad3afbae704136a3f44bdfd8e591e Improved explanation for the example
		199a6aa59e957e96cf39f9ce227e86708b0055ec Improve readme again
Results: 0/17

==============================================

Project: android_app_manager

Words			Topics
improved		2, 9
		1f77da85db61acfbbea0b2b2f8d06ebbe2b86ef2 Improved scrolling for smaller screens, removed hints from edittext.
		e2ccfc796a742d5c958912df25b72862f4f9a0dc Improved scrolling on smaller screens, removed edittext hints.
		b5f2f01092f9ef3d00e4d74a5ea18fd44c68e63d Improved error message when robot parameters are not set (I.E. wrong launch file)
Results: 0/3

failure			5, 15
		9af966579bbc963b48124756eb02a39f8e0205c4 More prints and errors in hope of debugging application loading failure bugs
		63739bc6683eef55d070ee9733dcbc661326931b Some more error messages to avoid slient failure.
Results: 0/2

==============================================

Project: turtlebot

Words			Topics
convenient		4
rc		e1a82cd1ab6922e3b3263a24e68741e6ab08a7c2 convenient paired launchers (no uuids, autoinvitations), refs #96
		7ec34f8ec3357bb9c9420011a27ee90fac845e81 adds convenient eclipse config files and gitignore for excluding bin, build and lib folders
Results: 0/2

cleanup			6, 20
		44770ef7fac1eb3378259258a8347f15cae68062 Merge pull request #245 from kevincwells/r200_urdf_cleanup_kinetic
		52c6a8f020a1a28726a97dddda3c6b0f2b66d0fb Merge pull request #240 from kevincwells/mobile_base_cleanup_kinetic
		e7036dec4ca05e950ae69d2562af5e508e40a142 Merge pull request #238 from kevincwells/urdf_xacro_cleanup_kinetic
		f5ca41b72401439c2662226bb428ca873e79fe4e Merge branch 'cleanup' into indigo
		968ea3da1911e048258452326d8a03dc7feb0da6 cleanup metapackage. add teleop and remove laptop battery_monitor
		c91ae12e9cfd7b4a3277807c2dfc296430022d41 cleanup legacy install rule. and remove concert directory which is not valid anymore
		b2412ef282766bf96ed840934d53006f993383fc Not a python module. Additional cleanup
rc		c631cf41e804c5db0530113a51eab1a1b124ef84 cleanup linux_hardware
		99d6e21823dcdc5c97c131edb1c23527fc4ab359 cleanup of dependencies.
		09811cf517ff65e2de26735ed00f638c1f5420c3 launcher cleanup.
		9730c62daf5f06de8c9231f2c5d019e043797878 cleanup kinect/camera naming stuffs
rc		21c25c170c2f62fd33f3ca503a55906a788c4795 Code cleanup
		05dd4d583f14a2010a2bb95b70d3e63f8a71b5e2 merging cleanup
Results: 0/13

compatibility	10, 17
rc		b25e45a4bb48935f646125a0cb32b5ecdc6f1ba6 update compatibility for upgrade turtlebot android apps
		db6facd83386c43a0bb3370c04f2144c0d8933a8 update android teleop remapping rule and add kitkat in compatibility
rc		2ae49c873ff9faa687862df3fec88004332b2828 Fix compatibility uri's to filter out PC interactions on Android
rc		02b821e0bf6d4025b7284c7b0f37e7c1118640f1 reintroducing 3d sensor compatibility for fuerte
Results: 0/4

==============================================

Project: stofzuigerrobot

Words			Topics
unnecessary		1 - 20	(It is in all topics.)
		296ccf97d7e27c198e54eb3327aba2499690a40a Removed unnecessary dependencies.
		51267f89a4d0da2be536ab7ec3ddf784ec85be97 Removed unnecessary files.
Results: 0/2

==============================================

Project: robonomics-js

Words			Topics
-

==============================================

Project: turtlebot3

Words			Topics
compatibility	1, 13
		2fd439fd5fc380ed18ffe78c7c1b6f8e8d527519 Python2/3 compatibility fix
		937f0d09b5f6e4ea26b11550eba6810b41c92468 Revert "python 2 & 3 compatibility update #542"
		40f11e4e7e71543096b3b52d964f2f4f42c831f0 python 2 & 3 compatibility update #542
		ddca617172a3549a3077682cd2cf7dc377616e01 Add print compatibility with python 2 & 3
Results: 0/4

rate			2, 8, 11
rcy	fcr	4f3cfe51d98b787fa9397ffb2b2baafaf181608e imu update rate to 0
rcy	fcr	0df54b559219e78a06770c301cd4b7c8e4481053 imu update rate to 0
rcy	fcr	be6d549085d229eb6eb970f7b0f1ed568bdd0935 imu update rate to 0
rcy	fcr	8add6660f411a34336161d77f2a54bb8d27a1ad4 imu update rate to 0
rcy	fcr	f9c5fe30024a90058d7303d02f4cc302d6e1d496 imu update rate to 0
rcy	fcr	e78b8edce9702e292dec65a5ca549a774512bd67 amended base_scan update_rate and add param on diff_drive
rcy	fcr	877ea055c17b315890ac0faff46762c2ad2fe13d Corret the laser scanner update_rate in the gazebo xacro files
rcy	fcr	412dd8a974abee89b91967a409756f07598f5241 edit updateRate
rcy	mwn	c60c6b3c6883b48767e5c6ccaa5b5b47f933d05d added basic operate
rc		6cfcc9e5cae58b98bbbcfabb761f1544221d7a08 used integrated bringup file
Results: 9/10

inertia			2, 18, 20
rc		68538fb0a2c8a7a2c2ddec4eb5fba7640650157e added temporary inertia data in urdf file
rc	?	efcaedaf6c3d6988776632b8319ed42e8ec954ff add inertial param
rc	?	ed9787d4333f79601c0e83600ca2138ccb92516c add wheel inertia tensor
rcy	hcf	90caa88df4a81cfce3f7b3ab3227f2e31869c668 modify inertia
Results: 1/4

frequency		5, 19
rcy	hcf, fcr	01beb9347f8d5e0d91582608bc15027c3e376670 velocity and acc and frequency param amended
rcy	hcf, fcr	3c7ffca48b93e06d7ea0eed9d9c9381d1a4d8517 control frequency and inflation radius amended
rcy	hcf, fcr	d42741ced8a18ffcd84d7f2babef0dbd48c04ea6 update publish frequency
rcy	hcf, fcr	066d7a58a49a1ee55b5a128e01bae8736cc31293 update publish_frequency
Results: 4/4

size			9, 15
rcy	hcf	9480d25abb02228ebe500f00370ce4554f04e839 modified the size of laser scan
rcy	hcf	5fcdb33c709c56cab2580329d0debebb937e0569 edit footprint size
Results: 2/2

limit			14, 15
rcy	hcf	aff566b8f168b2868dec87c4987c7a947126b35b change limit vel
rc		a2e876b3f3b6c5034d62fb4017543cba939a4bbe add constrain to limit velocity
rc	.	2ef2173e5bed460c9986ed1dce0edf7324afa896 add limit velocity msg
Results: 1/3

==============================================

Project: Valetudo

Words			Topics
time			2
rc		6ed3fde59c69b4cdc8b75b3c314024928a98c1b4 chore: Add time logging to upx compression script
		7ebbafce307fc5b3e07f73f3652d154a63d3a248 fix(ui): Timer action controls Memo dependency (#1091)
		ece2dc9d6d5baafa4d0aa291565087bf2e1f6148 feat(ui): Show runtime info on about page (#1089)
		ac19d5d2c1751c12d614ebf2c8cb701cdc7a0473 fix(ui): Show old ui timer page even when there's no DoNotDisturbCapability
rc		5252e79b9be28ca2f231e2a572cf62563f10cddc refactor(ui): Minor timer cleanup
		f790db3ec1eadcaa91726a75ac994b5d527058f4 fix(ui): Make timers use correct time zone offset (#1079)
		b53d428846f3013768827296b193ed68f4ca0255 fix(ui): Remove staleTime: Infinity for queries that should actually refresh automatically
		abd63454588e510d23d55c4f08a1caad1cc7c649 feat(ui): Implement timer ui (#1077)
rc		105d02a67d502ba727e90251f2b9325837833ebd fix(timers): Prevent timer drift (#1078)
		c2cbd4588dede2b4d6a86c7d0807b16d7308d0f2 fix(vendor.viomi): catch set_timezone errors
		3f81d4c063595f129d7b08114377b6b4703628e1 fix(miio): reduce loglevel of user ack timeout spam messages
		db7839d5ff1b4538e6ec730e8fa2a074011ecd38 docs(timers): Add OpenApi Examples for timers
		de45f72c8080c707df9aab8aebefa19e6d9ba996 docs(openapi): Document Timers Endpoints
		fe1fa88d715e1002d3ee607ce9646b8d8b2cdb9d feat(timers): Add endpoint which returns timer actions supported by this robot
		d8a523e40138f679411d2b8c33db3057d5f6c8d8 feat(timers): add ValetudoGoToTimerAction (#953)
		34443b3bea4feac5c48844554cd9a816df6f60ff fix(timers): Fix zoned scheduled cleanup
rc	.	e331eda332e12a138cd1d7e8b8994208f714833a fix(timers): Copy-paste antipattern
rc		7b8c37ad1006aec62e1f19e5aec83d54da94189d feat: Timers
		fd79163c3e9328562346a789ad5cec6e73bfe52d fix(ui): DND should be rendered as localtime but stored as UTC
		8e0ddb6d5b389ffdd37054a92952dfcc40818b60 doc: clarify timezone configuration (#897)
		908d5ddc16b03dbe92e1aafe9e0d4f755312e3d4 fix(vendor.viomi): Fix system timezone in init script (#876)
rc	?	21b5876362939fc2e0d7ee7edbb4651411be39da fix(vendor.viomi): Fix last clean time (#822)
		6db4f663a575e123c4455acf9eb2535d75fe99e3 refactor!: Track attachment state all the time
		bafa158814c3185cffbbaa9c9529227883f13071 feat(vendor.viomi): Ensure timezone is UTC (#732)
rc		e14935dfa9ef06a15871b3bd7683c55956b4db52 fix(miio): Set ServerSocket to disconnected on timeouts to prevent valetudo breaking on wifi issues
		e2ea1ce212c4f85bba492dc273c6b7e75f4768b8 fix(ui): Fix #527 not working close and cancel buttons in timer settings
		717d7315ffebbe2cccf04351189430d2bc66f1e7 docs: Added flashing timeout to FAQ
		9eaf848ef2f25d17ac8e19702abc24bf6ce19c90 feat(mqtt): added time and area information to mqtt attributes
		f327db1260e3261cb126a8bb8e0ea9af6b8130e5 Rename doTimesync to isServerSocket
rc		edd5c575cdc18f305f753b190974e8a40e9e5630 fix addTimer for firmware 2008
rcy	mwn	9f523eac1866d9664eb02eeaa31c64a389b6d87f Reintroduce extended timeout when polling for a new map.
rc		9714fa261bb8cd33006ee05b198449b39556890a Make 'timeout' proper Error instances.
		e8dec55975dd7b27158874be08e37ebaff84265d Disable timesync on local socket to fix local communication
		a89c44f9fe8f3ac632c116a7a045e51c8fb33a75 added timezone configuration added dnd configuration
		be58ed5c7aaaa65eb756b122efdc01c884fa87a7 made timer configuration intuitive - Added form for easy timer configuration - Added human readable timer interpretation
Results: 1/35

timers			8
		f790db3ec1eadcaa91726a75ac994b5d527058f4 fix(ui): Make timers use correct time zone offset (#1079)
rc		105d02a67d502ba727e90251f2b9325837833ebd fix(timers): Prevent timer drift (#1078)
		db7839d5ff1b4538e6ec730e8fa2a074011ecd38 docs(timers): Add OpenApi Examples for timers
		de45f72c8080c707df9aab8aebefa19e6d9ba996 docs(openapi): Document Timers Endpoints
		fe1fa88d715e1002d3ee607ce9646b8d8b2cdb9d feat(timers): Add endpoint which returns timer actions supported by this robot
		d8a523e40138f679411d2b8c33db3057d5f6c8d8 feat(timers): add ValetudoGoToTimerAction (#953)
		34443b3bea4feac5c48844554cd9a816df6f60ff fix(timers): Fix zoned scheduled cleanup
rc	.	e331eda332e12a138cd1d7e8b8994208f714833a fix(timers): Copy-paste antipattern
rc		7b8c37ad1006aec62e1f19e5aec83d54da94189d feat: Timers
Results: 0/9

speed			13
		2b5d3e69b9ea9a1ab966efc67652f55e638bf0f4 fix(vendor.viomi): replace fanSpeeds with waterGrades (#825)
rc		3f4d844c2979527624623bb2ff67654a0961f768 fix(vendor.viomi): Fix water grade controlling fan speed instead (#791)
		200b13b5c8434375db486b93067278ddca490a42 feat(vendor.dreame): Use currently configured water grade and fanspeed when starting a zone or segment cleanup
rc		a070c4f705b17bc85b7cb703b6d6e3a6f6302cc1  feat(MockRobot): add FanSpeedControlCapability
rc		be0efca344ea7fe53858b9a28c7097ad4c99dea1 fix(vendor.viomi): Resolve #672: Fix viomi fan speed control (#673)
		26ceb95a71154396d14adfb01b6fb1d198fa3490 fix(mqtt): missing / in set_fan_speed topic
rc		3ca745054d3c159023edb632e198126e89d7494a fix(vacuum.viomi): Fix fan speed state parsing
rc	.	ffbb8e75ffc4ce06bab6baa6f7328877cf66659b fix(vacuum.viomi): Hackishly fixed map parsing for viomi v6 + fan speed settings for all viomi
rc		3ca66202c2bc859c015d2f0f84bb3340e4eb06fe fix: gen1 fanspeeds
rc	.	ecd052f441793059cf91023a7cc7cd8d28758aa8 define fan speed constants
rc		96b2c9ab95e9025c53ca4c8e02fa1a2dfade2c41 use quotes to access fanspeeds
rc		c817a762ad7f074f7a762500f24274fee7aed603 move fan speed presets to vacuum implementation and support for new firmware
rc		abc26d9fbea70293f70423ad4950fbd7cf9bf1cd speed up the build by using 1 run
rc		6ed35ed0a37404437e15a36e2e7e72f4213743e4 add mop fan speed
Results: 0/14

timer			15
		7ebbafce307fc5b3e07f73f3652d154a63d3a248 fix(ui): Timer action controls Memo dependency (#1091)
		ac19d5d2c1751c12d614ebf2c8cb701cdc7a0473 fix(ui): Show old ui timer page even when there's no DoNotDisturbCapability
rc		5252e79b9be28ca2f231e2a572cf62563f10cddc refactor(ui): Minor timer cleanup
		f790db3ec1eadcaa91726a75ac994b5d527058f4 fix(ui): Make timers use correct time zone offset (#1079)
		abd63454588e510d23d55c4f08a1caad1cc7c649 feat(ui): Implement timer ui (#1077)
rc		105d02a67d502ba727e90251f2b9325837833ebd fix(timers): Prevent timer drift (#1078)
		db7839d5ff1b4538e6ec730e8fa2a074011ecd38 docs(timers): Add OpenApi Examples for timers
		de45f72c8080c707df9aab8aebefa19e6d9ba996 docs(openapi): Document Timers Endpoints
		fe1fa88d715e1002d3ee607ce9646b8d8b2cdb9d feat(timers): Add endpoint which returns timer actions supported by this robot
		d8a523e40138f679411d2b8c33db3057d5f6c8d8 feat(timers): add ValetudoGoToTimerAction (#953)
		34443b3bea4feac5c48844554cd9a816df6f60ff fix(timers): Fix zoned scheduled cleanup
		e331eda332e12a138cd1d7e8b8994208f714833a fix(timers): Copy-paste antipattern
rc		7b8c37ad1006aec62e1f19e5aec83d54da94189d feat: Timers
		e2ea1ce212c4f85bba492dc273c6b7e75f4768b8 fix(ui): Fix #527 not working close and cancel buttons in timer settings
rc		edd5c575cdc18f305f753b190974e8a40e9e5630 fix addTimer for firmware 2008
		be58ed5c7aaaa65eb756b122efdc01c884fa87a7 made timer configuration intuitive - Added form for easy timer configuration - Added human readable timer interpretation
Results: 0/16

improve			18, 19
		8736f7fc9ee1d76dcb8a5c21975f85040fbfd723 fix(ui): Improve word breaks in MQTT topic preview (#1088)
		12f706cac0b70e88442b776d328ec08db6f326ed docs: Improve dreame reset button uart root instructions (#1054)
		a8720b931a4a89b4748470786a0fe0b9b4fd64c4 fix(core): Improve unhandledRejection event handler
		7e28c663bf4e321c80350df932e7914c4901ca29 chore(mqtt): Improve warning message on retained messages
		24bb2ea9ae87186341a7f22086844659b3f0d6c7 docs: Improve upgrading instructions
		7ed177a85ac50ec23a913c5265511e9adf839f8a fix(miio): Improve error message on missing keys in device.conf
		4c20e60ee16cbaf29770da79b4ac50be6f737a2e docs: Further improve roborock installation instructions
		eadfb25da55eec9162257d55f42d10077bec2449 docs: Improve roborock installation instructions
		2c8b27f98a18e0db5a7d148950317c9beb5836f2 docs: Improve capabilities overview + explain MockRobot
		1138c8466ca776960e0dc6030b1efe5f6e8343f2 fix: Improve state handling in MockConsumableMonitoringCapability
		ef949be485ba97bd8c65066ff5c3f427fbf35f6e feat(vendor.dreame): Minor improvements for D9 Firmware 1072
		186abd34852d62b3ab418216a500bfbb72423b85 feat(vendor.dreame): Improve handling of RISM maps
		8609612e03bc756194982d35b4389d27557842ac fix: Improved dnshack to catch all problematic dns.lookup requests
		9c9b0d135541d95cee75ec497b32715e51a58f00 improve jsdoc
		3ef3bc6fd8a1693f9f2bf3fbda5a053d3e4cd696 Improve model name S50 -> S5x
rc		a9ac38a8343198e8eb2deb704d0a088d3d68bc36 Improved file upload & error handling
		da00c261e49f9a27660bd30a856d0badfab87adb cosmetic improvements for zone definition
		fcd3dac936487aba47f026ae07bf8fdd8d28df83 improves zone drawing
		04ace46a68dc611ac7fc8ca32ba6f0774c7a06df improves documentation on installing and updating valetudo
Results: 0/19

==============================================

Project: arduino-esp32

Words			Topics
corrected		2
		c5a1f3efd77e9b74c52f0a359ba3b63ea30c5aa1 Corrected CLASSIC_BT_ENABLED to CONFIG_BT_CLASSIC_ENABLED. (#5471)
rcy	hcf	a12d609b221ce339de092cfe096c6bef7542c943 Corrected count of characteristics to get (#3082)
rc		1da3138ed6bf4675836f6ebaa15bb5db280a6e36 Corrected Flash Mode (#1205)
		14ed6c4c251b05903be0a8e9001730c6fef4091e Corrected Instructions for Windows typo error (#1210)
Results: 1/4

optimize		5
		84b8582acbb8ea76cd8b31400b7ff6edc98afc94 Optimize esptool path for packaging and fix possible build errors in windows
rc		6707d4d331c1556ff98d9b5b87d6a5d2acc1a148 Optimize timer drift
		063d608e18dc3df81dcb59b37c3e6844442bdc3b Optimize Update class
		de017a8a1b362a8bee71d14073f87300ec428b9c Optimize SPI transfers to take one lock and do not return until completed
rc		6db0ee13043166efcc3d603cddfbf2f4507c4ad6 Optimize GPIO and account for micros overflow in delayMicroseconds
		d8aa61fa52b889b8605d98b6d633371d414ac0ab Optimize some error messages
		bfe6e5ae77d10e2b131f4b2bd971b62e6f2f0859 optimize log facility for multi threading
Results: 0/7

wrong			7, 8, 10
		5fd737925fc766a66e228da6e1bf33b32e0edee0 Fix wrong attenuation being set to pins (#5522)
		f4f1c8956beeda99c376b86c7ba3eff1ba431581 pinMatrixInDetach() has wrong parameter (#5385)
		5ae3e836f9de6f3e850f8ead43e9e357475121af Fix wrong password same SSID (#5124)
		9710fedaf05c85e3c8e5d23b076bd47561a0ca21 Fix wrong values in .cvs files (#3196)
		45fa0f829449419aee83d61f967ca32450e63527 Fix issue with WiFi lib sending the wrong event ID when debug is on
		a43682596fad48f18b87903807bb95e2b56750be Deep-sleep example-sketches reported wrong wakeup-reason (#1911)
		4e9d1ee23798a127b6754d199194adcbee21f058 Fix connected to be wrongly reported in WiFiClient
		c1a94b532617e4f7dd13a2d90b50dfb54eeff3fb Fix wrong event description
rc	.	dd639c4a029b3b31559bb4243a066e2005bdbc18 Fix wrong range of duty cycle (#1353)
		8332a235d636a8cd28cbf6168aecf3f65fe1104c fix issue with STA emiting the wrong event
		cfbb7300b768a1ecd7f1300ecac044268153e78b Update to make use of SSL a bit less confusing by ensuring errors are generated if the wrong method is called to retrieve the data stream. (#934)
rc		1b994d54be9c86043c1fe63d132a04acca54c3d9 Fix wrong size reported for cards above 16GB
		9fc3f1ebdd531633d2500e1a3a67a35ea02807b5 Fix wrong SPI peripheral enabled
		1058e89dc3d390a1eafacc4bcbb48bfeda675872 Fix wrong bitmask returned for pins above 31
		1f0df1ef976b865c97379d326d59f971a7850fc9 Fix wrong return values for WiFi::softAPConfig
		f49ac391b2bda4c9c0d80575e742ef10c93f2b53 replace wrong calls to cbuf->size in UDP
rc		fb8f1244b7ff4f7853fc5e6db4714bccacdbee5a wrong count checked for uartWrite
		3ecb32c4ba7655dfff79f1a4e543318659cb3880 Prevent I2C Bus locks and wrong data being sent on retry
Results: 0/18

size			6, 9, 16, 18, 19, 20
		67583e84d600deeacc7a4813ac4e4ffd3f530093 Return size_t instead of uint8_t from BLECharacteristic::getLength().  Allows large MTU to be used. (#5687)
		2f6f2514008a6a235aba373644d4df5e58c32f1d Fixes boards.txt entries for the atmegazero_esp32s2, and also the platform.txt  --flash_size which is not letting the board compile due to its 32MB size. (#5673)
		1f59c5abecc17fd450a5806362d199c3aa4f6c25 Adds HardwareSerial::setRxBufferSize() (#5583)
		ea236e28e53d248b98bf00a69b98f9cdb02cf54f Fix incorrect Flash Size in Esp32c3 (#5279)
		2082945d36db3fe1f72cefdb7111c285c8402539 Make LOOP_STACK_SIZE user configurable at compile-time. (#5173)
		a299ddc99e79d473caefe04116daef31c0520936 Change send_ssl_data to use size_t instead of uint16_t
rc		d1a4b3b822572be65c9f5faaf8129b51e392c2ab Add loop task stack size config to Kconfig
rc		7d5bf9e38547463452a52ad131a3f792324906ed [1.0.5] Make looptask stack size configurable (#4564)
		86de90fe24a0e54f382cc713ae20fb2225b4f503 Added partition and flash size menus for VintLabs boards (#3602)
		36075257c2433d4427882cac9126abb68f11d97c WString explicit converters to reduce Flash size (#3497)
		c8d8dc226545a096a34bf5164551c087b658d33a Added partition size options for TinyPICO (#3358)
		b30e55efff02becf1a29faadc6009a841dea659e Added partition size option for Pico Kit (#3258)
		932666a03f3a2fce5a92018c4fbe316b1c77cbc5 Ensure that _size is properly set in begin (#2706)
		da8b7c1b80f1375be564674565c609aaa054e41c overload Preferences.getBytes similar to nvs so you can get size of t… (#2498)
		884e417a4943ae64897fc06db47915f24c00b59a Fix HTTPUpdate flash size check and add SPIFFS size check (#2161)
		7e9afe8c5ed7b5bf29624a5cd6e07d431c027b97 Add response headers with sketch and flash sizes, and a SHA256 (#2116)
		af79e18ecbe8fd7cac55c84090c6d222b37fab78 Added ESP:: functions for sketch size (#2028)
		ce6107480256b3251b0d069f5c678b09bc36d90e Add functionality allowing rxBuffer of HardwareSerial to be changed in size via HardwareSerial::setRxBufferSize. (#1855)
		058645264c021be78f4108a357c50b60adc50b96 Adjust RAM size and calculator
		f8a3c61981fffa7f53278ea5ac38a225bf737a7b Add upload.maximum_size directives to boards.txt. Add partitions to LOLIN32 (#1379)
		f5c2afff31338eb2239a0f0fb1f4e755e3584efc fix upload.maximum_size as current partition size 0x140000 for esp32vn-iot-uno & heltec boards (#1052)
		1b994d54be9c86043c1fe63d132a04acca54c3d9 Fix wrong size reported for cards above 16GB
		22d92e7b7f4cb710dce6811928425ab427a5d9de Change size of fatfs ioctl returns
		b465858563b05addf25e91e1e9407883cd4256f7 Check and format NVS partition if size has changed
		e8e8efdb664442cebd0285ddcccb6b2aabe26bc6 finalize formatting of reported sketch size
		ca3556041395c372a07accbd4c34099eafaf282a add proper size formatting to travis reports
		fe12ebd3fd87f434f87bb29601bc3e2a4525e187 dump size and partitions to prep size format for travis
		f49ac391b2bda4c9c0d80575e742ef10c93f2b53 replace wrong calls to cbuf->size in UDP
		0ccde6cc1ad668fbc6cc246fc071655970228fea fix reported data size and percentage
		01961ef5c64cb061b470ed6258540e880ca5a1b7 use local buffer for printf if size is equal or less than 64
Results: 0/30

timeout			17
rcy	hcf	0acbe781f50540290a0d38c1fb0966a3088dff7e Increase default timeout for WiFiClient from 3ms to 3s (#5496)
		be84c8219c251210afd87cac71b8ef3527b601b3 [WiFiClient] Default connection timeout, when no timeout provided (#5487)
rcy	mwn	e12d8c8ff1a241160fc38d2f805c5ea169be7a5e fix: WiFiClientSecure connection timeout (#5398) (#5418)
		bab3a70f543dac8f131916fcfc24b99b6b8252a0 Added timeout to WiFiScan.cpp to prevent getting stuck at WIFI_SCAN_RUNNING (#3197)
		5137fc5c80e8cd1d9f07879d0bc1ecf5a52e8ce4 Ble notification/indication status and timeout (#2998)
rcy	mwn	02e51728c4f66d997dbe8c8948e377ccba36dd3e Fix Timeout Bug in WebServer (#2938)
		9a9ff622166149da30dd13a81485184617c56387 Add connect with timeout to Client class
		3d6e4e1b94ccdfe269da9c314b755e2345a164fa Use milliseconds for timeout
		582e6433e913bc0ccc0ddd7c443503294393ec69 Add proper timeout handling to WiFiClientSecure
		dd649808d174a88063846d6bdabb6cbc1a593c77 Add server connect timeout to HTTPClient (#2606)
		fc737e08c617d27414ebf1a574f7ebdf9a968f38 Add connect timeout to WiFiClient (#2383)
		0de0d3f79a71d5d5ab8a34d5cba90680e7d29036 move call to setTimeout() to after the client connects. (#2214)
		2fda054bea45aa6d1be3ab4265406b0846247357 [OTA Timeout] Added ability set OTA timeout in the OTA client (#1669)
		95b87545e71a70415500b83359e9e691962a1e54 Make Stream functions if File to not wait for timeout
		7b243adcfdfdbddc76e571052e7becf310cde757 [OTA] Add UserSelectable timeout for invitation to device + check for OK result in the last few messages (#1445)
Results: 3/15

timer			19
		94809ce38bd5fe0087d865244f177a084c4d33cb fix: timerRead() is returning the last read value, not the actual #3434 (#5498)
rc		8f46bade7afe7b38f861b9da8c7284b3988dd7b9 Fix hardware timers
rc		be77bd4e27228e10cf7132668f0f1fd2172f4a37 Resolve crash with timer interrupt functions called from ISR (#4684)
		18832bb418a8cd47637e10dfde6ff86f7fb3fe04 M5TimerCam: add LED_BUILTIN & SS/MOSI/MISO/SCK (#4560)
		dd1a15478f2635f9840cd2c3035dd03058eecde0 add TimerCAM and CoreInk board (#4498)
		f32083a6d0afad8efc4d52b11091ccf55249dc29 Fix timerRestart
		ec40c4c96f9088956ed95f5207b9385f33689602 Cast TimerWakeup conversion factor as ULL (#3027)
		93c45af25640435f78532cc621ea159f525e502a Use esp_timer_get_time as time source for micros and mills (#1424)
		20db2ee421f5bba2d1dd6aaab7b3442e498f7cdd Add Time and TimerWDT examples
		af35773d65a8f328dba8090dff66ba43abe0e7be OK Really change timer allocator
rc		17ece1bccdd6c9dc671a6b0bfd66c0a642f75672 Revert Timer Interrupt setup
		6d985556586b6748e1248d35da9189e9b670fdd3 Change timer interrupt allocator
rc		6707d4d331c1556ff98d9b5b87d6a5d2acc1a148 Optimize timer drift
		b5ac95b2742cec4c24d4fe16406b95d38822ab8c Update RepeatTimer example
		a83dd5f2b5bde6c2b2ac846fd1d1a7cd902899da Add RepeatTimer example (#216)
		4e458fd6fb5fc77c72ab25ffdc4d932b9337e77c Initial Timers driver
Results: 0/16

iot				19
rc		10602939cc1b81d10cdb74d0619c5d6ef7dee208 Added support for Trueverit ESP32 Universal IoT Driver MK II (#5269)
		90d3ae25af576ed918a3d6ef807996fcbc69675d Added support for Trueverit Universal IoT Driver (#5219)
		1f4491f4ee5b26b0e5996da409965b3f74bbf69e Updated AzureIoT submodule. (#4322)
		09bff5027db3dd698ef62e5b3e44b82312f074cf Add a new board of KITS for IoT education (#3703)
		9b75c65fc76ea67b7b8420dbc2c8ccc917182765 Add Senses's WEIZEN board from Senses IoT platform (#3687)
		c09ec5bd3d35ba7dfc135755ab300e2b45416def Added MGBOT IOTIK 32A and IOTIK 32B boards (#3427)
		e055b28d1a06ba60b355a1e87da79da9ad0d5590 Ignore Werror-maybe-uninitialized from Azure IoT Library (#2824)
		512d0d088f5e39b7042669e00574feadcb461679 Add Turta IoT Node Board (#2208)
		40d85ce5827c0844efa986dd1c669f06c2b7b280 Add submodule of Azure IoT library (#1448)
rc	?	f5c2afff31338eb2239a0f0fb1f4e755e3584efc fix upload.maximum_size as current partition size 0x140000 for esp32vn-iot-uno & heltec boards (#1052)
		fb595e575140d2192f181c96228dc4f03e90cf1b add esp32vn-iot-uno board (#398)
Results: 0/11

==============================================

Project: johnny-five

Words			Topics
clock			1
		52d4d564c039b922c7e757a33ab7eaa79a28668c Motor: only consider ["clock", "data", "latch"] relevant for making a register key (ignores possible "reset" key)
		e468a4074d03f1a4065b9fe31143c792e0873fc8 Led.Digits: Dual clock display example
		2f18a01f50a1c08691ccd4e5421f50aac2761f2f Examples: clock breadboard
		cd786ec781bf30b9cf9da04e53a28b8ef221fce7 Examples: led status, clock
		c35ae3369948ad48103285f4d71f91d6ba487987 Examples: update led digits clock
		6c20125a9ac7255a5ee3825b46cecba079b022ea Adds continuous rotation clockwise/counterclockwise api extension demo
Results: 0/6

scaling			6
rc	.	933043ba776328307d511f8d96ab1e0962b483a5 Fixed scaling factors (#1284)
rc	.	211a6ace02e540c87d0218809db417e25b877b8e FIX: Correct scaling in gyro to represent default state of device ADD: Clarifications to some things around default values.
rc	.	6e2cedbff86a840d0bde84b71efa875440839115 FIX: Correct scaling in gyro to represent default state of device ADD: Clarifications to some things around default values.
rc	.	c7c2a43d8114473697460176d0ce4a6553857efd Light: fix analog scaling
rc	mwn	add19d16351839f90a2151f2327f5116ed5ad445 Compass: combine scaling and heading calculation; conform to predominate controller pattern.
rc	hcf	e387f14da5b0b8c83842522a5d4d3443dc3b6d26 Fix esc-dualshock scaling values
rc	?	912f7ff070a7fcef8577bf4885315793030b39ed Implement customizable "Boolean Barrier" settings to allow scaling any sensor value directly to a boolean value
rc		1af3ef3445cf15c6a78bb993d444cb57368a0fa6 Add hard scaling (TODO: make user settable)
Results: 2/8

duration		7
rc		47df3da4c957b7e518d0e6f860189e4bdc40e982 Led/RGB: time/rate etc => duration
rc		dba60f373371f310b7b9d72f8d1718cdf98203e4 Fix hint errors, add duration check.
rc	?	1bd8b9cd10bfe50ec91da0db89d44d08b2f2be3f Led: Remove explicit default duration for .pulse() and .fade()
rc	?	da060d662629012b6915ef284e06c10225ff620f Led: Make duration and complete optional in .animate()
rc		49e26a54ae181b1869cd6343f5d7e4f6cce24988 Piezo.tone now throws Error if tone or duration are invalid. Tests updated to match.
Results: 0/5

improved		9
		b9b70d2cfd2b4c1d456c5827de4f1a5a96ba1b86 Compass: improved test coverage
		71ac3aad7cd50994235f3ae1679647c321bcb50c Fn: improved fmap
		bf98fa170fc10425c60bcf5fd3579a569ea3e4f0 Animation: improved coverage
		4b4915f7a9d3dce8285fda83b8724a9cc1232a39 Board: Improved coverage (followup)
		9ba3e907608ef65f4aa6ed44f8bb27e6320ecb9b Altimeter: improved elevation requirement warning message
		e08f482f44c53d27de3e0f2e2d817a29c5382ec2 Regenerate examples with improved titles
		2a62407ede5fedf4c199d46f130bbe25215237d3 Improved titles in titles.json
rc		29ef091024396fdd46731dc0f9580e09c122d84f v0.6.5 Improved multi-board support (initial API implementation)
		2a1cbca8e3fcdfd57c28dd6980d4d45ffa1d1d49 Fixes #130. Improved Multi-board support
rc	mwn	caf95b073569cdc3dc541db735d05bea8771e783 Complete LCD rewrite, supports 4 and 8 bit writing modes; Improved 'sleep'; drops 'tobinary' dep. Closes #38
		1ba41ba1338697797bab4a53fecdf8f1b8a56799 Improved Radar app
		e86fe2aecfd1145234f2b9610fa16e6b77382801 Improved logging messages from primary Board constructor
		959e99e0b50fe4bd14bd9981cfacd9684f5f82d3 Improved handling of serial detection errors
		08cf794a5359c84631c955e318fe0407df5e0baa Improved Accelerometer "axischanged" event
		c01245fb21f10284005848afe63baef08ae2082b Improved comments/documentation
		e464bf502b831f84aeea6b0601e64162f52e4089 Improved Servo.prototype.sweep, Servo.prototype.move
		a9ee98e0408661c8da22daad174a2b5df64b030d Improved Servo API: min, max, center: all range constrained.
Results: 1/17

nitpicking		15
		1893635f1258a79d7e66980b001c19f9a62c7d06 Examples: format nitpicking
		f3ddbb5e52afcadf341d947ce9cb2a9014612932 Examples: Accelerometer nitpicking, Board, Exander, misc.
		99ce13b5bd80e4792665c17d4325d5d4b3057c01 Examples: ShiftRegister nitpicking
rc		3c1a68fd1fa122eda0f396ead5fc4f8b9e08cc71 Color: nitpicking garbage
		1843e4f20c81142f8f272c41d00fc2f9fb728156 Constructor var decl order nitpicking
		2ebd3810d396d0ea0aab69ea6518fabbb55a37a9 IMU: nitpicking comment notations
		1d46f58fbf9a03dc1eaf7221b904729e887a14cc Test: nitpicking
		e194de47a0751bfa3f0b9352c49a5f6bcb6ce20e IMU/Multi: register naming/nitpicking
		2b423b5db122ea31f35ced0eb199b17c9e03bb11 IMU/Multi: TH02, example nitpicking
rc		39c4fc03a5e0ca7fee3a2c22d215c8a7f7ed1b03 Thermomemeter: nitpicking
rc		5d3901940e20c33ab36dc710ee9cbb5ecb19de50 Nitpicking
Results: 0/11

sensitivity		15
rc	?	0a157fe31ef3d320b9f0ec7cc87a2782ad84d1bc use full-resolution sensitivity for every range
rc	?	0e7e9dd15be9a0f60de42250bd23c0c87e6e95bf use full-resolution sensitivity for every range
rc	re	3a5e2616f0f05b3e802dd41070110ced236e10de Accelerometer: ADXL345 use typical sensitivity (#1300)
rc		8e3dc90c031c152571f3ff8fc707780cd70d0746 Keypad: invert sensitivity, higher s -> more sensitive.
rc		98d88873d57afc8adb9de38fdbddcb8611a6ddc8 Soft-reset board to support new sensitivity setting.
		c17b5835b3478ef54e2db7e64c8132bba51c2cac Soft-reset board to support new sensitivity setting.
rc		fb2c0d811f2196d6bcfb4a191d827bff07beb6dd Keypad: MPR121 sensitivity parameters
rc		580c48410b5126dc736707274b6500340ae6412c Added sensitivity option for MPR121QR2 (to replace hardcoded value)
rc		309ddf6cc40e3116dbe6ddeebdc1c94533b7f9dc changing this.value to this.scaled to reflect light sensitivity
		f554993735d1bc6eb01f46501f72c71360cf840a Merge pull request #554 from BrianGenisio/imu-accel-sensitivity
rc	.	6db0358d92ad0f527ff9eff141e7752daec4a9ee Changing maxValue to sensitivity.  Getting the sensitivity from the datasheet
rc		aa5b2b2c4e3418aa143247ab7a20c7c53df92681 Basic change sensitivity settings for Sensor instances
Results: 1/12

time			19
			6a3fa4940d24082b72a7e1aa471f86377d4994a9 Examples: make Altimeter example output consistent
			7f868d3f63a21c9ed655fe181b04c4669a08c83f Update Altimeter examples
rc			d3d0607d821ab2fdddf96b7f1ae12f8ba9a846a3 Altimeter: fix floating point numbers in comments
			13d24ffb67695e9f6dd67cc00d64f5cb7871fb89 Altimeter: fix BME280 comments
			384ae774bfc811d332c29111991b1073b8ac1ffd Altimeter: fix BMP280 comments
			df149ecf1c7b74072c3bc1116f0bddf2fcd9fedb Altimeter: fix BMP180 resolution comments
rc		.	696b1cbd77d0da13b67dfaa6430f4f878dc46f42 Altimeter: add BME280 fractional digits
rc		.	398e6b67fab6658c2b0222158cd40a8c976732b9 Altimeter: add BMP280 fractional digits
			4150fa93ae74774034a7a937d1ce71ce80627d25 Altimeter: add BMP180 fractional digits
			0fe4137af6a3ac940959ba53649544cb38efd7a1 Altimeter: add MS5611 fractional digits accuracy
rc			010d49635864e784d8f341b4d01c3eed9fe1a56a Offset was being applied twice when to() was called with a time
			68cde2889e3eeab5e5f2d4ad2e9bb25a9bd9d574 Servo values were being inverted twice when to was called with a time
			841d69bc243550c9cb00ca7c0aaf138e54e2629d ci: run test and coverage check at same time
rc		mwn	291a1dbf29870fd1d590725f420d169b1a77806f Multi: implement standby time for BME280 start up. Fixes gh-1274
			44ed81aeb225d5efa196965439773db3c418091f Altimeter: adds generic Board.Controller call enforcement test
rc			ace218d63363893726c3876e4f7d5ad9ba69efde Altimeter: enforced resolution for meters and feet values
			2de3c7c91aa25a93320eea608d9742608afce9db Altimeter: 100% coverage
			47df3da4c957b7e518d0e6f860189e4bdc40e982 Led/RGB: time/rate etc => duration
rc			3c608c7ef19c34ce143da5b8ef02f0b4ea25cc79 Sometimes I annoy even myself.
rc			a2f9fa701157d3acf4f42b5774bfb025a313c63b Multi: BMP180 notes re: conversion time values. Fixes gh-1104
rc			bf0d1da84897268d5ebe9df522ae354717dccf46 Multi/Altimeter: Corrections to relative elevation (BMP085, BMP180, MS5611)
			9e7f0ee06156ac61d11ad82b69be6e6e9e1c8153 Examples: BMP & MS5611 Altimeter; MS5611 Barometer & Thermometer
			dd7423138a4d123a3ac8440652e3fb1eb9925923 Board: timeout property tests.
rc			3b03090e6909493b0af08e78db1fde98829e772b Made board ready timeout configurable
rc			b85bcebab8969b689c768324cdbb07029b2dfb5a Board: Add some leonardo specific guidance for connection timeouts
rc			ee2f739d7596d9df11dbed0f865e1a6085c4ac02 IMU/Altimeter: Finesse elevations that are below sea level. It's magic.
			9ba3e907608ef65f4aa6ed44f8bb27e6320ecb9b Altimeter: improved elevation requirement warning message
			52376582f5df5019aada7cd5880f75387398daa6 Adding altimeter support
			66a7d80b5ed343de6b9e9bedf35c185ba1109ace Adding altimeter support
rc, rt	hcf	7941d817e4bfa7914940e7a66ebc28acbac74a94 Restrict pingRead requests to 65ms periods (+ request and response time). Fixes gh-896
			85fa2c06397cccdd33d6873bdaea9a49009f965a Update nanotimer and piezo tests to stop failing on iojs. Fixes gh-890
			84ede7b3aeada1d7425a6e505ff86eec243843a3 Fix bug in node 0.12.x where clearTimeout expects argument to have an id property.
			489f19ec28db75c1f27de1328f8a92163ec5eadf Merge pull request #733 from Resseguie/servo-time
			8c7bc21eb88fa01393c61709bd87616acce9f852 support time/rate in min/max/center
rc			d4b402b11ccc16a74d09d946d137678456935506 Getting DS18B20 to work with multiple sensors at the same time
			4587ed9146e1ff70640011b7f81041e6e03e8176 Fix Servo.to(degrees, time, rate) so that if you enter in the same value for degree it returns this
rc		mwn	e5ac3f30493bf02f883681b65f5f12042993b7e3 ten second timeout
			b5cbf4739af5b41c6504db00b9ac5b9cd3585536 Remove the race condition with clearing the timers.  Because stopping the tone was based on a timeout.  Two consecutive notes could cause the first timer to clear, but then the callback would clear the next (wrong) timer.
			8cef9b3ba79050a91cb4b7f1dc5e2a39b257e62e Make sure that existing timers get cleared when new tones are played
			e065515a36a35dd34a6e43ddb0761a2033f318af reworking the test so that the nanotimer can fire and we can test that tones get destroyed
			2d851d1bd93e50a38e360afbe6bdf957fd6e0e02 Make sure that noTone cancels the tone timer
			2395b99ee8350faa4da126fa28fc1ea1683db5d5 Rename timestamp to data and show data instead of this.raw (which doesn't do anything)
rc			ef7424223d6bb6245735968d61ceae64b92f45e2 Support specified time in ms for servo moves. Now compatible with Torque programs
			bff833b5f8efcd57a4f68d23acc8ec838f164b2b Tests for #238. Assert analogWrite not called with NaN when calling pulse for the first time
			be0e428db13f56affd25d5786b22fe3b9f17c41d Rewrite sensor.js to use fakeTimers and mockFirmata
			e12775a9ca4af8f336345a082950f24fc64e647b Update pir tests to use MockFirmata and FakeTimers
			5651d32ef3979503eb2d0a15ae6934f7b0388779 [fix] Sonar doesn't emit timesampt
			b336c8343dae1f5d4748c69136b833d0eef69ded Firmata always wants an options object or a callback otherwise we throw a "Cannot read property 'reportVersionTimeout' of undefined" error.
			5de2e9e12e883fb2dcd358da2823cb7d8dd9b012 fixes for template - didn't have time to grunt docs due to some problems with my macbook
			b9048a29c45cb65aaa8054871f4ff2b589e71c82 clear the previous timer if one exists when calling Led.strobe
			fdfd40f9bc3d06b3779bd8b50cfa804bda2bffed Removed extra LED constructor & timer var. Closes gh-82
			c9a826700e54be30b8e2077310451a2e2ebdb355 Remove unnec. this binding in SIGINT handler timeout
rc			aa6da741bcd0f5c72b16f52881309404a5e4933f Clearing potential hold timeout conflict on buttons due to global holdTimeout use.
			1dec85acc1fc6d07ea0c83ad56db1ccae9e3dc52 Remove microtime from dependency config
			51a98a603aba87644e791e5cbf5fb7916992d843 Initial framework for Board prototype timer functions
			db86d57de639602048437597db94afec84754f54 Consistent timestamp
Results: 3/56

speed			20
rc	mwn	5f94bb571036f19461e6cb747ff962f9df54698d ESC: Removes speed because there is no safe reason to continue supporting it.
rc		f7f1eabb1a4978e020bbb86972f2dad8c9ea8c9f Remove superfluous speed param
rc		fc388cc39b274f98459f83df6a32dda7f9148f86 ESC: Bidirectional speed controller (Forward/Reverse) support. Fixes gh-530
		56c21c615497873fec71324339cf1ad30e639565 added comment mentioning optional speed parameter in Motor.start
		5b49e811afa86ddf9a61221cd6c57427154c9e7b Revert "added comment for Motor.start to mention optional speed argument"
		fe02bde772b4e6614f6bbb7b810892199de3ac4d added comment for Motor.start to mention optional speed argument
rc	hcf	d558abba2450047654b0560335f33e5ce7094ec4 Speed up ESC writes
rc		bd44207cc5a58954b92c56b93533a7996f870052 ESC.prototype.speed(0-100%): additional fixes and tests
		60cc0dd419200a6941cd7400e1e262c79e76f19f Merge branch 'master' of https://github.com/rwaldron/johnny-five into right-rpm-speed
		23546d0556bd9268974568428f58ce9518e37d0e right rpm to speed to rpm conversions
		8435a6f17866078505e1c761e4bc5d66f94f4590 ESC speed values refactor. Uses 0...1 (fractional values) as percent of total speed.
rc		76d6da1ce61ce7a8d49fa2c74ddfd24403ad369f Update motor.speed
		96522392ed9aedda87d6b8f7062136a9de9cef5a Make cw/ccw speeds 0-1. Remove obsolete "fireEvent" boolean arg from Servo.prototype.move
		abc3418c8d76195a803b9338e326ef3607893117 Add speed controller and modify the handling of turn controls to "stop by default"
		71c61b287f43cd03789b9736acd295477baeb707 Merge pull request #133 from reconbot/default-servo-speed
		3fe5e1dbfed744c52697e8dec121a929beeefbc0 Default to max speed when leaving out the speed on servo.cw or servo.ccw
rc	?	d1d9dc8b7b4b5eb5330ade4b2423713ac6f6bbec Allow custom Ping pulse loop speed.
		b73b752644942a4974254f38e22d97ea5e317bb2 Note the default speed of Led.prototype.strobe() in readme example
rc	hcf	00d8d93a60268e6575dfd09b6f50e26f418c229f Reduce the default speed of Led.prototype.strobe()
		06c09b47820d1ac5579f715d36107c25c3e8be3b Servo: switch to use Board.Pin.is__(); Document continuous speeds
Results: 3/20

==============================================

Project: node_ar_drone

Words			Topics
missing			1, 4, 16
		d73074206ee4122ce21f64aa717504f08790226f Fixed missing var.
		0cf48cb5785b50d85ef59ecf201de1a0152342f3 Missing comma
		7ca3214e7f38e985290ab94623e222f89b6022bd Add all missing navdata blocks (`magneto`, `windSpeed`, `games`, etc).
		f0495a401d4778c333e50dcbe21c928406324259 Add note about missing docs
Results: 0/4

errors			1, 5, 18
		aa776a37d28ec3c488a1f6e1d6e6560ad90051b8 Updated to remove listener from socket, forward errors from socket to client
		320c8d447e73b2287c47d1547a71457cb8e9968b Fixed errors in GPS data definitions.
		166a049060e6e7b275e010454f4cfe4e3742c79a Fix uncatched errors when failing to spawn ffmpeg
rc		d1d3dc5dbd855532e54b5bf17a5f5bc08bb789c5 Remove detritus which is causing errors.
		c2c6615979cfd403ed44f0f760a626f855d4f34f Addressing spacing and syntax errors from a borked commit.
		9ead1ed41bb0af1582815c961204afbe4dea53a4 Allow catching navdata errors
Results: 0/6

simplify		2, 16
rc		0d2ba9699b93ec6dd7b93585470d4d38301645c2 Simplify repl
rc		0f97f8cf402adb279aa24acc24bf0bf19cc8833c Simplify code
Results: 0/2

timeout			3, 4, 18, 20
		3cd3037551c6f26b9b6f61a9a2e94e85f54ebae5 Increased delay in test to trigger timeout.
rc	mwn	9495035c4345448e4ae182fde4439ca6d48efcc5 Increased default timeout to 500 ms.
		538e61fc94f464ae920b551ac489bb46abe7df0b Handle navdata re-requesting after timeout
rc	.	c8196ef3fb7628a16a555e1267b02625fc700240 TcpVideoStream timeout handling
Results: 1/4

drop			3
		e9857de828c07f2c3ffc14f4f789740f41e4e111 Merge pull request #81 from janpieper/drop-duplicate-test
		70c4bbc49b076d43a91a17bc9c65144e97372d5e drop duplicate test
		d39daa87b819c3e4ae3d59700f724bbb1c3de3da Merge pull request #80 from janpieper/drop-unused-variables
		e68bdd6395bf9e504063ff098beabb5a79178338 drop unused variables
Results: 0/4

explicit		3, 10
rc		4ec60e035b6f9fe2390d8d533d51e9b6115a2fce remove explicit port bind
		ecb30f10ebafff32989d5b38d5508488dc6f2bdb Allow explicit flag setting again
Results: 0/2

expose			4, 11
		4a40865afd493c9ee911950c474f16aa74270b30 Expose client to REPL
		81c4856f3af876816b0c0a245df26b67c19943fd Expose UdpNavdataStream and add #destroy()
		675343511c606b93bed5a333455907d447cb6ce7 Add PngStream and expose it along with UdpControl
Results: 0/3

size			5, 7, 20
rc		3056077aea721b3e80f81883b30d72d912035d33 add image size option to png encoder, also add frameRate and imageSize options to readme
		936130846deca3a9710cd61f51b3ccfd961e6c7e Merge pull request #9 from bkw/PaVE-headersize68
		67a27926fb3529495c9fcc601fab6fb2484e17ca add test for 68 byte size PaVE frames
rc		77b1d44d32e90f696ef647df4e8752591581bd6b only advance when buffer size allows
Results: 0/4

pave			5, 19
		936130846deca3a9710cd61f51b3ccfd961e6c7e Merge pull request #9 from bkw/PaVE-headersize68
		67a27926fb3529495c9fcc601fab6fb2484e17ca add test for 68 byte size PaVE frames
rc		ca205faa13cecd1b1be95d3565d4f72173c57046 add workaround for 68 byte PaVE headers
		1c3116f8e94b32c82f9748be6be6b1d045c3b1c2 Check signature in PaVEParser
		1e93ca2b1c03c5d6428bd4a649940114900a5120 Add PaVEParser parser and tests
Results: 0/5

wip				6, 20
		16c9605bd1e9335be009e8347fda99dedb2d3c58 WIP commit. Adding tests for 9(?) of the 22(?) new `navdata` objects.
rc		ad95d1ffefc4ca739a14247c1aeea3df694c824f WIP: More Navdata parsing
Results: 0/2

increased		7, 8
		3cd3037551c6f26b9b6f61a9a2e94e85f54ebae5 Increased delay in test to trigger timeout.
rc	mwn	9495035c4345448e4ae182fde4439ca6d48efcc5 Increased default timeout to 500 ms.
Results: 1/2

broken			12, 20
		621dc688b30a1d2e5d07315a8dafcbf9fa71ea96 Skip broken test
		97e8253c7ad17652efea11e5ba9579ff76595fd3 Skip broken travis test
Results: 0/2

fixes			13, 14, 16, 19
		d57b40a0b5d01da460ceeeac8c0f427a972d5b45 Fixes client up/down, left/right, front/back, clockwise/counterclockwise functions to accept 0 speed. Adds test. Resolves #106
		9a5d0a553fd148864deded61b61389be20810740 Fixes a typo
		bdb3d4f9ce0cb36a4db666082ed86fec5ee709d2 Style fixes for sample code.
		7a44599b6f28802981c60bc796b0940d652e94a8 Document how to access the bottom camera, fixes #35
rc	?	59368e95d77fe9694a603b16a703ea1836b81f99 New Client and bug fixes
Results: 0/5

failing			14, 20
		166a049060e6e7b275e010454f4cfe4e3742c79a Fix uncatched errors when failing to spawn ffmpeg
	.	5b3fdb5c3d89ed5571cebd509b0bd3e3e031b30a Disable failing test for now
Results: 0/2

check			17, 19
		b8e199613d88dc4c3315b15df2c5e9a3165c049d check files in examples directory to be jshint compliant
		1c3116f8e94b32c82f9748be6be6b1d045c3b1c2 Check signature in PaVEParser
		86005e83dfa37602112b0b9046d33f5feb4fde0c Check in navdata fixture
		971ed3fb210bd3c4276addc4b4d813b3c616a301 Check in latest stuff
Results: 0/4

==============================================

Project: grbl

Words			Topics
cleaned			1, 2, 8
		91d6de90bdb75c9a73efb6c2acc4c5d3d1314f8b Updated documentation. Cleaned up a bit.
		24ce518fdac4e25b0e16d63d739d74b2313f9137 Cleaned-up limit pin reporting and comments.
		8b5f30685108fa6b0e196f50c26a11670f68a1a5 Cleaned up variable spindle output (PWM). Code and config comments.
rc	hcf	f8dd8fa54d21c17b9aaddb5836b6a8d73d59640d Fix for M7/8/9 modal group checks. Updated AMASS frequency cutoffs and code cleaned.
		a87f25773cfe551509f1f82c9bd997ae33c87aa5 Pushed limits active high option. Updated defaults.h. Misc bug fixes. Cleaned up codebase.
rc		f7429ec79b621d1a4fb4486eac5bd03f6258589e Cleaned up stepper and planner code.
rc	?	9488cb329c72dffc6d48d0b14d4f6c908fc0400a cleaned up function definitions for serial and print modules and added a comment about the deeply flawed printFloat method
		c0b4b8309ab3ca02d3431b4c689be3c45ee2f0bc cleaned up serial completing support for non blocking tx and refactoring formatting functions into a new module 'print'
		8793b555e0ed0352fe2451b173a365b3fc4d4158 cleaned up data types in serial module, all data now uint8_t
		6be195ba38164ae044e31b02e5f8f5ebc641054d cleaned up handling of number parsing in settings_execute_command
		23462de85acc595ba4a36783c3b45743e8c86b26 cleaned up settings.h
		cdcc7bf86ef5a95243dd268e9d99b0332d127c2b cleaned up methods for enabling/disabling acceleration manger
		bf4f75d6320404c097290b8122bd2aa9de6f0393 cleaned up formatting gcode.c
		c8f71cf0332cf592518a3311ab6c3bda49cbac48 cleaned up stepper.c
rc		db193f4336efee8c4d7e48a55dfd1dae34d66330 cleaned up stepper signal in junctions between short line segments
rc	hcf	a42c03601d6ee7dc4267fce5293ad53c0500cffa Fixed a number of bugs caused by using abs() on floats and long ints. Added support for selectively inverting bits of the stepping port. Debugged, optimized and cleaned up timing code for the step-pulses.
Results: 2/16

reflect			1, 19
		4d8fd7f603a761ddf90fd0bb2445bdbf3e21b3ea Updated version number to v0.8b to reflect changes.
		c3fda5ac211cff8b02d011a9ddde50ae8f29ed75 fixed a bug where the default step mask would not actually reflect the real pin out
		9e09a502e9d34413ba1480c30a0d5527fe8025ce updated readme to reflect real state of 168-compatibility
		9a5fed4fda7012f87d48a72c919d92ef6f4b9f70 changed file headers to reflect the totally refactored state of the serial and print modules
		defabc80ed8c42ba9ec57417dd83f736564cfab8 renamed wiring_serial to serial to reflect its complete remake
		68ff56a8b1f81e1a900a1f75434e084997912b42 stepper enable pin now toggles to reflect the active/passive state of the stepper subsystem
		6893463e80a6d0d3726ae4d6c831fc8c17596fef renamed protocol methods to reflect the new module name
Results: 0/7

caused			1
rc		1161056bf25ff13a9031746127233d911aef54ea Fixed a g-code parser issue caused by last commit.
rc	x	a42c03601d6ee7dc4267fce5293ad53c0500cffa Fixed a number of bugs caused by using abs() on floats and long ints. Added support for selectively inverting bits of the stepping port. Debugged, optimized and cleaned up timing code for the step-pulses.
Results: 0/2	[1/2]

changed			1, 5, 15
		27297d444ba8480ee27327c6644c48485601e57d Updated comments. Changed stepper variable names to be more understandable. Added step locking note.
		a2457c4d70b12c587592441df219ca0d9b4d5a23 Changed Stepper Pins
rc		ea09ddba99bf739043161316bb3fa04c671113a0 changed atomic access for updating the acceleration profile the stepper interrupt is only halted when necessary and for the shortest time possible (8% cycle time)
		b4072a3a5e29414e30b75802663f4d3c735a9f67 Changed README to markdown
		ff82489da7773dd9a90e9a0e5bebcd3361411df2 Limit pin internal pull-resistors enabled. Re-wrote read_double() function. Correctly changed all 'double's to 'float's.
		4224ab4999bdcad9cff026ab584e17c4a2fe93ff Minor prescalar optimization. Changed up some defines.
rc	?	bd336867a64d9a22dbbee3fd4fae28c0b894260c changed default fp decimal places to 3
		9a5fed4fda7012f87d48a72c919d92ef6f4b9f70 changed file headers to reflect the totally refactored state of the serial and print modules
		ee3139d283219484d32f779a79310ae3b491f901 changed serialAvailable to serialAnyAvailable which does not calculate the number of bytes, only if there are any at all
		a24fe197200a78b375c5409520b59e39aff7b1ae updated settings version number. Old settings must be reset now that we have changed the format of the settings
Results: 0/10

error			1, 8, 10, 14, 15, 17, 18
		a84aa1800c1feef2bec2808ebe23ff06d14ad69f Fix apparent error in restore masking that causes the call to coolant_set_state to not re-enable the mist (M7) output if it was previously enabled. (#469)
		775acac601558a18633cac158449839738693bb9 Added an error code for laser mode when VARIABLE_SPINDLE is disabled.
		81adc202cd98f288ca4bcfbef4f71e31ce5c104c Soft limit error bug fix.
		39a047a35feddc822d4842d92a3b4f25540bb09c Merge pull request #710 from buserror/fix-directory-case-sensitivity
		9f7f2709912de5633ba50630fe4a523960177885 Fix EXEC_ALARM_* flags: soft limit would lead to hard limit error.
		3392a8b2c89ce28967af52ee365d38c97ef925c3 add/install probe_errors_enabled in mc_probe_cycle
		b89d194466e7f69d7d184a5f8c0df794b8b41682 utilize MOTION_MODE_PROBE_NO_ERROR
		f78eebcebf00319ac2901a6b54430e78d800e837 add MOTION_MODE_PROBE_NO_ERROR
rc		d55f6b938cd54a95e14d94e2ad7730d1aeb772a4 Fixed probe position sync error.
		79e0e45826641077fbd5771a139a3fafaf1927e5 Arc error-checking update.
		60dd609b7956037369d5591bee33b778a6614efd Added Probing to Mega2560 and fixed Shapeoko2 compile error
		0a46dfe0b91d58c8b40cf12252ac67516458bf00 Minimal probing cycle working.  Supports both G38.2 for error and G38.3 when no errors are desired.
		1c4097352dd089d6c445db491e76cc5dc9d4b6f7 Update to fix compile error
		ce45a348db692acbaa3631bbe095af65e270f690 Merge error fix.
		567fbf93ed6b8fb4e305c420e1ae5387547ff047 G54 work coordinate support (w/ G10,G92.1). Re-factored g-code parser with error checking. Minor compiler compatibility changes.
		5f09dba95d21707ccf0a1a7261f75f0942f33ea8 Merge pull request #34 from beardicus/pulse_error_msg
rc		d3f1f82e5f65e83198b3ef0f013ed7c77dbc120d added error message for step pulses < 3 microseconds
		f4c1cbac3c5e0ddfbdd4e9d095420f8b11a4eded added a fix for division by zero errors that would occur on very low feed rates (thanks to Arthur Wolf for hardcore investigation)
		60f417b57021d5d72ca1fd3cb8fa936b842f96e0 fixed a double rounding error compensation bug in mc_arc thanks to Etienne Chové
		31635481ad10a483427067a79307c1f9a3dd117f added informative error message for people building 0.6 for atmega168 (impossible)
		dce597be45b0cb054159055aeb9d9919e4785b82 corrected the handling of status codes so that 'ok' will not be default response in the event of an undefined error code (untested)
		9b022a6f4faf6e3786ed904547b011dcfb78832c minor tweak eliminates 'ok' message after errors
		682e23eb7b1fc46fb9d9e99b96f780ab398cd571 added error messages and dropped echoing of command input
rc	.	b44577f69f136d254ee594eec39a47a395c40ae7 small error in trapezoid-calculation
Results: 0/24

refactored		1, 4, 7, 12
		bf5fc48074f743f03cfd31e42738de0f511313a4 Refactored g-code parser. Saved 60bytes flash and some ram. Edited Readme.
		b04faaf0d324db2875606bb4d308bcd5c3eaff3d Addressed much larger flash size with avr-gcc v4.9.2. Refactored reports to save 160KB.
rc		d27dd13a54badd0f8ecb21b3c06dbde7a2ea8cd3 Fix bug with premature step end. Refactored _delay_ms() and square() for better portability.
		f0843db46e953beda585846c87c0c11fdabf95a9 refactored printIntegerInBase to work without a buffer + minor cleanup
		69be1240be4ea68779eebbda0670ab0216428bdc refactored a complex comment
		9a5fed4fda7012f87d48a72c919d92ef6f4b9f70 changed file headers to reflect the totally refactored state of the serial and print modules
		9876e14f0be06ccde0b5514164142cd7161e8e1c refactored handling of settings '$' command out of gcode module and into settings module
		a4c64945e08ae8fcd8b034e4cce9aeef98792997 refactored stepper_plan -> planner (untested)
		c42741032fe699c3cd37f4e5d8dd91dc9c5a20aa Refactored line buffering to eliminate state from motion control and centralize tracking of position. UNTESTED: NEEDS TESTING
		6d3ff506e86a8c4dd638e2791520a01d0fab33ad refactored compile time settings back into a new file called config.h
		49a16cb777e8ca4e5c62665436ac29b7021c0bf9 refactored block buffer into separate module motion_plan pending the addition of the actual look ahead planner
		58ad1ba50933ef048b62552504408bed54f81eb0 minor edits after verifying refactored grbl on real hardware
Results: 0/12

override		2
rc		5967839ab38f8e984a384db1f64e781cffb9e739 Improved fix for rare lowering feed/rapid override bug.
		477a94cd4965a3442e88cd0b69d95ced7452d2c8 Hot fix for rare lowering feed override bug.
		beaa40583c241f42035e8cadd5fba4319e3d0618 Tidying up parking override control implementation
		e455764079ccfa9ae277a8fa0078b0dbb36f3a51 v1.1f. Parking override control. Spindle enable pin option.
		3854d200bb68fcf3ca40467c89d786fcd405284d Mandate all probe cycles ignore feed overrides.
rc		cc4df3e14b74350bf8344f4a27e1e54af86a5e14 Acceleration independence installed. Initial re-work of planner for feedrate overrides.
Results: 0/6

cleanup			3, 5
		5406fa939a1fd669fd58b5509e7a9a46ee975d47 cleanup global var and push probe mode into probe_get_state
		0894183991bca4c5d7c70de130c561c6d23f343b Pin map definition cleanup.
		9141ad282540eaa50a41283685f901f29c24ddbd Third time's a charm! No more deceleration issues! Updated grbl version and settings. General cleanup.
		f0843db46e953beda585846c87c0c11fdabf95a9 refactored printIntegerInBase to work without a buffer + minor cleanup
		ff73645a14ef72de7f2a180fcdb9b6c5394ea953 cleanup, protected some more module variables as static
		d2cbca36e89c408bb86de71eed79858e88905e3b cleanup
		5f005f59f12178e9abe696445926153c4baf8150 cleanup
		d0f64d8f65923be9abd16139f185ce2d374ecaba fixed the inches->mm conversion bug and some general cleanup
Results: 0/8

tidying			3
		beaa40583c241f42035e8cadd5fba4319e3d0618 Tidying up parking override control implementation
		d85238cc9b70abc94fd4f07e720f8090468d383c Homing search sequence now compile-time option. New defaults.h file. Tidying up.
Results: 0/2

optimization	3
		5eee10845bd1ea825f71228ab7131d068bba5fa6 Pin state reporting of all pins. Flash optimization.
		2dc920a8e575faa47eb0ceed79efab7242f28605 Planner optimizations.
rc	?	4224ab4999bdcad9cff026ab584e17c4a2fe93ff Minor prescalar optimization. Changed up some defines.
		6152d16205ebd153c1c4414a3078c7753f91d501 circle buffers now power of two size and indicies are unsigned to help gcc make a few nice optimizations
		5880e55ce997227501f5bd90423974a7be6b6f03 pcomplete, fully untested, support for accelleration management with look ahead optimization, finally
		b628a4aabfdca9ebd4a9783c1721a3ae89999de2 added basic accelleration management with trapezoid accelleration profiles but no look ahead optimization (coming next patch)
		df243d2490f176254f5d3fad79f6bd71926aa883 successfully maintained 30khz, lots of optimization of code and buffering allocation
Results: 0/7

disabling		3
		2c913a00bd322d17a4280cbb3eac0faa711fc86b acceleration-Grbl now works with atmega 168 by disabling arc motion
		67d7607e60855370c14ef679e19fedf6b318282c acceleration-Grbl now works with atmega 168 by disabling arc motion
		cdcc7bf86ef5a95243dd268e9d99b0332d127c2b cleaned up methods for enabling/disabling acceleration manger
		4dbe7c4833f63c97968823a251929eb9bec0515b added high-level api-call for enabling or disabling the acceleration manager
Results: 0/4

size			4, 18
rc	.	6e3fb6bd13e3c8a0b5ecfe26bdf5b36c8f4e7f82 Improved constant laser power per rate mode. Re-factored for flash size. Minor bug fixes.
		b04faaf0d324db2875606bb4d308bcd5c3eaff3d Addressed much larger flash size with avr-gcc v4.9.2. Refactored reports to save 160KB.
		fd02c3a47ec4eab48ffd87ac1720e81ca03c0cfb Updated README with new logo sized for github.
		24280f95a5b0c257b73a1755df376de44acff271 remove mcu argument for avr-size in makefile as it is not present in GNU Binutils 2.22
		d39abee37de5557f11f3ba9a2c41c8b5d6f5d615 fix command line parameter for avr-size
		6152d16205ebd153c1c4414a3078c7753f91d501 circle buffers now power of two size and indicies are unsigned to help gcc make a few nice optimizations
		2992683c8dd68546ac85bd7d475bff9df1578622 optimized for size and did some housekeeping
		05bacc436e7ede1a760aac4f064d81e74af8b7c1 optimized for size, shaved 2k
		5f5bd35ddb48b0ff5bc89648c85cf93680c79235 minor optimizatin for size
		0c8004357aa01487687ea804bf79c1b8b906d3db optimized arc code for size and speed
Results: 0/10

edit			4, 6
		bf5fc48074f743f03cfd31e42738de0f511313a4 Refactored g-code parser. Saved 60bytes flash and some ram. Edited Readme.
		39cf82294439c7e7b1599b9f919d27290ed7a5cc Edit hard limit check at start of homing cycle
		29f914391dee2f80b4a4c92971d1c556f239fcd8 peh. Missing edit II
		bdeb551ea202f77f162e2ad7b460dc913c9ecb66 missing edit
		35f499c00c2c703f42eb91963dedd72ae3b2aabd minor edits
		0ac1731488e31737384db1146b9d3e498bd123c3 minor edits
		58ad1ba50933ef048b62552504408bed54f81eb0 minor edits after verifying refactored grbl on real hardware
		01ad93fbedbe62dd8043b3df887f077573e9fdb0 minor edit
		e8f94e6a87f3d8755ec8217fd0edf8ff89391efb removed void credits
		bf38fae67bfe95b10b73e199850479267ffaad78 minor edits
		9e6d62e531f63eb62fad076f2a40f94bfa40885a tiny edit that saved a lot of bytes
		8f3a69b37ed30cc1694cb38432579e64d6f0f2a6 edit
		02f6699b0aaf3feac3380a71fcc663f984fe02ac minor edits
		73a357e512114f16822514f32ba4ea13545b9e6e minor edit
		2207acdf2bb7a2cfa9c031c743acd6b9188f401f minor edit
		3ead6a02e743af8b1cda4beddc359a2614c4bbf8 minor edit
		bd9c1a31f6efce93975491b754c318240b435032 minor edit
Results: 0/17

edits			4
		35f499c00c2c703f42eb91963dedd72ae3b2aabd minor edits
		0ac1731488e31737384db1146b9d3e498bd123c3 minor edits
		58ad1ba50933ef048b62552504408bed54f81eb0 minor edits after verifying refactored grbl on real hardware
		e8f94e6a87f3d8755ec8217fd0edf8ff89391efb removed void credits
		bf38fae67bfe95b10b73e199850479267ffaad78 minor edits
		02f6699b0aaf3feac3380a71fcc663f984fe02ac minor edits
Results: 0/6

speed			4, 15, 20
rc		790c666ecbe0775019ee9deef51c27db33409ab9 New nonlinear spindle speed PWM output model and solution. Updated scripts.
		498dd625728aa6c0e49847bfa98b7720c6f7c763 Spindle speed close to minimum fix.
		6ab3cfbe7da3fd73508bb3e8422e45bcf5ae9def Spindle speed bug fix.
		5bfc3a194507f7c977da0221820fc6e4aaf952b8 No variable spindle and spindle speed fix.
		a0f430d18816a466a83fa523b7971522959e5353 bugfix: uninitiallized curr_block->new_entry_speed_sqr lead to step loss in some cases
		2be0d668722ed42af66a4bdab71cda672189ff73 Fixed long slope at deceleration issue. Moved things into config.h. New MINIMUM_PLANNER_SPEED parameter.
		b8eee5ac9a403b84de4ddc86b824606e06390d8f clamped safe speed to 100% of nominal speed. Fixes a problem that might have spelled trouble at very low feed rates
rc		fc1c1b7e093b4c9a85a8e8d3cacf6b51bb6ed82c corrected speed calculation in planner (untested on hardware)
rc		f95f48763a426bc0f7a60cd6330c20d0381875a2 corrections in planner, including speed estimation
		59a9b640876c4abb8a25560cde99fd403f6b4f59 removed a grave little bug in the planner and added a baseline safe speed so that motion sequences do not attempt to go to speed 0, but to a safe, higher speed based on the max_jerk setting
		0c8004357aa01487687ea804bf79c1b8b906d3db optimized arc code for size and speed
Results: 0/11

improved		6, 12, 13, 19
		5967839ab38f8e984a384db1f64e781cffb9e739 Improved fix for rare lowering feed/rapid override bug.
		6e3fb6bd13e3c8a0b5ecfe26bdf5b36c8f4e7f82 Improved constant laser power per rate mode. Re-factored for flash size. Minor bug fixes.
		8b76a39d5dfd31cc5e62ac6083118068354a472a Improved option for v0.9 GUI compatibility.
		d034dc21817059a0ec2e679207ebf532212932d9 Improved homing limit search handling.
		4c6f5bec481177ab32086fefb03e6e83a1720b2f Improved homing cycle. New settings: homing enable/rates, debounce and step idle lock time.
		5c2150daa9b6ca9c7f3be32f37907cf1f7b46f6f Significantly improved junction control and fixed computation bugs in planner
		2ff680a12584c7683f6228921356430dc5740c77 improved some defaults
		ba13ddadd0390befd0d659c879558572e246d049 refactoring that improved compartmentalization between stepper and stepper_plan modules
		36fd3a9bfbc858997b297983569112dc9e223e68 improved the serial protocol, added some debug pins for a while
Results: 0/9

rate			6, 7, 14
		6e3fb6bd13e3c8a0b5ecfe26bdf5b36c8f4e7f82 Improved constant laser power per rate mode. Re-factored for flash size. Minor bug fixes.
		25cdeb830b5e52d90ae9e34aa4696be58338c193 Splitting Cpu map into separate files.
rc		ed417220e1854be9fdda36b7ffb4b3033f7b2492 Realtime rate reporting. Updated decimal places.
		8c9f3bca659f53790f25008f88c3ae9d53a86d57 Total rework of simulator for dev branch.  Create separate thread for interrupt processes.  Tick-accurate simulation of timers.  Non-blocking character input for running in realtime mode. Decouple hardware sim from grbl code as much as possible. Expanded command line options. Provisions for cross-platform solution.
		cc4df3e14b74350bf8344f4a27e1e54af86a5e14 Acceleration independence installed. Initial re-work of planner for feedrate overrides.
rc		e6ad15b548c65bf64c5fc733329e0ed9ebfc0e27 Tweaks. Seek rate updates when set. CCW arc full circle fix.
		b3b454ee770d708cc0035c2768387cc21aedc1db Generate header dependencies and use them in Makefile
		4c6f5bec481177ab32086fefb03e6e83a1720b2f Improved homing cycle. New settings: homing enable/rates, debounce and step idle lock time.
		d9a7fc4680c2228607c4833d41004b89883ef7b8 Make sure we don't accelerate above the nominal_rate
		f4c1cbac3c5e0ddfbdd4e9d095420f8b11a4eded added a fix for division by zero errors that would occur on very low feed rates (thanks to Arthur Wolf for hardcore investigation)
		b8eee5ac9a403b84de4ddc86b824606e06390d8f clamped safe speed to 100% of nominal speed. Fixes a problem that might have spelled trouble at very low feed rates
		9f5365aac9ed8b79e767d8a811fa1a01f74ce75d fixed a bug where F-commands never would modify feed-rate of G0-operations
		49a16cb777e8ca4e5c62665436ac29b7021c0bf9 refactored block buffer into separate module motion_plan pending the addition of the actual look ahead planner
		f93d0e8132b6eef2e18bf13c0521b7e0cb9d7508 completed support for separate feed-rate for G0-operations
rc		960444fb9780d150b7a8277e03d0ec51e626b9cf fixed feed rate calculation
rc	hcf	ed400693b3e58373743e00b0e2f1051817605a1b fixed feed rate calculation
rc	?	d012440518695d44ad410adfe905b12d385b1a20 presumably fixed the feed rate computation
Results: 1/17

computation		6
rc		5c2150daa9b6ca9c7f3be32f37907cf1f7b46f6f Significantly improved junction control and fixed computation bugs in planner
rc	?	d012440518695d44ad410adfe905b12d385b1a20 presumably fixed the feed rate computation
Results: 0/2

clean			7
		91d6de90bdb75c9a73efb6c2acc4c5d3d1314f8b Updated documentation. Cleaned up a bit.
		24ce518fdac4e25b0e16d63d739d74b2313f9137 Cleaned-up limit pin reporting and comments.
		5406fa939a1fd669fd58b5509e7a9a46ee975d47 cleanup global var and push probe mode into probe_get_state
		8b5f30685108fa6b0e196f50c26a11670f68a1a5 Cleaned up variable spindle output (PWM). Code and config comments.
		f8dd8fa54d21c17b9aaddb5836b6a8d73d59640d Fix for M7/8/9 modal group checks. Updated AMASS frequency cutoffs and code cleaned.
		a87f25773cfe551509f1f82c9bd997ae33c87aa5 Pushed limits active high option. Updated defaults.h. Misc bug fixes. Cleaned up codebase.
		0ac6c8719613c14534c77e8cbbe85ed4912ea297 Planner function call fix. More clean up.
		f7429ec79b621d1a4fb4486eac5bd03f6258589e Cleaned up stepper and planner code.
		0894183991bca4c5d7c70de130c561c6d23f343b Pin map definition cleanup.
		9141ad282540eaa50a41283685f901f29c24ddbd Third time's a charm! No more deceleration issues! Updated grbl version and settings. General cleanup.
		fdc90f1821f1f5edb7756fcddce75b4b4fbf6bbf Removed comment and block delete handling from gcode.c. Parser expects clean gcode.
		f0843db46e953beda585846c87c0c11fdabf95a9 refactored printIntegerInBase to work without a buffer + minor cleanup
		9488cb329c72dffc6d48d0b14d4f6c908fc0400a cleaned up function definitions for serial and print modules and added a comment about the deeply flawed printFloat method
		c0b4b8309ab3ca02d3431b4c689be3c45ee2f0bc cleaned up serial completing support for non blocking tx and refactoring formatting functions into a new module 'print'
		8793b555e0ed0352fe2451b173a365b3fc4d4158 cleaned up data types in serial module, all data now uint8_t
		6be195ba38164ae044e31b02e5f8f5ebc641054d cleaned up handling of number parsing in settings_execute_command
		23462de85acc595ba4a36783c3b45743e8c86b26 cleaned up settings.h
		ff73645a14ef72de7f2a180fcdb9b6c5394ea953 cleanup, protected some more module variables as static
		cdcc7bf86ef5a95243dd268e9d99b0332d127c2b cleaned up methods for enabling/disabling acceleration manger
		bf4f75d6320404c097290b8122bd2aa9de6f0393 cleaned up formatting gcode.c
		c8f71cf0332cf592518a3311ab6c3bda49cbac48 cleaned up stepper.c
		d2cbca36e89c408bb86de71eed79858e88905e3b cleanup
		5f005f59f12178e9abe696445926153c4baf8150 cleanup
		0be21a903443d16684354523af931b3233f006f2 eliminated an annoying constant that broke my cleanly layered abstractions
rc	.	d0f64d8f65923be9abd16139f185ce2d374ecaba fixed the inches->mm conversion bug and some general cleanup
		db193f4336efee8c4d7e48a55dfd1dae34d66330 cleaned up stepper signal in junctions between short line segments
		7e152851cca82ffa59d8d4a9cfa3f0b66f2df92b general clean up after refactoring
rc	hcf	a42c03601d6ee7dc4267fce5293ad53c0500cffa Fixed a number of bugs caused by using abs() on floats and long ints. Added support for selectively inverting bits of the stepping port. Debugged, optimized and cleaned up timing code for the step-pulses.
rc	?	c07a32258950da2de2bb0c809e14ab9d491b67aa fixed buffering of pace changes and general cleaning
Results: 1/29

tweaks			8, 15
		82075627b3b26511c0ce9f585335b677dcc81ae9 minor tweaks for mingw.
rc		e6ad15b548c65bf64c5fc733329e0ed9ebfc0e27 Tweaks. Seek rate updates when set. CCW arc full circle fix.
		5e7a4b3ba8a032aa6880d7eb8224a37819f0286c More tweaks. Removed dry run. Trimmed all messages to save flash space.
		8c0106c247134383dc47174ae005c9242e9be643 Tweaks and minor bug fixes. Added purge buffer command.
		a9d41c6c646d68f9b91d0bfda72deca2faf3c258 tweaks and bugfixes
Results: 0/5

optimized		12, 15
		9ba117c1bb46bdcc4e702b4e3439e29d71c900d5 New stepper algorithm. Optimized planner.
rc	x	a42c03601d6ee7dc4267fce5293ad53c0500cffa Fixed a number of bugs caused by using abs() on floats and long ints. Added support for selectively inverting bits of the stepping port. Debugged, optimized and cleaned up timing code for the step-pulses.
		2992683c8dd68546ac85bd7d475bff9df1578622 optimized for size and did some housekeeping
		05bacc436e7ede1a760aac4f064d81e74af8b7c1 optimized for size, shaved 2k
		0c8004357aa01487687ea804bf79c1b8b906d3db optimized arc code for size and speed
Results: 1/5

corrected		13
rc		8c103d09eb5e7be5211c3156558725926253b5a7 Corrected units of default acceleration values
		6f27e2cdb1625657ccb8a96c3fbc9bd637f29170 Corrected a minor streaming script character counting bug.
		b5cc0331507510b1121f27f56076efd38a0108d4 Corrected clearing of target and position variable for the go home routine. Thanks Jens!
		804837a111e8fddb87074f12d8c39e1d5649d265 corrected an outdated comment
		dce597be45b0cb054159055aeb9d9919e4785b82 corrected the handling of status codes so that 'ok' will not be default response in the event of an undefined error code (untested)
rc		fc1c1b7e093b4c9a85a8e8d3cacf6b51bb6ed82c corrected speed calculation in planner (untested on hardware)
Results: 0/6

realtime		19
rc		ed417220e1854be9fdda36b7ffb4b3033f7b2492 Realtime rate reporting. Updated decimal places.
		8c9f3bca659f53790f25008f88c3ae9d53a86d57 Total rework of simulator for dev branch.  Create separate thread for interrupt processes.  Tick-accurate simulation of timers.  Non-blocking character input for running in realtime mode. Decouple hardware sim from grbl code as much as possible. Expanded command line options. Provisions for cross-platform solution.
Results: 0/2

==============================================

Project: PX4-Autopilot

Words			Topics
size			2
		2f99857b0a9c804daac0c252a9f738ff2cd9cd3e systemcmds/bl_update: add CONFIG_ARCH_CHIP_STM32F7 file size limit
		c50840497513d1f506dcf9ca76dadc1c22e51027 boards/px4/fmu-v4pro: fix incorrectly sized FRAM
		523578d2ce1da879bbb48e46049411d21d9ef67f Increase stack size of wq:manager and worker threads for 64 bit targets
		733b1e9e678684e6886bdf80ba5b2d9669dc7771 Increase logger stack size for 64 bit targets
		8cf121fc9d537014bc3bfd840d371a25943ac7bb Increase dataman stack size for 64 bit targets
		9c36236565d11fa3ad97d151a9e1ab3f34332867 ekf2: increase stack size to 3600
		f80f0e6c7ecdb3b612f8ee0bcc2eacff17e66a6b Jenkins: HIL set CCACHE_NOHASHDIR and remove obsolete "make sizes"
		10019bbccc9b701677d7503c132d083466a78bc6 fmu-v5_uavcanv1: Increase CAN FIFOSIZE to 32
		fce809841f3a677d389f25a029c6abec8590a142 uavcan_v1: Revert HeapSize to 8192
		c9f743049bf4de268d4d76af349355c3d1ca2988 uavcan_v1: Increase _uavcan_heap size
		39909128ecb09b4493b13d7c67373d59d7bd4f98 micrortps_client: increased stack size by 250B
		4ac57d3bdee450372ba974a0cca4b63a067a00d1 EKF: increase fault flags value size to fit current flag bits (> 16)
		f0f16b9cc5be281b84b7c425bc16fff29362dbd9 mavlink: streams fix SCALED_IMU size reporting
		13e0b747820d2f25afaca25ec55a523a6a23db29 MAVLink: Increased stack size This is needed for MAVLink shell and UAVCAN.
		45d060362773360737b76c87fb1a9e688dd953f6 micro_hal:Fixed DCACHE_LINESIZE abuse
		ed8f6aa8fe9cccbf6be0ce49a0a2be6660fe441e gyro_fft: fix bucket_index size
		41b56f20b853c12a944da87ee0dddce77247f561 mavlink_messages: fix raw rpm message size
		90c366f369cec69468e5a05518f7e4b57ed56dc2 uORB::Publication*: template parameter automatically obtains the queue size according to the type
		7d6f8dc8821989cb3d6764a6d85fcb2d839809d4 mtd:Allow a Board to set the partition sizes.
		68703135c30db477806a9dec02fc9f9f74d9c155 bl_update:Respect page size if it matters
		ec7108892bbede47c50506bf3b20659521c0e785 batt_smbus: fix potential hardfault by checking buffer sizes (#15789)
		c57a48682e527c282041d82129a9f82acb636005 Tools: ecl analysis handle estimator_innovations/estimator_innovation_variances size inconsistencies
		44c877c603ec51aafcaf40880157c772b61c65de sensors: size sensor error_count consistently (uint32_t)
		b2845c60d3c8ff93578526f6dbdb24574ae41eee microRTPS: move buffer size to transport
		9aa7991654b9cae0780195a808578c2971e716bf geo_lookup: upgrade table size (2 bytes per element) and add testing
		3f19335f085adc0f8ceeb6b154b2f2e2af4a2d31 drivers/imu/invensense: FIFO_MAX_SAMPLES include sensor_accel_fifo in sample size limit
		0becd29b46141db2a2ee479b23b2d162c73b493f fix mpu9250: wrong buffer size
		f8db9c4f1b336ff0ea60fb2d8316a1d7742f2da6 fix mpu6000: wrong buffer size
		a96dc9c0c8e3d75c2a84496abecbf160ce8e1919 navio2 adc fix strncpy size
		9b707eebc728a087842b80c5644bb5d5d66f8068 bmp388: use default stack size of 2048, fixes stack check failure
		2757647897a6f1c3451180b4c242aec25185523e refactor logger: reduce required size of WrittenFormats
		f9e8f615e3e6e37ff551055728842a188a6362d7 holybro_kakutef7 sync INTERRUPTSTACK, HPWORKSTACKSIZE, and LPWORKSTACKSIZE with v5x
		bb09ac0c6d0a7f55f2338defae0b7c64cf9cab42 modalai_fc-v1 sync NFILE_DESCRIPTORS, HPWORKSTACKSIZE, and LPWORKSTACKSIZE with v5x
		6854b14dd6f0d6f7445db97ff5fb31ef00844d54 esc_report: remove unused fields to reduce message size
		7984c0c91050ccf0136bceaa9547c049fbd2d66f px4_work_queue: stack size rounded to page size on posix
		617f37afbf828a9dc75a1584cbfe3128fa5f101e mixer_{multicopter,helicopter}: add buffer size check
		3234aca53b04a0bd555da45afb25477c070c7b2f px4_micro_hal: add PX4_ARCH_DCACHE_LINESIZE definition
		4e946d5bcb8bd0e475b0f39c1b925108f024fc9e implemented synthesized magnetometer Z measurement - calculate a theoretical value based on the knowledge of the direction and strength of the magnetic field vector and X/Y sensor measurements - needs knowledge about location on earth to work
		150b5df7cb8852d1305c476140ce51f4a218c9bc change size of reaction angle
		6d8d8e3c88089f16cd59c4c70d35a06785a5dbfb MC gyro cutoffs - Reduce IMU_GYRO_CUTOFF to 30Hz and disable MC_DTERM_CUTOFF. A low gyro cutoff is needed for most medium/large size drones as the structural natural and blade-pass frequencies are low. A higher value is still desirable for small platforms surch as racers or well isolated autopilots and should be tuned by the user. Specific values for config files are untouched. The cutoff filter for the D term is disabled here as the required cutoff frequency for the default D term of the rate controller is higher than the gyro cutoff. In that case, enabling the D term cutoff would just add some undesired phase lag to the derivative.
		a6adc64569903e61c38cf000da9f8e86c4b76a3a check CONFIG_TASK_NAME_SIZE for print_load_nuttx
		fb04a611c52af547de4ec27f607d9962fcbaacec gps: reduce stack size
		746250d86d1d05fce3d416170101e22b62e15cbd use static_assert over covariance matrices URT array size
		7db57bedb7c8e85d1ee675faa68bd0d3850e5fe6 assert over the covariance matrices URT size matching
		eb4f847322fd059292ade634ed27642c9148d1a6 nxphlite-v3:Set UART4 to have the same bufffer sizes as TELEM1
		790356ef6ddd54b002e4d887a6872fbd270020e1 NXPHlite-v3:Ensure bin file sizes in mtpl of 8
		cac84e14247f06b258099364aa4b5103d0295c22 px_generate_uorb_topic_helper: do not account with the timestamp, so the struct size matches
		d04aef65d0e32ece55ec57b9b8d3445c114410c5 estimator_status reduce size of n_states
		e2333d7d5c8e3ebcc1de77115849bb6284af73f1 GPS driver: Keep stack to required size for app boot
		9bdc9aada28758668bdbbb7fa2a044be3f7ae448 mc_pos_control: use defines for point size and number of points in trajectory_waypoint
		c84e651edde84ce873fc453e8dd69755ec678d0c trajectory_waypoint: add defines for point size and number of points
		9386ab6afedc811bdb30b0d5790688b1a1e8082f Breakout rc.thermal_cal from rcS and group set/unset parameters at the beginning and end of the rcS script. Revert commit 2a3d66cf457e9b7879276bd01be7936876b56147 to reduce px4fmu-v2_default flash size. Standardize tabs/whitespaces across all files in the init.d directory.
		2f553b956d43e407dd3e7a533d4a399cbd270bfe dataman file read fixed size buffer
		62700046ebc14163ecfa8250ce6f24d1c9fb876a Jenkins bloaty sort output by size properly
		0baf3e39aa6958e86548ad7c191b63f6e8b5c61f tests clang-tidy ignore eadability-function-size
		d585218060560af7002ff558b454a2cf02ffca0b tests clang-tidy ignore readability-function-size
		372a519ac419e6760abb6edc502dfa5465505906 wind estimator: added airspeed and sideslip gate sizes for innovation tests
		6d00de7b2567bbb01106c21ae5c020e8b6ebf79e Uploader: Move flash size check into appropriate bootloader version region
		f561d16334862bead540f993e172777586cba435 fix param_export: off-by-one buffer size
		f962e9826b099d49a1c22fee0abc74abccea0ff1 param_export: reduce bson buffer size from 512 to 256
		e7fe8f7268bb1952b0169ef63b7f0ba2ef23de2a Uploader: Enforce matching maximum flash sizes
		30414381320b907ce9087e986dfb85c2e1fb582c Zubax GNSS: Store maximum flash size
		e2b2f97d0d7303e93ce816ca1aff68b9b1322e0d TAPv1: Store maximum flash size
		9a7f99f3cde60a3231571ca97f892715c49b1ae7 S2740VC: Store maximum flash size
		0bfd2925bfb9393019152022fd78d91ddcbc45c1 Nucleo: Store maximum flash size
		d1d367011ec9f5fc09b200dfb7fcb91e20f32959 IOv2: Store maximum flash size
		d26e037df4eae347a7ac8c4a7cc282c6c8566c62 FMUv5: Store maximum flash size
		3bfa194933ea0a69b9d51ce01d5e3b9c6c2a3558 FMUv4PRO: Store maximum flash size
		18715ebd80c31352f4a908322c518ab7a188870c FMUv4: Store maximum flash size
		c0efaa4ca917815d42155049c8535d626d45311b FMUv3: Store maximum flash size
		6fbfde9ec3a4941b3f9618945e75d532de72536e FMUv2: Store maximum flash size
		d22398f73363476ae6a33dec860ae122902b9175 PX4 FLOW: Store maximum flash size
		cd0fbb3cd28df97c31d39a3d25dfaf582cc42a7b PX4 ESC: Store maximum flash size
		03c5e9172dbd9977c213e34e9de2080d4467d4f5 PX4 CAN Node: Store maximum flash size
		bb3746e7109aa21a4a4f0e97e0e7125fc884f21d STM32 Disco: Store maximum flash size
		c3f630ca14409fa367fb3a244e512b5bfb364575 SAMe70: Store maximum flash size
		18d13498de7e8fdacfa65b97e1208111e6f7e870 NXPPHlite: Store maximum flash size
		ca472ebfaf6c091905753d51a3437f82dd5c910e MindPX: Store maximum flash size
		7277d72db50e6892a67305ad17ee4fc19a493812 ESC35: Store maximum flash size
		5d186f374b6e0c6bd5e4c0a2a2a5e1c2e11cc69f Crazyflie: Store maximum flash size
		f7b4f13e8100820b19fc0360d877183e1575ac91 AUAV x2.1: Store maximum flash size
		2ba7b41f5cd47c9b7fd3d643b2f9a66705250481 Aero: Store maximum flash size
		5072c0b5ae6ec46bc8fa868b05079bf5233313f4 Aerocore: Store maximum flash size
		859b19db9a5ee41c41946852bcb0d56ba8da6297 uORB.h reduce orb_metadata field sizes
		5bdc6a4eabede2ba54ad570abea6790fb64aa566 Jenkins correctly archive artifacts and print sizes
		fa929322ab7eed7ae4998d9d5c248951eb9026a1 load_mon: remove usage of CONFIG_RAM_SIZE
		4e7bd576cb160903f9370fef0987232b2663bbd2 generate_listener.py: generate one function per topic to fit function sizelimit
		21dec52be0e745dfd2f9b301f8f27d956b280218 px4io-v1 nsh add CONFIG_NOARQARG to reduse RAM size
		1e42d523da8d8852d52d922a9e9fca75d6a7c122 mavlink main return main loop delay proper size
		131496ce792f2b1db97ed438ff6903a634dc7aaa Reverted change to stack size for mavlink module
		7893623d750d8133f82509cccd66e678303f651b fix dumpfile: specify stack size
		6b3a665e3393f12a8f995a9809d70c8902cb0b6e Backport Upstream SDIO 1-bit and 16G Size Fixes
		635d861b76d4810382b8cc39bb25fbde89fb08d9 Backport Upstream SDIO 1-bit and 16G Size Fixes
		3ecb07f5db426b575d3b8f0beec97d9fba9d4e3c px4io-v1:Sync with px4io-v1 CONFIG_USERMAIN_STACKSIZE
		f77a9bb897b6b572a3f50829b68e8d02fd57c3ed px4io-v1:Limit CONFIG_USART1_TXBUFSIZE to max debug size
		3eb909823ee5424e4906b18f94c35ce8b6813e61 px4io-v2:Limit CONFIG_USART1_TXBUFSIZE to max debug size
		05ceeec1ba4efb0313af059bdb91a5db374f04fa piofirmware:Base the debug message buffer size on the defconfig
		061bff14c8b3b03ae71f8fc2e462819b505e7296 rpi startup configs: set logger buffer size to 200
		b76e7347b526cd2b2421c12aaa50b4b0fd75d292 px4fmu-v4pro nuttx config: reduce CONFIG_CDCACM_TXBUFSIZE to 2000
		9f9477e1566cf598df7284e9c6c6bafb1c9f65e9 px4fmu-v4 nuttx config: reduce CONFIG_CDCACM_TXBUFSIZE to 2000
		a18fdd2e26ba05aae241fb6be26f0da22bfb903b px4fmu-v3 nuttx config: reduce CONFIG_CDCACM_TXBUFSIZE to 2000
		40240e83b7ec188909ff077e89d296f3e1288af7 px4fmu-v2 nuttx config: reduce CONFIG_CDCACM_TXBUFSIZE to 2000
		0392efff9442a2ee7fd309b251b21776caf095f6 px4-stm32f4discovery nuttx config: reduce CONFIG_CDCACM_TXBUFSIZE to 2000
		ff7d062987494754192bec15110cb1f0b4c3a9b9 mindpx-v2 nuttx config: reduce CONFIG_CDCACM_TXBUFSIZE to 2000
		6f74994c2a97bb10015b8e7480d5c4cafeb6702e auav-x21 nuttx config: reduce CONFIG_CDCACM_TXBUFSIZE to 2000
		bb3b26e00fac33a263c80f584a3e841393b73498 logger: adjusted log_writer_file stack size
		75e7cfcbe833122172c327bfe1cc205b01ac7fe6 modules: flashparams: Change size to uint32_t
		8d5ba63686a3f805ed560a6d2af3ba969686ad94 tap-v1 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		374dc1be4cb1ef9cf2fdc1f966b5b1450642b00d px4nucleoF767ZI-v1 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		d25218eba2bba17e785c951ffc3968c7d38612de px4fmu-v5 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		3848432302d1bd49d25555dfc63ece3c4783df39 px4fmu-v4pro NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		1f520f15a31d41a7f153258de9acd640ff227fc8 px4fmu-v4 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		b73cd50863e66510cfbfc15226011ac965f6599f px4fmu-v3 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		b89451f160eed13d70afbc82a4b3577e17cfbb47 px4fmu-v2 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		0ffcf70a84b60770e1e3eef3f255ae17b4a4d9b4 px4fmu-v1 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		58aff8491191634e4c913b82582bcd639a0b3533 stm32f4discovery NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		6170544738c56bdd07d3bb670228dd8267375b26 mindpx-v2 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		3ac953db0ed2d5b0dc6d745d885896805fd8f45a esc35-v1 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		9862f1c5f91f26024da2c9d3ef96a17afeb39044 crazyflie NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		34a2326c1280f20a8af16de8ccb2b3b1f5314e6b auav-x21 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		ab541b1321319f6759e156b2c0034ef9fbde003e px4esc-v1 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		3cdec49a09acbb23ed8a1ffba6ff507f3dffc4ff aerofc-v1 NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		d10848c12953c875209bbf78e2e7754ebe7aafb1 aerocore NuttX defconfig: lower CONFIG_DEV_PIPE_SIZE to 70
		03dc991188014ba37022a73d92d45c2e0ff03d84 log_writer_file: adjust stack size
		0eac63787060c6d7eaa0643322f4e72fb0e8c458 clang-tidy relax function-size.LineThreshold
		9a2ce9a09821cff59a74b2b33a8cfc95ac57d6fb clang-tidy relax function-size.StatementThreshold
		0f33ca1ecca16379770335f141b8089d671769e3 tap-v1 Increased IRQ Stack Size
		8bb72d45dcbc526f69bebc2b03c3f3c3d9ce689b px4-stm32f4discovery Increased IRQ Stack Size
		3d05fa72292d674e935c665314d72cba8300f497 mindpx-v2 Increased IRQ Stack Size
		214fd04b3c2557bcf4ca9d26a52b2c50fb7f8e79 crazyflie Increased IRQ Stack Size
		5a7b8e052e2afbf33c8af56327d22020c928eeb9 auav-x21 Increased IRQ Stack Size
		2fe0f76e2773a6ad44d380b043a707834e39b894 aerofc-v1 Increased IRQ Stack Size
		57581ddaacf0411266404e621af6399dd6bad016 aerocore Increased IRQ Stack Size
		4ceba407f2fb831af30cafdf3cfc21e362805806 commander: raise stack size
		b2113b9abe5491c72c8fb8ce7c3922ae8a8f2239 cmake: Reduce flash size for px4fmu-v2 build
		11ef348a342c3bdb788d940f5e69c359ec218e5f PWM: Use same stack size as mixer to limit fragmentation
		ff0e810b55fa62d848504a99407e25c35976fe63 Nuttx changed CONFIG_DRAM_SIZE to CONFIG_RAM_SIZE
		dc6ca7c37299667690f90f0e5278e5f6231c95c6 VDev & CDev: dynamically allocate & resize _pollset array
		cbbee30e483f89350a9207a5684803abd8312fd3 log_writer_file: add include px4_posix.h (needed for stack size macro)
		db774798fad6bda2c85d9b5251c42944c378878d Dataman: Store sizes of all containers and reset file if any of them changes.
		09d8e4fd8c58038b1a0fe22fbf034951098cdfcb logger: reduce stack size, which got freed in 05a771152520
		4da2ae23029ea503527e2a43c33dbc873f99ca4e MavlinkOrbSubscription: optimize fields for size
		c50e4a6e21c3207dc839284bfc38483447b44171 uORB::DeviceNode: reduce the size of some members
		3f5f74399e7d252d768ef0c095bf9eb6f9726d8e Increased SBUS buffer size for more reliable SBUS and DSM parsing
		de20f1778e6ad63af06173777952bb5ad237cf57 logger: add -m <mode> and -q <queue_size> parameters, prepare for mavlink backend
		b1708f3871565f14248fd0080cac239b6aaadc79 cmake: only optimize for size on NuttX
		8ff237c69f0a0786de39980f936ae4f1d2abb540 Remove size optimization for individual modules
		219ab519e386be07463088a5b94af22facbc4534 uorb devices: rename queue_size() & meta() to avoid member shadowing
		4fefe5c6c66844838f3d0923c3403d5ddabeb4fe cmake: stack size args cleanup
		fd403b733dc2592ed74fcc981c96f122f4eec95b CMakeLists: don't always optimize for size
		7d7e40f59473ed538c61f8b76020ca505ee52487 UAVCAN: Adjust stack size to platform
		f815d9fa748141d7ef60ea854ffa96a266772fbc sdlog2: Adjust writer stack size
		1c2b932cf8f86cf1878913f9a6a30fffc254e436 MAVLink receiver: Adjust stack size
		bb487878110bd3057219678797d7bb563029b6f6 Logger: Adjust pthread stack size
		c52c692c4f0bb3959b784fe22f46b87d0d35b4b9 Commander: Adjust pthread stack size for platform
		5b69e5892571b97f72cfd984434543f66302a71c Provide macros and extensions to the task spawn command to set the stack sizes right
		41913c4a803a4bd3a1a940a59206108f61da5c6f vmount: fix print status output, adjust stack size, improve error handling
		3aa66da20f131f8be4e9144d44282cdb157b1e86 Build serdis / sercon with size optimization
		07966de432b59a3140a04d94e24baf19eadd29e9 Build serdis / sercon with size optimization
		43f772154ced60424b96de2dca509099722873e4 TAP: adjust ESC buffer size
		d6d3a56116b066f192300733c76418abeef573d9 tap_esc: add buffer size check for _esc_feedback.esc[]
		772dc302b6c5036b9de5374e4f4e611b1c900724 sdlog2: raise min write size back
		8e136779ec807ead35c77a989ba4879fc746a74d stack sizes: reduce stack sizes for modules that use sensor_combined
		ed19d1ff6b607cea1dfb42d5cdf215c3ec1ce07e EKF2 wrapper: Optimize for size
		f129b86d1b5446d88321efc6838226deba290e0b reduce logbuffer size to 12K due to lack of RAM
		78d357cb0cb3611b0b693abe52a6b94a96e03ae0 logger: free up ~200B stack size
		43d734ef4372d4b502580c78debef32370d4d7c2 orb: consistently use unsigned int for queue_size
		aebe4db52abb2a7d336553584eee1e7c7a47709f Q estimator: Optimize for size
		761d02d4337e248c038d47a93101d1cdfc5b5e35 Sensors: return stack handler to default stack size
		1ecdb0f6fb8d2a3d222b31cc3380399c67deee4c adjust stack sizes
		4e50f271d6f925da3a95defa53bb3523c3a14e8d use C99 print format for size_t
		d0d2664efad95a7ea45a60643d8ba77f6025efe0 logger: use %zu to print type size_t, use PX4_INFO instead of printf
		e9f257c15ff227273170a2d487645a5504e39664 logger: fix wrong default buffer size in usage string
		72263eaa97f6e93393a961a2dafa2c45bb7e91e4 correct msg_size offset to 3 for all records (must be same)
		e5e523aa9e2d191fc8eb819af4f02ffdafb1c8dc size_t is different in posix build
		7d64aa80575c348f2086bbd3e9592e42286e3266 ekf2: raise stack size on Snapdragon
		7dbef87ca0c575fc068b4ee296ae3525bd4c2e92 FW pos control: Reduce excessive stack ssize
		f62324c8a6a4a82f78f13ff83503132b68209212 mavlink_receiver.cpp: use sizeof(gps_inject_data_topic.data) instead of hardcoded size
		40776162646a1f0fdc8a3da4c992c6bbcf53b72d Significantly reduce stack size needed for calibration in commander
		3a209d71afc10265edbeac2b0d7f48209137b7b5 fix clang size error
		a2c4c094e6fa6a4e2d3915c7183990e1dfbe5e6a HoTT stack size adjustments
		9f5469ab1f79850a48a578bcdcc8664192b0e91b Workaround for stack size setting on OS X
		d29a2ecfac835219e0d292ee7e360d5605c6bc82 Set stack size to minimum valid size if less requested
		ff0618a8ff9faa679d843ad2c157f6b5e4d77299 Set the stack size for qurt
		2ff9fd64b11006ca5fa5a2811e06899605442c26 increased stack sizes for mc and fw pos ctl
		d00911843708996883faeb7ad79c163d51c78d61 set stack size for ecl
		b6c4501d0e221fb2d610c028a2c5f801502d5fad Adjust data size of dataman to force reset of all existing user data
		07df1be8418538e9f5af12fd6f7be46328db4772 Simulator buffer: Ensure we do not become limited on message size
		96b3239ce72eb59bd2e9d820d40c758daae5367d Merge pull request #3225 from PX4/master_commander_stack_size
		19fc766c7d7c0e1e515bd1b011d5275a918cd292 Merge pull request #3223 from PX4/master_commander_stack_size
		35d8e0bc550645b470af5c8624243b8f3a56d081 Raise frame size
		327481d749f2042fab121aa3949ca2eb995c17fe Fix EKF frame size flag use
		96968911e4a246a2d5e700de7132d3a404069a15 Keep size command in ccache path env
		f78fea2e962eb8bb2466b5d2fd5fc5d607430de1 Revert "Move EKF stack back to same size as on stable"
		7fd6d2dc4a4fe7a1b439b5cac78ec90fb34aca48 Move EKF stack back to same size as on stable
		766cb716354e4346d842e299ae050147fec06fef EKF: Push up stack size as the max frame size is already 3.4K
		cde947a1d88bdad89210891c1153d828073eca39 FMUv2: Reduce excessive work task stack sizes
		88a4d0deca60d52d02daea09ab508eb03e793956 EKF: Reduce excessive stack size
		21431cf237a3da38004251d66f49082eb15bb60b EKF: Fix output commands, fix stack size for commandline tool so we do not run out of space during debug printing
		a45fe6343007dc7e0161f4038e460f9c74011757 bin_to_obj.py fix windows regex size match
		2a7e75043d0017e3462d6a3c305b047180136d67 Reduced logging verbosity; fixed stack size; fixed ESC indexes
		207d4a0c6b861994f2625335ecb5528480425950 Commander: Fix excessively large stack size
		4151522902726802b34263670c715a654d4b9a22 only enforce frame size for nuttx
		e0702ce48d25a57336ef987f8589210c1ac442ac Commander: Build optimized for size
		73e83a503ca4b18df5f254ff81bb0d5dd7fe4cd4 NuttX configs: Reduce buffer sizes where reasonable
		673fdd8002ebdf48d2212b143b1940c73e5e8326 sdlog2: Fix stack size
		4d98bd57b6ae8ac668fe531e1b6bc1f3b2fc530f Attitude estimator Q: Fix frame size warning
		9d5a2e981504c76b175b3074d7e104085d134038 Launch detection: Fix hard typing in array size calculation, fix use of index variable
		fa26928e5102aca73f0913d73730cfcff7d4b636 Save RAM on UART buffer size
		ae83543b63e3e9410dd2a9d6aab93367189fc19e Save RAM on UART buffer size
		b235420f1700a5b4cddebd29d8aba441b1e340b5 HIL: Limit stack size of HIL app
		6bb941218caf3d8aa70bcb180b219d85024b8a91 Limit stack size of HIL app launcher
		aaafbad9e7f37837cd6f4adc801ab7d46ffc7d7f Updated Config - Using Irq stack and reduces idel stack and user sizes
		72c3f4b815da5ae2a3554d79a866a0336b4a5d43 Flow: Shrink boot handler size
		ff360aa75a5383a307397915eff2531566c5da2d NuttX configs: Add hotfix for RX DMA buffer sizes
		251325760e6564ebe645009fe0c29b3a09873eba MC pos ctrl: Fixed frame size guard
		89f64ab0d31c845a35a6f4fc4d8e65d897af0e3e Fixes stack frame size error when compiling mc_pos_control_m on vagrant
		381b889526d05567fbba0140b6499cf67defa063 POSIX: don't check stack size for position_estimator_inav
		f659a3e8cc2ff4216f69ac1c3810c9f84c056d5e POSIX: do not error on stack size warning
		63f7995b4158f5aaf158b7690508b6def98e9ffb NuttX: fixes for printing size_t and int64_t
		959333d6cc8e5f99ee68b2dff9cb65d54d805985 Re-balance FMUv2 config in terms of buffer sizes to free some excessively used resources
		7263402cece0a8a2d25e15e9d9b86df0e1867c41 Merge pull request #2362 from PX4/master_elf_sizes
		447b93c090f61f7de24ce941af7424a133b83e19 Add size Makefile target for elf
		535eb7dbd954cf8eae984d5b347568f966e5dde8 param lib: Fix use of array size
		bbb27b86352337d5e185386212f87664c568e20e commander: Reduce excessive stack size
		7aac0e94db50a8be6f03e12f15c76907be0ad3b2 Posix: disable stack size check
		994065ef47d99747ae024d7c09b274c6332b3503 Linux: dont check stacksize in sdlog2
		c8452bb9d668237a84a22805e45feda07281a468 Store parameter xml size
		49b3906b7827a7f2b5b4e947d080db7496d044da commander: Fix status checks for leds and adjust stack size based on actual use
		033372cc78a6aba0ae27add14a0fac508429a43f MC position controller: Adjust stack size of handler and app
		4177078ff0954209ed945172d0df71bcd5c10789 MC attitude controller: Adjust stack size of handler and app
		ba0a3430908ac9fb5c601e2ed3b61662feb90a7e MAVLink app: Adjust stack size of receiver thread
		54d2014bd64c106146a69e68c75b271937ab9933 Land detector: Adjust stack size of startup handler
		110930dc0e52e60f2478e27e6b78dc0d9e3033f7 FW pos control: Adjust stack size to real use
		d5c59b515b8f6670a45f666bda926f008dc2efd0 FW att control: Adjust stack size to real use
		7d87da700c39b2daff60aa923bf3743906693e78 commander: Adjust stack size to real use
		1d90e86ec463bdcfed49ef09dd27206e1451b8c4 Commander and MAVLink: Adjust stack sizes as required
		f7ef6e19502aabbb4b8b1131b88854669885b178 Fix stack sizes based on observed usage. Frees some more RAM
		1da2dc7e34d56eeed16bf034358a1e7e18ebcfcc mc pos multi: reduce stack size
		163c25268b2c41c566d7d99da2fddda719c79d49 mc att multi: reduce stack size
		b269e5d060e81696ced6af6303e27c936bbffbed multiplatform mc pos control: Allow enough frame size
		c9eae96cf67ebdf6d202dc7ecac55a5b4a670a50 Frame size fix fix per Lorenz's suggestion
		9aa7daa86c7f18dcbba4f20cc1a2b3189117f242 PX4IO: Adjust stack size based on real usage of 900 bytes
		5f77a57761517b6f7b2113a17ff7cb621376216b FMUv1 + FMUv2: Reduce excessively large OS stack sizes. Actual use was 800 bytes hpwork, 400 bytes lpwork, 1700 bytes in running system. This leaves 1K headroom per task
		69a7e310774f1df820303346143e5128856723fb Att EKF: Adjust stack size to larger requirement
		3436abdf0bde16bdda5f4e6600693d6b0f42a01b add multiplatform makefile to work around flash size issues
		06879bff38a88e6468c73dbef5cf6c2ecfdd72b2 reduce default queue size
		ebc4cc3a7dfc6a705a4585c75e92969a6a0e798f sdlog2: Adjust frame size warning limit, cross-checked stack size of app
		f28e8d6731014afa13bef368d8a58fe7f3579249 sdlog2: Adjust frame size
		2ab6eefc2966b615f66f3c8b366337fa293bc7a5 reduce manualinput queue size
		e826187efe6f514a632ab2ef2e0183d17792c0a9 reduce mixer queue size
		2f6767480b5c88c16ec181b47d194bd9dabdc959 EKF att/pos estimator: Fix warnings (cross-checked stack size already)
		0a3492fc328280422df9472d3d8a586d92242feb define default queue size
		41fe04776f362cf9f0fae6451550df8d5eaf8d99 Fix up stack sizes
		d602c9a0c5eff39e0f533411b45f631cae63e486 Controllib: Optimize for size
		00c7cc019c6f1bc23c8865d0d95403fe8deec029 Optimize size of system lib
		24c97ebaff53108b2995a1c48bf75e7443b03bd4 Merge branch 'sizeopt' into silicon_mitigation
		a7bc52754de52ccbf0f958c20ce31408a8b4372e SDLOG2: Optimize for size
		42575bbc3763fe2b9e2d3e5b074ec74e4fc57f5a Bottle drop: Optimize for size
		32313a13dd1f98426f83b99310fc22b5adced37c PX4IO driver: Optimize for size
		54f296ce9d8245845a7a0bf32f5045a44aab40c7 Sensor drivers: Optimize for size
		a869105ba23394cfabb0a0000dd3b7fa3dc9fdb1 Systemlib: Optimize for size
		a12c98ba63c12ba08f1fb0f66df7b7079e444e1d Sensors: Optimize for size
		f7f54062439f0b1c1208d0778f992f7052e1518b FMU driver: optimize for size
		c0f34dff2605381afacbec2bc1eba6b648daddd2 STM32 drivers: Optimize for size
		3d2a5bae51763e5a542506383c9d97f95fc7d1ef Board drivers: Optimize for size
		75bc8136b1d1d773a5664a226b5b766867fe5ff3 Build NuttX optimized for size
		a7eaf07f4f9d6df54b7602c07ce7fbdf2db700f9 Motor test: optimize for size
		8e8dd62fbd9906c980d9e88943a2fda5b90977e0 Let the uploader print the binary size
		ebc84b9f44dd3d26bc8d26b18f8c059f900e5e1a reduce mavlink message buffer size
		2766285d56cab6f9916efde535b979bc5475f6a5 mavlink: change message buffer size to 4
		ed66097ebc4808587301bd569b5bef6c312800c4 FTP: Update unit test for new header size.
		07c4144cde1026c4d966d043d12e36ba686c0781 mavlink: message buffer size fixed
		7f0e67522878d1e850c22553fc53e93283ed92f8 Pass over drivers to reduce build size
		c2f97e628cf060d35db22526b450b919f0c6cf59 L3GD20 driver: stack size adjustments of start handler and start return review / comments
		f89573a6ed6e43c9e5935b92929b6082089226c9 HMC5883 driver: stack size adjustments of start handler and start return review / comments
		959bf6a2c8ac656b1536762a2a7aea0c5349f5d5 ll40ls: Optimize for size
		70d0ff492220371c57f9ee3d1f4fedb2fcf1199f SF0X: optimize for size
		aaf2652e26106b0850226f25cd12ce1304775522 MKBLCTRL: optimize for size
		144bb89e027701f0b4c1661685d770a013c100f6 HoTT: optimize for size
		85301e1172a0ab7cf726ba8ffc5386ab7ede363d frsky: Optimize for size
		c474d2cbf1a9c78be5804b224c504b57f9248760 FMUv2: Reduce excessive stack sizes
		aa055825984c121c0d2b74d81463282f6400688d FMUv1: Reduce excessive stack sizes
		54b55c37c7ffec5c340f100d2027e91971967793 Reduce excessive stack sizes for FW estimation / control apps
		bd88951f6ce609bc5ba364bfa3d19ae61e444964 Merge pull request #1117 from PX4/mavlink_stack_size
		e97161e96b8de4031746556ab4bd4f96d24a30c8 mavlink: stack size for main thread increased
		d7394c7ef973e34d87187420444baad6fcf9854b mavlink: stack size increased
		29c997f0dabc08520596b57c54c18cdba920a595 Fixed bug with zero-sized covariance arrays
		7349fa90376714b00fe920538950b31a46169d60 Beautifications for tab size 8
		1f5a9006473f0e60d9f2d1b47c79652788438bdb Merge pull request #985 from PX4/ardronestacksize
		981d61626890e979251a7fb8e0ddbe6678220e2c ardrone interface: reduce stack size
		66f57f577b043cd263d16425fe154c26893d88fd ardrone interface: reduce stack size of start handler
		ea99fd84464ba6141f182dece0ae7a60c3ea9377 nshterm: Reduce stack size further after more thorough inspection
		834a230fcf5d24cacaa16b2a0bb3add2a56ebb46 inav: Reduce stack size of start tool
		cccd3e1dc47968cbe5d351bc327502196988215e mavlink app: Reduce stack sizes minimally after further inspection
		8630d82ea2b27389b686fe191e9b2f2fbd44f235 gps driver: Use correct spawn command, use a smaller start tool size
		0a6861e98ddb5f25c6564e2251bb05dc0606bfc3 FMUv1: Reduce user main stack slightly, still 2.5K buffer between actual use and size
		9f097c1858d002eecbcda8cf8272fb8fbde1a31e top: Reduce stack size, but leave some room if it has to print a few more apps
		ddbad698bc0708af18505e50b0429564a8cb47fb mavlink start tool: Reduce stack size to 1000 - it is really just the commandline handler
		35e7e375de30c3ce0f830cd99ec22f5250e6d95d reboot command: Reduce stack size to 800 - it really just reboots and does not need stack
		b2945fda53839fb70678ea6a1ff286db36ebee8b param command: Reduce stack size to 1800 after careful testing
		1e13b5a02c4aab5b32f43b6bf2b3588674ee84ac commander: Reduce calibration count, minimally reduce stack sizes after careful inspection
		ab154c9d3bd2f3034382c82b8613613af80287b3 attitude_estimator_so3: Reduce start tool stack size
		ec5dd5401e9654ec958a8e5eb2b77e9a375e44b0 attitude_estimator_ekf: Reduce start tool stack size
		8f6a50708fe847fdfe7a1ea5c8d3f8771019e7c8 examples: Adjust start tool and main stack sizes to reasonable defaults
		8e46308fdd65356e4e06ef9a91cc5771b7ac6f34 examples: fixed wing: Reduce start tool stack size
		61a3ddb4c202f0e8783c041d772a08a732194885 navigator: Reduce stack size by 50 bytes
		8dc0a21a7ee83dea5b3a3ac719c6a9e64aff78f8 mavlink, commander: Get back close to original stack sizes. Although tests came clean, we do not want to take any chances
		d50ae8bb59635782f35f85f759a25d6f80c40663 Reduce stack size of preflight check tool
		8962c272749108af4163e985109d9e760f0dd0f9 Reduce stack size of perf tool
		972cf54c9637f9957f542ba7ca975fe449787946 Reduce stack size of PWM tool
		29ec1f388133a3bb11654b1f5accc9872d6ce6cf Reduce stack size of sensors module start handler
		07890300887319d1e3a85a30151a156f7b181f41 Reduce stack size of navigator startup handler
		25fd20487ec83e4edad7c88082d9283608f34e06 reduce stack size of dataman start handler
		7655f3e42556550e6769f6ac4b88304e1932c3ed Reduce mavlink stack size slightly
		531ba79e55e9ccf9396ee30f067c933b4ec9c649 Reduce commander stack size mildly
		63905265ebccd3a2d7fd94d5cf4f2c02102481f3 Save code size on commander, reduce stack size of starting tool (NOT OF THE APP ITSELF!)
		7e9f234da7a47040bbba93bd50f41c9b65c2976a Reduce buffer sizes to reasonable quantities for UART
		fde2878413141953e30e41aa9689c924c83e207f mavlink: Change to size optimization
		88357c58bde304567f841abc48a495794d4e250c mavlink: Change to size optimization
		09f18408fc5835622a955c80304ce6599ef98090 mavlink: msg buffer size fixed
		a6d9b7e864334381a99f4438aeea1173229bc2dd Merged stack size changes
		61eb228e4d8cfc95c1c4a84ed870f2b4918d7c6e Reduce excessive stack sizes on main OS stacks. This has been tested on mavlink_beta, but needs more careful testing.
		85dc422d9804c894009e37c6eaab67a10c5dca28 mavlink: more streams implemented, stack size returned to 2048
		8d79d919504b4b92ad05a7ebc12334083ae0f4b9 Revert "Merge pull request #620 from pigeonhunter/stack_sizes"
		5316741ed40965b837fab77074ff4fbd4fe6f858 Revert "mavlink: revert stack size 2048 to fix suspending in HIL mode"
		eb177def141d321b43a4c20819179423e128a92f mavlink: revert stack size 2048 to fix suspending in HIL mode
		9cbc31b588f3bac6d3b03870801c97068a4b4ecc mavlink: revert stack size 2048 to fix suspending in HIL mode
		3b31a6b1b9756eb191eaaafb1c137e6874079281 Merge pull request #620 from pigeonhunter/stack_sizes
		1d70a65f40895b0c9e1ee5c65970efa1eae841e8 Stack size reduced to 1280. Max stack size reported as 1020 with UBX GPS with 3d lock. MTK not tested.
		0cc311b872c688f2242a4745cd3a6de4933c9e62 Reduced stack size to 2568. Max stack usage reported as 2052 with MARG + GPS with 3d lock - no px4flow, but should be more than enough buffer to accomodate its addition.
		70b1037c2ebd38e06a3d12dca7bad295da02e16c Stack size reduced to 2408. Max stack usage reported by top in EASY mode at 1924.
		b0f65bb708e2728d562dbef8db04a846170d0ca6 Stack size reduced to 1648. Max stack usage reported top at 1316.
		58a1f19d79da8a621454f11055534610921accd6 Stack size reduced to 1816. Max stack reported by top was 1448 under HIL.
		338b753a3c56813c5820e54209b4949e04a12ad9 Reduced stack size to 1200. Max stack space used was 956.
		0488d5b41c5c91658494242f778c7b9de99bcca4 Reduced commander main task stack size to 2088. The high-water-mark measured at 1668 after calibration and flight. 25% safety margin, but commander is fairly complex. There are surely untested code paths here, but each is relatively shallow.
		d1fb7651876236432dc66c5331c60258ff962352 Reduced low priority thread stack size to 1728. Top indicates the high-water-mark is at 1380 during accelerometer calibration. Safety margin ~25%
		cb1621005c8e04a72f9d1ecefc069af9718fd9cf Hotfix: Bumping up interrupt stack size, which fixes a number of evil symptoms seen in some test cases. Needs more inspection, but this fix holds for the test cases
		760b3ab2e7050154a8ea09fe9358adfed85480ca ringbuffer: converted to item_size units
		3329e3c38c6c566fd8833d862ecf06c07ce4279e ringbuffer: added resize() and print_info() methods
		51bc73fb280b029ccf681bc4a34b7eb3a80f708b ringbuffer: added resize() and print_info() methods
		811e1151fa05520f6f937518f3c7d5f6305b9fd9 Fix UART buf sizes so that MAVLink transfers are not corrupted for all serial ports intended for MAVLink
		42b496178136a398447742f0efc81348845087e4 Reduced excessive IO stack size (had 4k, is using 0.7k, has now 2k)
		a0235bd5071bc8488c585588241422128b1d3361 Increased buffer sizes for telemetry, set USB PID correctly according to new scheme
		1fb4705ab7038fb4b135b49c58f14b48f0cfab48 Add size and flush methods to the ringbuffer class.
		6cf24ac106688d70bdeda9d13fa252246f599b5a Increased comm buf size to better deal with higher-speed MAVLink transfers
		382c637fab66291a28b18f7481aad3b866de6639 Fixed stack sizes for airspeed drivers
		6b631afaef65ba874373b1dd1652f02a7f6e3612 Reduce the max stack size needed.
		be6ad7af3b65841d2b460e3064c166dc9167401f Rework the FMU<->IO connection to use a simple fixed-size DMA packet; this should let us reduce overall latency and bump the bitrate up.
		badaa5e4a23561834ff4badbe3a62fbf3d3e02aa Fixed too low stack sizes
		59b26eca48212f13a467724f9445169b78d6c70a sdlog2 -b option (log buffer size) added, minor cleanup
		11544d27b7629078b6a7a2247f159b535816e019 Hotfix: Enlarge the buffer size for mixers, ensure that reasonable setups with 16 outputs can work
		2ebcd0fdcc4b743c3a8a32bae0852e9536bf3a6b Switch to optimising some things for size rather than speed.
		69d9265bc3a9883c3cc180fe54223dd3be9dc36d Adjusted stack size for commander app
		f689f0abb0832c3d68e462e291a7a4d6dd43e216 Fixed excessive debug buffer size
		818e898a7e084d6529da549ca3ea7c7d53fe5c46 Fix the handling of max transfer size to leave room for the page/offset bytes.
		f7c31e4d804c81659dcf79684807fbc8bfad5365 Reduced stack size for mavlink receiver.
		6ede0e2f18f001afb390f3bbb0b989bdd2759c24 Add the ability to reset a mixer group. Report the remaining buffer size from load_from_buf.
		e153476950a3fbda230c6bddd9ad35018cfda559 Config changes for PX4IO:  - enable USART3 for S.bus  - reduce the scheduling tick to 1ms  - disable RR scheduling  - reduce stdio buffer sizes (not used)
		caf0fefa32b5441f1093de460cbc77f6d3aa2f92 Cleaned up different uorb topics, cleaned up excessive stack sizes
		596d20e2a3869af6f497d31bfcb1d11622ef5236 Increased stack sizes, 1K is not enough when calling printf() from within app
		683e54b85fbd8641998c422eca33227755181f0f Fix DRAM size in STM32f4discovery defconfig files
		ab63a77edf78a198117757a1d5e2dbe34cde1263 Reducing stack sizes to free some RAM
		0e190d4cf7f3d151592414d8bc3d3eaf77e0b0e8 lib/math files not follow coding standard; float, double, and long double versions in separate files to reduce size of dumb link
		77e6375920df67344e895e669dd2a641a7b87b6e Change parameter names in FW control to fit within MAVLink parameter name size limit
		2c2ba7f0c5f99aef3fac0eaa8a2c7a79c5faa74d Missed one file in last checking; Gran allocator alignment decoupled from granule size
		fdd758df5c3f8d45a473645e9c42f66a69c09194 Increased stack sizes, this fixes the board not booting with a ROMFS mount message
		137329bfb037aad553221f229e8c5607193ce019 mksymtab: Fix handling of final comma. Some C compilers can't handle them; Also add macro to provide the size of the symbol table
		45885f15dcd730555a69b592983f22ab263b3baf Fix the readout transfer size.
		a0925e4703fdcbf3c9eebfbae254bc0d47b96a07 Ramped up MAVLink stack size as real use seems to need it
		60889d41f6f43ac396d2f7bb71a8bcd166f9ca66 Update NSH documentation; Add option to reduce size of help commnd without completely eliminating it
		3ec93230f35da971dc988b0f66e8023bb7f6fd51 Fix max filename size report by FAT statfs with long file names; Add missing logic to support fieldwidth and justification for %s format; Add extended help options.  Default help command just shows a short list of commands.  Verbose and single command help options
		983e72ea391c136624340ea64e19c20adcbf970d Fix packet size calculation in CDC/ACM and PL2303 USB serial drivers
		d21b932f5ecbedadab9113374d89c6243478ec3e NXWidgets::CNxTkWindow must subtract the height of the toolbar (if any) when reporting the size of the window
		d4c261ea71bf5a01c1897e0cd67d9dbbfdd5cfa9 NxWM: Correct the calculation of the physical dispaly size
		20b15f2d8c1fc7dd2926f473eb34f507f83df5cf STM32 SDIO DMA:  Ignore DMA FIFO errors; these seem to be bogus. SD multiple block transfers result in CRC errors; avoid them by using smaller FTP buffer sizes
		c3e6ead3395724268b85a5c2316f3b288ebcfbfb Correct a buffer size error in the STM32 ethernet driver
		fdc72ffb3ee4de0531bff52d025e99af6de583ee Fix starter kit ram size
Results: x/378

ensure			2
		63e29b821c15459e6a6e3c66e0edf56bbd5f7494 holybro_can-gps-v1:Ensure sensors are powered
		f01cab3be1afc3d601c6b6f39b240b3565d019ff px4io:Ensure proper lifecycle of registration of cdev
		7925787f62b42c50577aa92d8345326c06ff8062 px4io_serial: ensure TX DMA is stopped if exiting early on stream error
		7144566afe509e0ad8669d4f4690d22b7e176ed3 metadata.cmake: ensure events directory exists & add px4 enums
		e3972d563a4bd6d8c3dbda9837588cdfb273c3cf cmake: ensure generated source files exist before extracting events
		894ecac8dabce7ef4abf3e133c5d7cfab410bb06 px4io: ensure pwm params are loaded before any other module starts
		3e9b295c2276d8c85020c68e21c77d72fdcf4a3d Add watchdog_init to ark boards to ensure watchdog pauses during debugging
		1ad25369e766edfb16bad50ddcecddd3bd3b5879 Makefile: ensure 'clean' does not fail if build directory does not exist
		42a865f34961c325044668a09f9372debed0bc22 param json: ensure category is set to Standard if not set
		629f7ba15bb064999fa10fa1f98cd70e5caf96e9 params: ensure short description is only a single line
		6e9f745809c0c99e7c73efa3e40b87ad39f144e8 PWM out: Robustify initialization This ensures that all PWM outputs get correctly inialized on targets that only support one.
		d35ce21594eddaea55bb2bd7d4f54afee9a684f8 PWM out: Ensure correct loading on single-bank targets
		c904767f1d7f9b3d76fce91a846eedceeac117da Always start airspeed This ensures we get readings in the log and in the telemetry even if the sensor is disabled.
		891b231215ce287de43f76d6c6e7846854699178 Ensure that AUX mixer is loaded when 2nd bank is present
		dd736f854092367c2732cccca4707e4cf9a2906e holybro_can-gps-v1:Ensure yeild is used for FLASH programing
		84b3f51c6b0d10c21fc75ec47ab6d5aab17e4a12 ark_can-flow:Ensure yeild is used for FLASH programing
		d8b9def3f8e5e210e46f2cb6856ef5440b15076b cuav_an-gps-v1:Ensure yeild is used for FLASH programing
		87f98f096fa45aa00c14fbf516bab2f489df26be Commander: Respect position circuit breaker This ensures that commander respects the position check circuit breaker and allows arming without position.
		aacbc04730ae3f759236f81e56fbe33326812611 PX4IO: Robustify upgrade process These changes remove the two code paths to updates (forceupdate and update) and try to reboot and bootload IO independent of its state, wether it is in bootloader mode already, safety switch is off or if it is in "nominal state" (running and safety on). This ensures that there are no conditions where user error or boot sequence can prevent a successful upgrade. The only state where an upgrade will not be done is if the system is fully armed.
		d426dd771fd9209b31a91c450078567959e3140d canbootloader:Ensure common crc is set valid after autobaud
		28030e96e2436a84ecd9ed69a6ab6c7f8bbf8ede cuav_can-gps-v1:UavcanNode app ensure IWDG off in debuger
		d03d46b8a302152dafabfed9a8073aae13abbcee Initialize MAVLink on v5X variants This will ensure that the different baseboard configurations are properly accounted for depending on HW variants.
		0a58482e513bb62684536567f0e27fe2c94bee14 Align message names to avoid CRC mismatch with deployed units This will ensure that the CRCs will match with deployed units to avoid unnecessary incompatibilities while we are figuring out how to best standardize these between stakeholders.
		3606f86518ee594f60a798e8ae22650759f6a332 control_allocator: ensure unused outputs are initialized to min
		03e9e108479d76da7b576b0eaf9cba0abaf87d21 Add CLI tests for basic soak testing This is in no way a complete test suite but is intended as a starting point to get minimal test coverage for CLI handling tests in. This is necessary to QA the CLI handling (e.g. removal of commands) and to ensure that we are exercising these code paths in stack check and alike tests.
		cabb50a67ba1e95069457649f0f8cf1727eea5f5 13001_caipirinha_vtol:Ensure that the max/min pwm changes take effect
		cc34d4601df64fc0864f30e238e05627fabf135a FMUv5: Support passive power controls This ensures that FMU-side power controls are not interfering with IO-side power controls of DSM receivers if they happen to be OR-ed in the schematics
		a63e8cc1498e79c634f3d8d0d1ef7261e18263d6 fix mavlink: ensure vehicle_command topic exists
		9215fb57a28a6f184a0b5f4fba97d640070cf066 ekf2: advertise immediately to ensure consistent uORB instance numbering
		7ecccf01c2456e1c75579d8498a3db6b065f817f tailsitter.cpp:ensure input quaternions are exactly normalized
		025799248c9118e728208d90dc8282bcef0d698c holybro_durandal-v1:Ensure SDMMC power seqensing is clean
		aea68f06f926da105f88c19538c6e2b081aa5302 Commander: Streamline preflight and arming checks The checks did previously only report the first failure (to not overload the radio link). As we are moving to buffered messages and higher bandwidth links this design choice is not any more in the best interest of the drone operator. We are now reporting all detected failures. To ensure architectural consistency more checks have been moved from the commander mainloop into the respective classes.
		8d0402f274f5624c1923829b6293f985003abbad land detector: fix ordering of hysteresis updates to ensure we report LANDED only if also MAYBE LANDED and GROUND CONTACT, and MAYBE LANDED only if also GROUND CONTACT
		adf7aee7626bbcc577f45d81709b076fd301a178 Harden autostart logic for non-existent airframe values This ensures that the user is pushed back to the airframe configuration stage.
		742b1839d517bb4ebc5a4ad9b3d292157bf68fd8 Simulation: Set scheduling policy RR for lockstep This should ensure that all processes do still run at full load.
		2e7221cd22bd86827edee649b1014b6c4422e68e Style check commit hook: Ensure that formatted files need to be re-added.
		06f20ad892a7251681b7bd8dbc1b697fbc7c8425 sensors: ensure angular velocity publication on selected sensor update
		7ebaf9a1cbb147a5406be76e08ce1276fcab0fc3 mission: ensure precland::on_inactivation() is called once landed
		ac5669deb4f1fcf3bc06766dacbe1118503f263e CI: ensure 'git fetch --tags' is executed for all Firmware builds
		15ec73629bad9087a3ae52dd95dae87966eb2701 MPC auto - Add MPC_YAW_MODE: towards waypoint (yaw first) mode. This mode ensures that the vehicle yaws towards the next waypoint before accelerating. This is required for drones with front vision and aerodynamic multicopters such as standard vtol planes or highspeed multirotors.
		fbd3386c394ba42f00eebd87d90caeb4c4ef3a78 Jenkins Hardware ensure buzzer is disabled on test rack
		c92b8b03cd56f6e2786f633e359081696ae9fdd0 Move variable initialization from constructor to declarations in MavlinkReceiver class, alphabetize var lists. Added update_params() method to ensure that parameters subscribed to are updated routinely.
		dd58e695494acab73fb6fcec7074291edb5c226b EKF: Ensure FW yaw alignment method is used on first in-air reset
		708c79eb8f00f5f0265dfbeaad684406cecdcd20 EKF: Ensure mag field state covariance data is always available for re-use
		f21bc89a904c6812a8747fd4c4d8e869218ec424 Unit tests: Retain atomic operation This ensures we get absolutely accurate timing.
		11f9925b029558130245eb31df87eecd52bd0ae6 rcS,rc.serial.jinja:ensure proper unset hygiene
		370371767f32de3d5ec46943be5100128e03b7ad FlightTaskAutoLine: ensure that desired speed along track does not exceed maximum speed at threshold to target
		4657a9cd218e0745057d7fcdc3469cf0d5e1e718 EKF: Ensure yaw gets reset when declination is set
		5a678295b33d93a0650ff2998bb82bc376c53370 added a check to ensure the initialize settings function succeeds. If it does not, the driver fails gracefully. This handles the case that the device is not there.
		790356ef6ddd54b002e4d887a6872fbd270020e1 NXPHlite-v3:Ensure bin file sizes in mtpl of 8
		4144a53cd665744160a7575e08a8b99497c3c1cc added a check to ensure the current position setpoint is valid
		5ef2a61be56dbc5b0b69db437b9c8633b36ded5a ManualSmoothingXY: ensure that maximum speed is correctly propagated to the smoothing class
		ccd0be82bac2e50fe1666a2b5867bd6a2e3313eb FlightTaskManualAltitude: if flow is on, ensure minimum altitude
		08a89ccdbb0ae3c43ea86416bd1b767928c0d808 FlightTaskAutoLine: if previous type was idle, set thrust to NAN again to ensure thrust is not used. Also, if previous was not a loiter or position type, then reset setpoints to current state. This is needed because during line following, the previous setpoints are requires and cannot be NAN.
		57c7e1a3eb23b12010daecdf6543d9a9c38aac6c Uploader: Ensure that we are not entering windowed mode on USB links
		bda237b3685beb026e94f923af10e99082aa23cb logger: ensure that fsync is called at least every second
		473fa150260b9a5989e967afae1e86262119be64 BlockParam: : ensure result of strncpy is null-terminated
		258b1ea473207a7e4effb74b760bc36d9fb0c61f navigator: ensure result of strncpy is null-terminated
		8c638ac88c7844168c376e8b8070f56d2bf8d78c sdlog2: check result of snprintf and ensure result of strncpy is null-terminated
		63cb895a1de46f299cc151b44bf7127c653db69b MavlinkStream: Ensure that not multiple messages are sent after some time sending nothing
		ff25c7f48abba7f0575b75069e27baf340132534 ensure attitude setpoint initialization before arming
		ddf0ecfc3801b63f0849d5ba37a523746c53d8b4 Airspeed calibration: Ensure that the calibration state is stored correctly
		c0a94cda073ef18aa2bc820e6e01a38e6db11d01 px4-same70xplained-v1:Ensure _ebss will be 4 byte aligned
		23cfef5753944b2019f91ebb0951ee1e4a1baec5 px4-same70xplained-v1:Ensure _ebss will be 4 byte aligned
		c621965a2b45b201e6f58ded775b92201d6fb6f8 zubaxgnss-v1:Ensure _ebss will be 4 byte aligned
		1812d677c54803fb5b04819c6105bbbbbe65aadd tap-v1:Ensure _ebss will be 4 byte aligned
		c4b2f39cf4829401c7da7cf42acd03dc5218cfd4 s2740vc-v1:Ensure _ebss will be 4 byte aligned
		58af82312b10659b92b467f47b7bef4c043f8bdc px4nucleoF767ZI-v1:Ensure _ebss will be 4 byte aligned
		b85fbd496fca63166e2ee197cb1a3b0b26a80dee px4io-v2:Ensure _ebss will be 4 byte aligned
		e9a318e4f7232eb451af591dc64a4c4ed7bdcdf0 px4fmu-v5:Ensure _ebss will be 4 byte aligned
		093563efb060c371115baa8ddc84d66a08c75bfc px4fmu-v4pro:Ensure _ebss will be 4 byte aligned
		c9ed2868748f56df979b2359b0da08ac8797cc88 px4fmu-v4:Ensure _ebss will be 4 byte aligned
		ad687cde624bd1a853695a571ea62f14a8047936 px4fmu-v2:Ensure _ebss will be 4 byte aligned
		096b25550d7f612067f60eb9946b6d851a20edea px4fmu-v2:Ensure _ebss will be 4 byte aligned
		e4f7b762966108f5078202cd3f883f3f5095d838 px4flow-v2:Ensure _ebss will be 4 byte aligned
		c1ae7c76df41103a71e91fc2f5cdfed22e7320ee px4esc-v1:Ensure _ebss will be 4 byte aligned
		6b30a41da26dd4d6e2d7d2fc9fb4aa3f4b4f4a49 px4cannode-v1:Ensure _ebss will be 4 byte aligned
		c76f90f078be4a5880bab633c0aebbcc3d9a0d1b px4-stm32f4discovery:Ensure _ebss will be 4 byte aligned
		e15e9ba5c7f094018cc283199236eab6dab83ce2 px4-same70xplained-v1:Ensure _ebss will be 4 byte aligned
		fea11f1d47eef8df32ac68083e96514822cbc250 nxphlite-v3:Ensure _ebss will be 4 byte aligned
		9879bea6118acc0a2c6c98db5036459f1c87cfd6 mindpx-v2:Ensure _ebss will be 4 byte aligned
		8b6e447875bf065b84c29b2a33baf731e8c7db0c esc35-v1:Ensure _ebss will be 4 byte aligned
		d9cd9183dbea8474606f2d2eb31efdf0e79ea7a4 crazyflie:Ensure _ebss will be 4 byte aligned
		687dbea5720ff455c09941a9424b623af691baf0 auav-x21:Ensure _ebss will be 4 byte aligned
		66d2509670cc20941244037df955803c2331c2ac aerofc-v1:Ensure _ebss will be 4 byte aligned
		db02eac009ce604e96e65965728ff6201bed367f aerocore2:Ensure _ebss will be 4 byte aligned
		1615d5642e7aaf1362ef6a6fefa7acb74706eee5 kinetis:drv_io_timer ensure the Mod register is updated
		63ac56aeb0bc860811c58b2ac3a3eea6de2d3ded smt32 adc:Ensure the the ADC clock is not out of spec
		67679e56d0d2f7aaf5dd802e812640755f68b418 [BACKPORT] stm32:stm32f40xxx I2C ensure proper error handling.
		dbed42a72006fbabf56bc5220a14fe5abde89a3c mc_pos_control auto: ensure the order of cruise speeds during mission
		e51e52f425ec6ea4a4318c655f585abccbd46f62 mc_pos_control: reorder auto logic and ensure that nan gets caught
		8878be57411a24babec515f96db637ee1b3d1700 MC land speed: Ensure that the difference between land speed and land detection is high enough
		6f249472e030162b1136d38c116ea7dbf798b929 FMUv5: Ensure there is enough UART buffer space - since the board has plenty of RAM, all UARTs are treated equally
		235a789a47fdaaaf460684d77307aaf9883bf009 FMUv4 configs: ensure there is enough TX buffer space
		ad21dc3f504f62ae5551f759cc8f8c86b19a75d9 Pixhawk configs: Ensure there is enough TX space on high-speed UART links
		ec2b54fde7a590178483ab9623459109003a4a44 EKF: Ensure normal yaw alignment using mag is performed if GPS method is not
		f7ba70a03276e6e41ce4ea9db5d36d1b437ebd42 MPU6K driver: Ensure that default range is always 16g by default
		071cfc2d31879f8e6c307296d17b6631c41a1d34 Ensure groups have unique names in TOC
		0b43546c6afa28455709d01b6acae118c8924ecb BMI055: Ensure the accel driver sets the device ID in the report
		d12421b9eb9dc3426e1ba27248a80e0f391cf302 BMI055: Ensure gyro device ID gets copied to report
		49b1bd597e57ba7242e25952896400fa775033c0 FMUv4 config: Ensure enough stack space in user main function
		5e1490b8a151e14a55ccfdf87c482e0066cf34a9 BMI055: Ensure that accel and gyro start consistently.
		74b0e485e7336de945b703cf0c91aa023bef84aa MAVLink stream: Ensure the message is not sent again if it was already dispatched.
		cdb8146af5c47a13ea0bfc03c65b62786c4a2043 Land detector: Choose a default alt limit parameter value that ensures regular users are not running into it
		6a38118c736c60d4049f0aea15d812979d56fffb camera_trigger : reset distance counters to ensure consistent triggering after pausing/disabling
		0a1fbef8c8980856967ac42a065df3e40abcf966 pwm:ensure that a rate of 0 will invoke the ioctl
		07834e51b7853281a5afd370c449ee0178c00827 fmu:Ensure work_stop still called work_cancel
		63057d7b60facb2794f58d58661e9d5cef37b9f8 Ensure that manual control is only sent by sensors app if signal is valid and initialized
		61d7f22aba487c47c100cc3d9bd58707fea86e0a Servo test: Ensure we only close an open FD
		2bf7a53d558a240ec979465f54061028448e2a82 FMUv5: Ensure enough IRQ stack
		88a4b5ba07fca9c9720e6ed5d0f957f489be5168 FMUv4: Ensure enough IRQ stack
		0924d8ddcff4e9e834fb8cfdc8e0a8d7c27573a7 FMUv3: Ensure enough IRQ stack
		b6e4b63b0dc4d749de748535c522a5082e076b2b FMUv2: Ensure enough IRQ stack
		bdeabbd02c65bd4b6d55f41f99f6ac43e1cd2ae2 FMUv1: Ensure enough IRQ stack
		535d5b92335ca52df7520ce1a5153f27e8c40df6 Ensure TAP ESC is fully booted
		9e7d5f088e2ae807034c9b857476f08e9b254dbe dataman: Ensure compat field is set and read correctly
		c340974991c03d7474747a3739b2d5b6f9d51e20 Ensure pitch min param is correctly handled
		710a8e8f5664e34625943f5ff88ebcfc59f0bd29 Commander: ensure hysteresis init
		4cfd84b56af76a574c945516b926fb21f84cc7ae FMU driver: Ensure correct binding pulses for Spektrum, time out any receiver which has more than one second no signal.
		ce0d31b7d9c2b5983a70840f4915941039c1277b mavlink log: ensure all critical & emergency msgs are also logged to console & ulog
		25182108f9261b12ef98f752ee06f19387fc1e17 Ensure NuttX build depends on defconfig
		bf0b3c15857f6d9624d9aef5ac569e124d95796d More complete ESC feedback, ensure to include  a timestamp
		574a67b93db0a436c11c8c85d31ff05b673c100c fix px4_getopt: ensure progress in case of unknown options
		aea827aa8ac9732db61c5eb965e8df5e83d733ee EKF: ensure filter fault status is initialised
		c905684c12df94833db3375857b33ed21851cca9 EKF: Ensure bad initial data is flushed from buffers before using data to perform alignment
		ac9b7a3df63bfcbf25d5747b429e3b477566c8cf EKF: Ensure use of EV aiding inhibits use of other height sources
		161ac2e051e9f0f51ceeba3da263b740c309e19c EKF: ensure position co-variances are reset
		2fc6cdd9948bd800712892cea80ce3c3c591a19d Gazebo SITL: Ensure a tightly closed altitude control loop
		b1c6a2c7abf8752714d9dbefdf71a6229d7e6cca ensure PWM_DISARMED value is sent to ESCs if snapdragon does not send anything else
		a7417657c36f4af4f9a30dd7b6ab60eb392b2bcd EKF: ensure fusion timeout counters are reset when required
		b295f9050caf78f63fc90ecba5fd614db62163c8 EKF: ensure GPS check status is correctly initialised
		430d4b1cf8c00efd06097ca9a834a6629025e847 EKF: ensure data in buffers is zero at startup
		400a6e12ba56237c760c3baa033f35082838e8d6 EKF: Ensure all data in buffers is initialised
		c23d72ba298e3432c0558274882b0a2e582f0032 EKF: Ensure filter control modes are correctly initialised
		1fdf252e9619bd1754e21db122c4e39e4b09e6f7 Remove duplicate LAND mode, clean up mode reporting across the board to ensure consistency
		b937618e59a888f653d8f1e1b6b38d5228efdaff Improved CMAKE return value checking and ensured that fresh checkouts initialize the GIT submodules correctly
		8a91ce65e8586eff3a59609bfeaf5ff8ae4976e8 Ensure RC switches get evaluated on first run
		2d2b0a2d43d336b7f7067d282f0dd2b54d8e91ce mc pos: in auto mode reset the position to current position. Velocity controller ensures continuous attitude setpoint
		7d893703d73df879b244b793349112aeb1d87706 ensure suitable PWM min/max/disarmed param values for multirotor and vtol
		3fa3158ca27120ecfe7724e92943db1dd6fc1528 sdlog2: Ensure sensor combined gets written
		168f955e0cd4133417b2f917ac123df71d4924fb IO firmware: Ensure that in case of lockdown only the lockdown code writes servo outputs
		8007a84ab3bd002fca675b808035bd18d5c658ec FMU: Ensure an all-low output set on boot with direct start of the PWM sequence
		6ee8e148a202ad71f707bc279150b5b37aa52bce Camera trigger: ensure it executes with minimal latency
		1474ddbb78553eba8a3851a6b1f8458b426080a4 MS5611: Ensure to set the lockmode at the right location
		401af28b38dd2de5ad59e264c06aefe57ea6f3f5 Ensure that UAVCAN_ENABLE is always present
		1cdb2d3209f46bec0e694b93425495644c137a69 PWM command: Ensure we have enough stack
		c140c2b59c9f1e3eeacb9c4bcdd421572a0feca3 Baro sim: Ensure struct is initialized to zero
		79a030ec5033443aecc9f4b097341de7fbdff518 Work threads: Ensure they have proper names
		4c60f4d98a2c27e5e0393ba6d9cc5cfc66d86df6 Q estimator: Ensure init
		3af906b9a8d5f9c730b984ea9b98c08ce0985c63 Ensure g_hrt_work is zero-initialized
		07df1be8418538e9f5af12fd6f7be46328db4772 Simulator buffer: Ensure we do not become limited on message size
		dbcb226de6ffd41882342eeb65f9bb1745641751 Sensors: Ensure all mag rotations are visible to the GCS
		336ca86117f981377879189265ca93ca7aaa8437 Commander: Ensure primary sensor is present if configured
		51707245bb643a79bec6a75e3a151549ad1093c1 Makefile: Use blunt force to ensure uavcan submodule is up to date
		b799c730f2f063d616f62940aa51dbcb5d268de7 Travis CI: Build FMUv1 image to ensure its operational
		15e17f4a5879198a23212f8caa0c11784600da48 IOv1: Ensure image is aligned.
		dda740b7094454c45e7e1f2d015c688390eab213 MAVLink app: Ensure to report battery status correctly according to MAVLink standards
		d63231a23cdc4eb0b0a6539d7e78b1567d91524d sensors: Ensure safe batt scaling default exists
		e697cabb6ad3c2ac8704aadf22f132b32a095ae5 POSIX: Exit on failure if not running as daemon. This is to ensure errors do not go unnoticed during bench testing
		a7e3232e7fbd87b9e1f2839fd4da24ec34758c4f sensors app: Initialize class count, remove magic numbers, ensure that the sensor combined struct cannot overflow
		e0f203e3daff4c53be643daf187424559b3c0dc1 Sensors: ensure trigger param is present
		09da389558fa82965334c9e699b5c5dd84788482 TECS: Add in-air state and trigger filter state resets when not flying to ensure correct filter state initialization
		adfd1b2579ad786686180505dcb232cf6e3dd1ba sensors: Ensure data is good before publishing
		c28a69fba8873b7551f1031e32f480c4f9a522ab Mixer test: Ensure its not susceptible to timing jitter of the test harness
		e76bdc3cace535108aa90ca89eadfbaef1f13b01 EKF: Use unfiltered airspeed if airspeed is large enough - rely for better stability on the filtered speed for the threshold. Lower the threshold to 5 m/s to ensure airspeed fusion even on small wings
		f9f34078d15281f3edfc0a1e0d49ee1676ee2d33 commander: Ensure RTL can be triggered in all modes
		e8a9c200561fea02f24a97883e6c617d07b251ce EKF: Ensure we start with zero local altitude and zero GPS offset. Since the filter is not publishing any data at this point this is not relevant in operation, but might be important later if we publish a separate altitude estimate topic
		909508f8f9cf1007efd24ab242045faaa16d9995 let mixer sleep a bit before loading to ensure device is set up
		fe09e53b5bb7fe9f7d9734b23f3fa96145139d44 EKF reset handling: Ensure altitude reinitializes correctly
		1fb743412810727d18f2815f541be1f75c11bfeb Navigation capabilites: Ensure regular publication of updated topic
		635b7fa01d5627ef998c01abad4e5cda89f086f0 param API: Ensure info count method is called
		e7c30322187068d76cf6ef9ea9935856134a3c6c Mag calibration: Accept less rotation to start the UI, ensure calibration abort does indeed abort.
		a124bc07aa170b7ea03a901e480157631396d5cb Ensure SYS_AUTOSTART param is always selected
		e09f5d2871f0c23cf8eb8154a2fa8831d9b96062 IO driver: Ensure comms protocol cannot get into integer overflow on bad control outputs. Fixes #2119.
		14247d95dd0b0d1ebc9716d4c94e6dcf9dcb5933 Ensure Eigen is installed as submodule
		06b582f11e2782b07737ab6c75d2dcb14820d705 Accel calibration: Ensure GCC 4.7 compliance
		50a58db7e605c61bb50cfb154cbc43bf9c4c67ae uORB: Ensure correct instance initialization, port complete mag API to new interface
		18d756dd599f93abcd5dc89f323a5df77384ceac USB startup: Ensure that we are not talking to the peripheral too soon. Startup does not take longer due to smart rearrangement of launch calls
		e037b7ae9b361812e99c5985a9c543c2ba503de0 Added delay to ensure the the px4io is in loop waiting for a characterit loop.
		dc7ee4247f3cfee6647876ba1873e0508e29ae00 HMC5883 startup: Ensure sensor configuration is always performed
		aa40c69853be0dc7e79bc3084472b77f9667c1f1 Ensure no SD alarm always plays. Fixes #1500
		ef450cc447a93a5bf4537738fda75d85374e570d Enable examples by default to ensure they get maintained on API changes
		9ac13745f8356db60322fa92ecdff1125c76f172 Adjust MAVLink RX prio to ensure received data can still be processed
		ce1ec430f89e2080ad053115459bf91dd6585d3a Ensure MAVLink app has enough stack space
		ec09f080083fc297228857397eef0651085887d9 mf checker: fix landing check, ensure feedback from all checks is sent
		73aa7d81e31e18a6d1405697856e389a7a7b89af mf checker: fix landing check, ensure feedback from all checks is sent
		2cc5c6e84f2fed508a358d2b2fc9c38085c446db INAV: Add braces to ensure statements are evaluated correctly
		258fb27e146ad175ca89a84ebc9c340a53db0884 Ensure that a failing dataman start does not abort boot
		0cbd943d093f2cb69102e57ef7964b5dbebd9f86 Differentiate between EPH and  EPV. Do not declare position invalid because of EPV (because we use the baro anyway). No fundamental logic change / cleanup to ensure current approach and arming logic remains intact
		3935540c7df0f67946b637af6dc2d3145453c326 Set full voltage correctly to ensure percentage range fits. Force all users to new value by param renaming. Since this will tend to show batteries as more drained than before, this is a change in a safe direction and will not trigger unnoticed discharges.
		5baa3690e02067380f35a551e634b67551ed214f L3GD20: Ensure init and constructors
		f162a3e8d406e52d42ad84ea80ca6678577b9263 LSM303D: Ensure init and constructors
		1ac2b307e4424d3b6555ab3ca21c43d8de19b81e Enable stricter compile mode and ensure the most relevant bits are initialized. Needs more work to avoid the remaining warnings
		9c63aba9a72083afe1e5f818c6559760c5b6b1cc Ensure NaN check is executed before any parts of the filter are run. Fix GPS velocity reset for case of initialized GPS
		5aef22310e0dbec9f758e4cf1df5ad93cbd989ad Ensure states are actually copied in non-error mode
		8deb1c9160ae02828ce5bc810a4262daca94b530 Read out the RC status at the same transfer as the channels to ensure we got synchronized data
		559c62b6bc4923854e106be5987db92197e0bae1 Changed low threshold in px4io firmware to 10% to ensure compatibility with user configured single channel, mode switches
		904ada124baea8ef744535053a0c3b40871565e3 ekf: Put reset statements after variable zero operation to ensure values get initialized correctly
		b8afcf5863fd59d740fd81a77cfc97cc9ecdc07a Ensure that the mavlink start call only returns once the new instance is fully initialized. This avoids race conditions in getopt() and it ensures that the mavlink debug fd is ready when other processes start
		91c55503a860ffc02a2687c141e2cfc68a43b3cc Ensure only either S.BUS1 or S.BUS2 can be active at a time
		57d38bc8cec1362308f632e74e99485f82a35501 Clean up RC related metadata, put everything into the RC data page. This ensures atomic reads, makes the reads more efficient and allows for some headroom for more RC flags. The IO driver side is updated as well, however, these flags are not published yet.
		92a6c7d7344ae0a463e0c04c3b5bc6cf8f4ddc53 Set timeouts back to short, now that we have multiple tries in the uploader. This ensures we try often enough in the 200 ms IO bootloader wait phase to hit it.
		a5e95bde0a77cdd894b926860dba8bc98eaf4dbd Added lots of instrumentation to ensure all data sources are coming in clean
		71ac33596836519a341001bb48a8835b8af75cd3 Small improvements to autoland, ensure that throttle can be shut down close to touch down. Depends on accurate land WP altitude
		1b32ba2436848745e0a78c59fffa0a767cab9d3c Hotfix: Ensure that a minimum of 10 degrees pitch is set on takeoff
		c3bb6960e6f85d07d65fefdfebfdc0650e81aa92 Fixed mavlink start / stop to ensure process is in a sane state once NSH return
		56a35cc8896b077e70226541a43aa0d449e8d9bb Fixed commander start / stop to ensure the state is sane once NSH returns
		0f19de53119e5d89b2520f6906ab50fc9d3a3b28 Ensured correct pointer init
		e19d2e94ec5c38c2800a7001a2a04102734012d4 Hotfix: Ensured there are never two filters running at the same time if auto-magic happens via USB link
		11544d27b7629078b6a7a2247f159b535816e019 Hotfix: Enlarge the buffer size for mixers, ensure that reasonable setups with 16 outputs can work
		fc572906b7693d910ded443632e8608b200a7933 px4io: ensure upload device is closed after use
		f1d8aa57ce9854920c9408c78be3abdc064b4b9d Ensure that numerator / demoninator <= 1.
		dee0a30e16e3d4d9725eb16f7205cb1dfa1063cd Hotfix: ensure PWM output on IO and FMU stops when disarming
		d4ca6a29a19c96d359aa1458a4e6f3d9c86b01ac Ensured that the mixer output obeys the FMU and IO armed state
		caa11f0bbb7f30679c5c01a64e1d0f6d8627db9d New option to ensure serial stack is always included.
		5ee52138c4ac5c807888e3973099fd0f9a29aa59 px4io: ensure RC_OK status flag is set on good input
		06e18f14e65dd493c4d5215874d8d3cf32440b59 Ensure that sensor drivers are loaded
		4eef4e186437c6b923df7b9dcffdc3723c411560 Ensured startup of USB link, updated port ids to read from
Results: x/218

rate			3, 10
		e0bcc17f5b1e0dcbe422dc79875dc599f655dafa mbe: integrate pre-takeoff mag bias estimate in VehicleMagnetometer
		d504b49695bc68df92296e7a0ac7e4fec00ca9e1 mc_rate: compute control energy and publish to status msg
		9a3fa6199bf079cc105bc93f3a0590fc0dafb1c2 uorb top report total publication rate
		92a48657e341fa1e7a796938c4c20222c863a693 Jenkins: hardware tolerate listener command failure
		3ff9295cbdbc25db40f874054f5e0499f3f7b312 Jenkins: hardware nxp_fmuk66-v3 limit IMU_GYRO_RATEMAX to save cpu
		369776cd4e8ad37cc729377c68ef1f462b626b78 Jenkins: hardware don't tolerate px4io status on known hardware
		00d939995b0577300d93d905699881cf61519018 fix micrortps_transport: set poll fd when baudrate is 0
		810dbbd25b5a1e3a27918d1cd51f3c1059335cc4 AFBR mode switching, rate switching, and test
		8aecc64a737aad85bd5b4a908de7697a6516d7e6 generate uorb - support multiline descriptions
		51fa834ac6907c475d2ee8da7786260ad76077c0 generate_msg_docs: generate better page title
		ffa70ac0fdbc38d0b248732305da6c888fb7efa2 microRTPS: generate_microRTPS_bridge: run fastrtsgen only once for all files
		4609949bbb6e89d1795c38f2aef65582bcb28598 microRTPS: generate_microRTPS_bridge: only run the generator for the topics that are actually marked to be used
		86dc35022a6eadddccfa32007d5cae9bfc3d10ea generate_msg_docs.py: simplify logic a bit
		da6275e43a54e11dd6fd7ccaa7e40822551a3628 msg: add script structure to generate docs from .msg files
		1e2877cedf561dc229485dfe318e82360310ba73 Tune down solo roll rate controller
		7f4ffcef9309048c622db5fde01892b2fc764e16 Jenkins: HIL add separate status for flash constrained boards
		ae0438e8f58081371eb61e5f829888896d85905c Jenkins: HIL no longer tolerate SD failures
		c8e6d93cc0f9146d46db9de306bec170e39d025f ekf2: backend apply code style (generated code still exempt)
		72d08fe915f2831fda4fbedfa7e6a15356e3e8ab improve airframe generated output
		2d8e183aa3b85cffac172fe73d0f0ca1ea198c0e update EKF derivation auto-generated code
		e3972d563a4bd6d8c3dbda9837588cdfb273c3cf cmake: ensure generated source files exist before extracting events
		7c5838116a677be92150ad0cb531d8ea53ca2bdb Tools: add parser to extract event definitions in source & generate json output
		8d74e52bb712bf73659fd55804c196730740f3bf battery: omit separate publish() function
		6d5f12d2a2ab97f17070179cf3ccc94c3cbb4845 microRTPS: client: add TX rate limiter
		64db89ab205347c8e5134fa2875f8d7794806799 px_generate_uorb_topic_helper: Use inttypes
		468aea94099376028d24f97825d8b60863560eef cmake: enable --ethernet to generate common param metadata
		ad9288536b39183c6ec69e05c70b69de58073acf TECS: enable direct height-rate control
		f6de99d42ee631bb67c1fac6233a7dae19e2d232 FixedWingPositionControl: control only height rate when using pitch stick in manual altitude controlled modes
		19449a4e75a045f5601748d46f60a863bbdbf30f FixedWingPositionControl: use target climb/sink rate parameters as maximum rates in manual altitude controlled modes
		a5cc449e69b8e0cade8471f6b33b386c71b11bba tecs: propagate altitude setpoint based on target climb/sink rate
		4b7416c05bb10155c308922d33d96daad73b7d10 FixedWingPosControlL1: added target climb and sink rate parameters
		d430e13401040464885795a9a986c1369c1d0eca sensors: wait for real sample rate to initialize LowPassFilter2p
		3340fca33266bdda48e3289336ec0c4fb9b51865 sensors/vehicle_imu: move accel & gyro updates to separate methods
		a5979e16be61ba087060f46227ba5424c1f3da90 sensors/vehicle_imu: move publish to separate method
		b264577daaed7c28efc16475568378aef43114c0 sensors/vehicle_acceleration: require valid sample rate before running
		e18b1c0355597d344186f8485014e835005085ba mpu9250: tolerate missing/mismatching FIFO samples if I2C slave mag active
		44cdc52ef82702c40dfcc583b40214cbc52f19cc PWMOut:Use rates from single instance & init all instances channels
		b898aabfed4926b75786b951215c5bd10768a9a9 Fix the repeated configuration of PWM rate after initialization
		3664d9e4ceb787e9915a748875488fb865f05827 rover: publish actuator controls with rate of gyro
		ff67da1bb4c29e0e65cca4809bc1efb87c3bba49 SlewRate: add getter for current state without update
		3dad16bc40cce9ab9702c1a868ba8bd62b6664bb RTPS client remove redundant baudrate check
		76e15b4a2150ca00a9d126a4cefc24344d9fdfac RTPS client get baudrate parameter if requested, and mark the device baud rate parameter as used so it shows up in QGC
		047fb1392236fe4141bc4881f8386458bb8e690c IMU_GYRO_RATEMAX: enforce reasonable constraint and update metadata
		bf09089a26b9b7672efc12a467fe6795cb81d471 PWM out: Collect settings for all outputs There are settings that have to be the same for a split output across multiple instances, like for example the PWM mask and rate configurations. This change collects them for all outputs of the same underlying driver structure and applies the complete set.
		6bc11596fe72771210ff5a6aa205c3a8004a19ab VTOL mixer: Correct alt rate channels The baby shark config did mark main rate outputs (50 Hz) as alt rate, resulting in the alt rate being set to 50 Hz.
		aa22407d8758bb0826d10fdfc6aaf18c98659950 drivers/pwm_out: only print rates if changed
		f33fee99c16a4f6a5de502bd16c1aef383c30baa ROMFS: init.d-posix/airframes migrate EKF2_GPS_MASK -> SENS_GPS_MASK
		5f4802a239321b9f3d1845f4e7b4262030752039 SlewRate: add back dummy file for mac build
		34a5948692995d9a045931ba103c931d34dd7007 Adapt SlewRate includes to convention
		346f269d8fb9ba862a08d5aafd75a0cbf7bf3080 IMU_INTEG_RATE: add 250 (used by SITL)
		e58af90bac2d8b14520d2c84f274590067ac43e5 boards: holybro can-gps-v1 create separate default and debug variants
		c4ae667157239d40bde642cb3f4ded95716421f9 generate_board_targets_json.py: exclude uavcanv1 for now
		32012cb3ee517fb24fc3e31dd41cbbd87fe6f3ee for cmake option GENERATE_ROS_MODELS to make ROS sdf models
		82a2126f97b9c769d8e8bb2c7f8f89cbba4c7a28 TECS: add feedforward gain for total energy balance rate
		01c9a4f24dc38e071e4a0f7831a673a5870b1d75 ghst: fix warning generated on PR (Clang Tidy)
		893eee4cb8a55dee2e971ffca3b1857c3bf34fee logger: double sensor_gyro_fft logging rate
		6b4ccaa53e4e1c7ff45fe057bc2d1745dc7597f7 Handle invalid yaw rate setpoints
		06e3d38bbdb889a196ecfe9138a8c5ab4dc623ce Fix yaw rate ignore flag for attitude setpoints
		1d8c55db4a5ce9aa95069d1db362e5020f2fecef mavlink: fix yaw and yaw_rate ignore mask check
		3f872ebf208482abc98c498eb6aeea0a2c5cedbf mavlink: move HEARTBEAT to separate stream header
		0c138b7e031248ebd1a4dd07113cfffb855a7d2a mavlink: move CAMERA_TRIGGER to separate stream header
		b955c41a63f20b7e0fe053253f41929d1d1bf289 mavlink: move COMMAND_LONG to separate stream header
		801202f2088236a230bf683e7cee99233021a21e mavlink: move BATTERY_STATUS to separate stream header
		dc1418a3b452ffe5b1d6ad30f25f74193e9bb6b5 mavlink: move SYS_STATUS to separate stream header
		5a025cfa28ce0a1448ab057c2d410db875cb22a1 mavlink: move SMART_BATTERY_INFO to separate stream header
		ec6758f5affc2c0a0ddd944fa82951db3a4eec42 mavlink: move HIGHRES_IMU to separate stream header
		248978b25ea4fa67e40b5762ef71ab9824a73a4f mavlink: move SCALED_PRESSURE to separate stream header
		c6311324d2022af2a8b686f22411ca7c48575327 mavlink: move VFR_HUD to separate stream header
		d46ae7983f007022e86421bf22b96d76e82048ae mavlink: move GPS_RAW_INT to separate stream header
		67a204206a846181562b96ddcff93a2989b6ba3a mavlink: move GPS2_RAW to separate stream header
		e2f7427679b45ad5cca428963e8b59a577f92b3c mavlink: move AUTOPILOT_STATE_FOR_GIMBAL_DEVICE to separate stream header
		462d67f2b6ef9bbbdf4d7d984091c43f4d50439f mavlink: move TIMESYNC to separate stream header
		849000ebeb9b2546cfc639ca01470bb0f161e456 mavlink: move SYSTEM_TIME to separate stream header
		af06adecd36ea8f512fb836dc5617b196575ca55 mavlink: move ADSB_VEHICLE to separate stream header
		ecfbd79a90f0ed00a6fc691d875f7beb7ec8fd5f mavlink: move UTM_GLOBAL_POSITION to separate stream header
		e04252151c6fedd4378a3cfb84d3251add5eaace mavlink: move GIMBAL_DEVICE_ATTITUDE_STATUS to separate stream header
		c9d44d57413619885157a8b703d9cd68e0301f20 mavlink: move GIMBAL_MANAGER_INFORMATION to separate stream header
		aaf7b41dda053afee5451030611de5823e0e6c2a mavlink: move GIMBAL_MANAGER_STATUS to separate stream header
		581e28eb334c3ad4714d92a936df8016acf6535c mavlink: move GIMBAL_DEVICE_SET_ATTITUDE to separate stream header
		ddca6698521523cb47a350268f366913ab82841a mavlink: move CAMERA_IMAGE_CAPTURED to separate stream header
		50bd7570373d5d22cd0bba7e1cfdf8b8a9cad6f8 mavlink: move GLOBAL_POSITION_INT to separate stream header
		ede01e8f1a2f667e0c0a3889f236d5262318e888 mavlink: move ODOMETRY to separate stream header
		7daa97f279e408832f6a8ff1c87353287107d1ec mavlink: move LOCAL_POSITION_NED to separate stream header
		5f7d577e0434706e30b12e9c0ad4e9e7f7a9dbb0 mavlink: move ESTIMATOR_STATUS to separate stream header
		a1a557cfe3df6a7d8dfaedfaf45cf6c35b52f025 mavlink: move VIBRATION to separate stream header
		239ed19827ad076f39a0aed26d87b09e136dc02a mavlink: move ATT_POS_MOCAP to separate stream header
		3964cfb3a72aaae8ef1a45eed10ce338e51b94b3 mavlink: move HOME_POSITION to separate stream header
		f7ee6b3c5e8a47e36f64eb869bd81b8ddedbe3ee mavlink: move SERVO_OUTPUT_RAW to separate stream header
		5eef9358d9de41431381978d9a9b704a8d4ac26f mavlink: move ACTUATOR_CONTROL_TARGET to separate stream header
		dff975698e7a1b3422072f97be362872c4e7ec5e mc_rate_control: delete unused _landing_gear_pub
		cc3c6f63e5acb997d5025632be21095aaa264432 mc_rate_control: simplify manual_control_setpoint update
		d5e468a19ed9e7f5fa94ca988d86daf5a0464570 change typhoon_h480 roll-/pitchrate P gain to reduce oscillations (#17044)
		5d441d65e1d4c7c72bec8e74be68b92dbadcaf28 Accelerate tilt fine alignment by reducing obs noise when at rest
		c9a2d0ed345a7e9b348d763fa8de58ed0901a797 IMU_GYRO_RATEMAX set system default to 400 Hz
		a1be55997874fc6a7ae059239a81d838251c9a0c canbootloader:Remove Rate limiting on FW update
		5f3e883f2c1bb59fe5bc9c89d5662f38a1c87495 sensors/vehicle_imu: vehicle_imu_status include accel/gyro full raw FIFO sample rate
		69bd3ecf952c43ddcbc8fb3bd8828380fe7e8292 sensor_calibration: respect board rotation even if uncalibrated
		5c27c477465d85a8e8add4eb2e094b26bf62067e Jenkins hardware limit px4_fmu-v5 to generic quadcopter at default rates
		cc11fb281854a1f9154cac9d8258262e60898c99 Multicopter rate controller: Protect for full throttle scaling PX4 supports -1 to 1 as input and this module was not protected against the input range.
		8a448718b97bbbcf0d6be820ade2fc660cab4395 RC update: Do not constrain throttle If the user calibrated to negative throttle, enable them to use it.
		da1a38b44ebcd1b9ff5ebdf7c18ea0952beca8b5 parameters: merge generated files ito single static constexpr header
		d1a3590aacfa9f706aca091d0727aa31ce16a94c PWM: transition PWM_{MIN,MAX,DISARMED,RATE} -> PWM_MAIN
		8b8adbf48e2d2d0113e625be853a4e7bec727264 Jenkins hardware reduce IMU_GYRO_RATEMAX on some boards
		bb7dd0cf0016ac1998a79814ec52b15079a74c1a modules/sih: move to px4 work queue (wq:rate_ctrl)
		ce76c84ce2b9ea5fcc21b9177324cf73de57eb24 sensors: vehicle_magnetometer respect publication rate limit SENS_MAG_RATE
		cf43d07f708fb13f41b69ec9770231e2983e5fd3 uavcannode: refactor into separate publishers and subscribers
		b422da45ec0539af7120fb535658cdd9243c5775 boot_app_shared automatically generate UAVCAN bootable image
		75f02d64b6556a8d567b39d80d17f7dd18f77c8e delete unused PWM_SERVO_SET_SBUS_RATE
		4922659ef4c890e3c307c46092e62a774b8180bb FW Position controller: specify in params that the airspeed setpoints are for calibrated airspeed
		420ceb76fcce230cfe66d4ea8a64b12889ee6141 cmake: NuttX generated vscode launch.json requires DEBUG_DEVICE found
		5c4c2c240c5c39bb8743e480e817c798d8cc17f5 tecs: dot not clip throttle integrator during saturation but only allow it to propagate into a direction which does not saturate
		2ca426946431ee9683fafe2a7d793cf7d031ea41 TECS: separate integral gains for throttle and pitch loops
		d0e8b882a23a009fc1fefd2f579376f6a0fff495 TECS: added alpha filter classes to energy rate and tas derivative
		6b8fa417e192bead013f93e54aa657b1aab02f0d SlewRate: Add SlewRateYaw handling [-pi,pi] wraps
		7c727edc3fc9ecdf4b51b4219ef44335ff5afba5 Simple mixer: add output slew rate
		3cc53f551d724c215302fe9a76671eeb5e7d6ab4 MAVSDK tests: Use full system timeout off Depending on loop iterations for timeouts is not accurate, as usleep behavior depends on the system load and asking for a 0 ms sleep can potentially return immediately.
		f52bad87e2a2e1ed12bf4715ddef93c2efa6d996 mc_pos_control: separate out flight_tasks (into FlightModeManager)
		adb98d57022dd515e0a2056341280200576deffb mavlink: move HIL_ACTUATOR_CONTROLS to separate streams header
		3b20310e9c9d8ff18f51dea5c7ab911bda01fda7 mavlink: move POSITION_TARGET_GLOBAL_INT to separate streams header
		672a1c90aa3ca42263173e399882447b12972474 mavlink: move POSITION_TARGET_LOCAL_NED to separate streams header
		6b1d02feb7aceb49e4cbbad1bb2593348bdd0549 mavlink: move RC_CHANNELS to separate streams header
		48be6962d1e7cd3b629efe3567308303fa8e35c9 mavlink: move MANUAL_CONTROL to separate streams header
		629d03b6842eb83ad54ba8a6a0ff6f20bd7eda16 mavlink: move TRAJECTORY_REPRESENTATION_WAYPOINTS to separate streams header
		5762c3b3565cf60b1184c6ba42e2e13fe7f5e940 mavlink: move NAV_CONTROLLER_OUTPUT to separate streams header
		c7db0942ba5d46f17a47d0aa44419eeedfde9ed5 sensors: vehicle_imu don't round measured accel and gyro sample rates
		bf5ee99952c72d3f18b368ec78e40af10cd2f167 sensors: acceleration always get accel rate from vehicle_imu_status
		7038cb8518ea12844c4f9d49d5236493abc8ebfe sensors: angular_velocity always get gyro rate from vehicle_imu_status
		053bf7e732ecbd3732cc3a24d64a069ec2d2bff4 Jenkins HIL tolerate certain failures
		ab43a942249091eb325a968610d162fd2294173a gps: keep track of RX data rate
		8435742dd51e13f2a2bef1ec7c54ff24a27f5df6 logger: double actuator_controls_0 and vehicle_attitude_setpoint default log rate
		4ed3ecea415dfad230fbc42a6ed84561c985598e lis2mdl: reduce update rate from 50Hz to 20Hz to reduce spikes
		cb4d974977b3fbe6b443536b789caa4da8c00aab mavlink: move GROUND_TRUTH stream to separate file
		283264603a4f6adcf264a6eb3680e9b4397bf361 mavlink: move PING stream to separate file
		97dc988f869f08b8f2ffb56035c00cac7a48bc3c mavlink: move ORBIT_EXECUTION_STATUS stream to separate file
		826dfa1941520ca51c705336727745a701f906c7 mavlink: move OBSTACLE_DISTANCE stream to separate file
		94146a7b166dfbda7dd0c3ce3567d720282a3743 mavlink: move RAW_RPM stream to separate file
		9c4abf334b772f5263f6de93605945181c516e72 mavlink: move ESC_INFO stream to separate file
		1ddfd61d34bdf3d8e8ea164c1a9d62b1bf8266ad mavlink: move ESC_STATUS stream to separate file
		674cd1e3b50de12d8298cf73c7d4c321a9d4c990 mavlink: move EXTENDED_SYS_STATE stream to separate file
		8f858d95e6b4f1e6df57716b5b45fcf89be76d8f Rename equivalent airspeed (EAS) to calibrated airspeed (CAS)
		98c8cbb27fca8a2e3876e1eee7defd68df136721 ekf2: fix odom body rate sign bug
		9d3e159e65d2148d801e4ff8031783204a48b6ad Make mavsdk test runner handle generated sdf files (#15797)
		ed357cf3563804ed1fd8b323124cefcfbff5f0e3 mavsdk_tests: move math things to separate header
		390edb770d5a6c09bd858049b4af9273127cfd92 Commander: separate failure detector cases
		4addf8ec3e6a5088336ba946d0b4f5f7cae3e4f3 thermal calibrtation: do not calibrate sensor without temperature sensor
		c43307b8cf1af2590614c056ab0bd5624ac08d73 EKF: convert drag fusion from Matlab to SymPy generated auto-code
		168dbdf6301f64449d3d21114db10e331d25890a EKF: Convert sideslip fusion to use SymPy generated auto-code
		a5a43dbc6c6e1cb12d2a117cebf20da702ef95ec EKF: Convert airspeed fusion to use SymPy generated auto-code
		1592db8f347636d49a7d02c70b6fde8542d5b8b0 EKF: Convert optical flow fusion to use SymPy generated equations
		1f386c1bb8d8a294e1b556573f1de9e76d20d227 EKF: Add yaw estimate SymPy generated code files
		0aa2f17562817432ebb6a7821990b57a5a3644d5 EKF: Convert GPS yaw observation method to use SymPy generated code (#880)
		21cc46edd7598fcde738cac4fd0f5ac5f24199f0 EKF: Convert magnetic field observation methods to use SymPy generated code (#879)
		5e739f66d69372eec94050b39194f8792f858555 mc_att_control: inline control attitude call and rate publication
		c5eb08423667e9438a6d8503ea8226c4c2a24dd0 mc_rate_control: use angular velocity timestamp for dt
		310b989c9aaefe69d9a29c0d670f3afbbf34ad03 refactor start of gps into separate function
		f950fe8a38748e701f353994932c9050fa92a9f3 uuv_att_control: added bodyrate setpoint to the geometric controller
		958d5a36ec9dd52a1e44ab6ff8dd92086babe0f2 params: generate param metadata as MAVLink-compatible JSON component info (#15389)
		acc3866ac93a180301984a54fc6ba6959e7b23ef generate_microRTPS_bridge: make sure that the ROS2 version of FastRTPS is grabbed in a colcon build
		c01bcd41f793f39eab10dbed8667d3956f6cb38e microRTPS: minor adjustements so to improve the readings; add more baud rate options
		77b11129fa567160a2ec442438ed513cb9de89e7 EKF: replacement of covariance prediction autocode with sympy generated output (#870)
		1394b5d7bcb6189ce978f80cf5bf9c8e025883ba sensor_baro add separate timestamp_sample field
		19059a80bd7f969082f6231748595f8ab9800751 sensors: throttle vehicle_air_data publication (SENS_BARO_RATE)
		8020d6407f1045f6f40c3142c80056ed6a2cd450 load_mon: remove obsolete rate comment in description
		b0458fbded813572a0c69eb63085a575bb57f2db Refactor output buffer updates into separate functions
		ff4be5d81582e5f4bb5dda616f44fa1fa1c1b0ca Set rate when subscribing to velocity, specify units
		8763d71bf0b603e0da42ea16fceae7fd2590546f Jenkins: set IMU_GYRO_RATEMAX to 4kHz on holybro_durandal-v1_default
		2af72c05b5eece5b1d935636bd0fec8cf9a3ef48 Jenkins: set IMU_GYRO_RATEMAX to 2kHz on px4_fmu-v5_default
		41b9e4f628103e0d11330a27d888244416def839 geo_lookup: move tables to separate file
		32c2064673dce13dc293371850ac47886155260d migrate Jenkinsfile checks to Github Actions
		37817dd0afb60d2ebac544c6075039b20696caf6 github actions build and run tests as separate steps
		6c78c62d9d3a016634a6f32d5190c2a679272adf BMI088: accel get max rate from PX4Accelerometer
		ab060cdab076fb6934a86a75349cd9330c873432 bmi088 accel: use IMU_GYRO_RATEMAX to configure sampling rate (with 800 max)
		0fcb873636ec2b8c7abcb9587f582d3f79db86a5 logger: add raw FIFO high-rate IMU logging profiles
		39a33a35ae0f02a58b45e33de5cc8cb844b52755 sensors/vehicle_imu: pause computing publication update rate
		5d6a72e383f36557a3381ec31b952ccc0ab2eae3 sensor_simulator: add possibility to set GPS position rate
		867453eada66f96959165a0da04e274314acb2b8 posix rcS: always set IMU_INTEG_RATE
		61a2dd8ec65aaaec3a09462fab5c1cae96580b60 Hex CubeOrange: limit slew rate so IMU works with DMA
		acdc15e2cdfc9fc25bddefe0a4b5a0d0323e873c mavlink: create stream even if rate is 0
		aef2a5755ebbc5fd5afa62d42697f44bea44fbfe moving storage_information stream to separate file
		62e15cbacf865e7ea32623fa6dda87185b4f3a5e sensor_simulator: set IMU rate to 200Hz as this is the new value used in the Firmware
		6126c190b221fd6890bb9ea3214b63a83f2d23f4 sensor_simulator: update EKF at IMU rate
		73bb18a05355d3789d34f37dc609927c6af4ae4e px4_fmu-v6x: Limit Slew rate So IMU works with DMA
		a9dacae57e1a20636ffb7d386450790725f1c0f6 sensors/vehicle_angular_velocity: limit scheduling to IMU_GYRO_RATEMAX
		96f043cd6247ea8ab3531c99b9399cf5b17e4964 sensors/vehicle_acceleration: limit scheduling to IMU_INTEG_RATE
		bc1960ef2b21e9a5ddb87e9d8e7c1450f914a153 mavsdk_tests: make offboard tests more accurate
		d92e66863ac057a4a691d482b8566081700e9e1e mc_pos_control: migrate MPC_*_VEL_* parameter to acceleration scaling
		bd154bf33c33763e57820b5298ca3bcb767ac250 FixedWingAttitudeControl: removed parachute from gimbal control group - parachute is handled separately based on flight termination in px4io
		e577c3b610894df3763b282a42aa3d354bee3a35 fxos8701cq: sample at nyquist rate, drop duplicates, throttle temperature updates
		e73380f726510585638e4e3ea487b9e8bfcbdc2b fxas21002c: sample at nyquist rate, drop duplicates, throttle temperature updates
		b5e23f544e7ec59ec431b4ab684736ad898e28ea Tune down solo attitude rate controller
		b461066ac529dc45c0462685a42b6ac68c3398f7 bmi055/bmi088: remove TIMER_REDUCTION, sample at Nyquist rate
		ca998c1822bd2330e6d4da3690dea860ed722784 IMU: parameterize IMU integration time (IMU_INTEG_RATE)
		3ea52fecd36956f35688bdfcc572f2c595fdc9c2 Added Roll Pitch Yawrate Thrust offboard test. Testing...
		48c60d354defe4adda4a742b20b40ea4b5f19cf1 mavlink: move tune publication to separate class
		3832214145705db3661816e8b4e323f81a9e1883 PX4Accelerometer/PX4Gyroscope: fix calibration offset for integrated FIFO case
		37d5d1b4d2abd8b65f88c01d64265d7cd96b6880 PX4Accelerometer/PX4Gyroscope: integrated data avoid loss of numerical precision
		06478d99972548d4c4c2f370f3608bd031833026 delete obsolete SENSORIOCSPOLLRATE/SENSORIOCRESET and systemcmds/config
		1ac6230758f5d400a0e6cf30d821a7fff8cccd20 boards: always change default IMU_GYRO_RATEMAX on px4_fmu-v2/v3 and mro_x21
		2020b77a438b4c3ecc4fc609902dadd4c73f2d87 microRTPS: use FastRTPSGen '-typeros2' option to generate the typenaming required to interface the bridge with ROS2 topics
		b3fe235129a6b6960233dae3faf5a7015d3e15df drv_mag: delete unused MAGIOCSRANGE, MAGIOCCALIBRATE, MAGIOCEXSTRAP, MAGIOCSTEMPCOMP
		b3d744505935bc529881fb0eb39075b79d2d9bbf PositionControl: acceleration based control strategy
		3d44077f2cd54f506ff152bbdeadbc28fc7c6135 camera_trigger: lower the polling rate from 200Hz to 20Hz to reduce the CPU load
		2ef37cd065afc58e5c0394b201fa03be18a13363 Spawn models separately from gazebo models
		336745f9f7d617a9bc88ffe29674386d0d308930 tfmini: reduce sampling rate from 10kHz to 143Hz
		df99555132dbbd1b59d4c75af1f4798980f83d1f refactor ll40ls: split I2C and PWM into separate drivers
		9d5aebd235bb9cc6abbc7a8d7b9c3f07eacc5958 Commander: Run continuous pre-flight checks silently As we are checking the current pre-flight state and validate wether the system could be armed, we do not want to spam the console or user with continously failing checks. These checks are reported to the GCS separately and are processed and displayed there.
		093e9ba1cebbfeddbbc4c7df53f4ef5d27568e12 mc_rate_control: use vehicle_angular_acceleration topic instead of differentiating
		7612879ffdeb1893e346527c1d7d398a3ec6a305 microRTPS: use FastRTPS version instead of FastRTPSGen version to generate conditional code
		512c405834fa093ccb4d33688ab481b43dcce77b microRTPS_timesync.h: fix comments notation so to be properly generated in EmPy
		b4ecfb77237669942686afa6edbb5a9234b99d75 EKF: Fix sign error in earth rotation rate correction (#763)
		bcb6056a12ae88c2bc04425e3fae8992997b5cab simulator: make sensor update rate dependent of the HIL_SENSOR bitmask
		d386591d0cf5d86108f55e20d55fc60036d577b9 logger: reduce rate_ctrl_status rate to 50 Hz for high-rate logging
		6c8f39c5d8b28be77cd5f4b59064fb9bfa274f78 MC rate controller: limit K and P values of PID controller to in pitch and roll (#14210)
		0ac300f77ad5bc1f957ff5cd916700edbd87bf06 Rename generate virtual RC setter/getter
		8df22541ef4b4e334a14ad900e1d70601620c0e1 sensors: filter sample rate calculate with simple interval average instead of perf count
		98aee29ddcb4d8f71d8fec2b9c982e2cede743d1 VTOL: Manual Pos Flight Task: do not use yawrate sp from weather vane if position isn't locked
		37db7d3bba965c379ac5e997661fa4930783daf3 ekf2: define max number of range finders seperate from max number of mutli uORB topics
		d4683886434ef7e5c654c0bc710414f75989c5ea Coverage: Run lcov separate to fix paths Without this the paths of the different compile units do not match up.
		b2f4dae2c41a2900b45d0f8e2136ac4cea92bcbe boards: fmu-v2/v3 limit rate loop by default
		d1260aa28c1f5815739cc5cfe8f8c8ebc070e022 logger: add safety (switch) at minimal rate
		c270e7515671f245cee76589f69bf46dab950fec vehicle_local_position: delete unused and redundant dist_bottom_rate
		66300876542dcc74fa268ff9c3611b3efef844ee TECS: remove height rate complementary filter
		250d5b8acc4de26269f9805794bb36e6d5b6bee9 TECS: remove height rate complementary filter
		0cb1b250e95668fc06fa28c190b3e60a210df6b3 px_generate_uorb_topic_files.py: update import error recommendation message
		b9d85c7176afe9c17b921077363c98a2756426f2 logger: Refactor new boot_bat logic into separate function
		a21a7cd5b9e5c3812152e0898c776938fc34a4c4 Remove output argument from calcEarthRateNed
		5dfc8f13625c02dcb445a4dec5042d4b9607677a mpu9250: main handle init and alloc failures separately
		d5fb7f47c2d78913d6c664634084b9ba3fd59d2d sf0x: split into separate header, implementation, and main
		156cf16265606b2f7fe75c0e4e0f6c3e4a42b052 logger: log all raw sensor data at a minimal rate
		04efd91840f954693b41bfbd7e789617f3b48ed2 leddar_one: split into separate header, implementation, and main
		fc1341208f16ac71655cf0b08237b8ae064c927b INA226: Integrate with PX4 (#12673)
		e189733bb97db12745446bf6afead84e09d8bf3f l3gd20: split into separate header, implementation, and main
		e6b18fe2da90a69d2be1e92ff5260ec0be2bfc09 mission feasibility checker: move checks for VTOL landing into separate function
		e10a4c50026d64c3332f08243e8c623d629b87b9 refactor logger: move subscription initialization into separate class
		991a0d35921f4ed8730ccea29c7f140f08ccb77a fix mag calibration: remove px4_ioctl(fd, MAGIOCCALIBRATE, fd); call
		ffee103ae05647a4e7936ec828905bcf037d1c6b FlightTask: add 1st order lpf on yawrate satepoint for smooth motion
		a255789be439e689990111d2ff7edcb26d0a8984 mixer: px_generate_mixer use static constexpr
		37ec78dc2aa38cf5cf1d3e69900c5b4a8a131903 mixer library split into separate headers and name consistently
		16f663ad52255fe9fb483a7426cfcaffe0a94cb3 microRTPS bridge: fix UART baudrate set
		84fe64b1c20a4ae8067f04b1e21a961263bac4db create new multicopter rate controller module (mc_rate_control) split out of mc_att_control
		1c4a8e7c1112c825abea2338394a1e1725241388 cmake NuttX fix generated launch.json (vscode debug)
		1a79f75f94ebbcb9ab5a17e4ee7560322c063e6d Commander: start pulling arming related parts into separate folder
		bf48004fb9118bd90794bd121a97166839363e90 ekf: move "reset" part of the init function into a separate function add getter for the vehicle at rest flag
		fc59414a2547963224e8dd5393e843dd58929c0d set_attitude_target: set rate thrust according to VTOL mode
		1a4ab069c9f3bb595fad80de8a2c0a40b48a26e3 rate controller: add override specifiers whenever needed
		644c816a2a757a71e52da48a159c793e9d4ab66e generate_listener.py don't use message length
		2837152983726c4d3fd278da110dae1b4e888a12 refactor mixer_module: move some code in update() into separate methods
		bde36f0f4a27b7cbfa9916175a27d84205a3328b ROMFS: rc.vtol_defaults limit inner loop rate (#13196)
		9f639d1f3be72b2e265e6376c33100bfdbee80e9 mc_att_control: move rate control to RateControl class
		f91770f9cdc2439edb9445df78be0cebd017b88d generate_microRTPS_bridge: fix fastrtpsgen version check handler
		bfbc9dda91ae94d5a7815148af23109c0bb5cbe6 VTOL: fix front transition rate publication (enable FW attitude controller to run instantly when transition is started). For that the vehicle_status_poll is moved before vehicle_control_module_poll in FW att C
		86dc4c5a005281528703389cf508fc1eddfcfd34 cmake generate vscode launch.json
		e9ab6a75bada21ff907ce7b76c9fe42a59b87585 MC rate control - Scale the integrator with K during the integration part to avoid having to scale its saturation separately. This is required to avoid premature saturation of the integrator when using the K term. Also remove double saturation of the integrator
		c13835c0f07ba0a74f1a2f00a88773f16ded91be replay module split replay_main.cpp into separate compilation units
		8cc2a7018e17f62fbc682dee6cc41dea4bfcf75b VelocitySmoothing - Re-enable time stretch, integrate dt to get local time. Also split a few functions into smaller ones for readability, fix formatting, use geters to get the current state of the trajectory instead of return arguments.
		3c5b24037a2a4c88d86cc59f1c8c4897a7003f9c AutoLineSmoothVel - Improve virtual pilot logic that provides velocity setpoints to the trajectory generator. Constrain the generated velocities in the NE inertial frame rather than just constraining the norm.
		9bc19fd7328ad1a44d1a87c5e73cdb6392bbbfe4 IMU_GYRO_RATEMAX add common options
		4d9f2bf7764dde0545044b977b971d49b498e2bf add IMU_GYRO_RATEMAX to optionally limit gyro control publication rate
		0817ee40f8f9f2481ce12c6a025a61087ef7fb1e Add generic vtol tailsitter airframe/mixer and incorporate modifications from PR 9849 in 4001_quad_x and 13001_caipirinha_vtol.
		f3eafdc296a8b0413283916ad80450b668b027e4 Fix wrong initialization of PWM_AUX_RATE.
		a5d3e10c67240df50403f01cf21a099499c28e94 MPC_MAN_Y_MAX: changed default from 200 to 150 deg/s - we have set the maximum yaw-rate MC_YAWRATE_MAX to 200 degrees and it makes senses to leave a bit of margin between what the user can demand and what the limits of the vehicle are
		11a28665b778fd229c9ca8cd30b9969ae90834f7 px_generate_uorb_topic_files: cleanup uneeded conditions
		85bcfd7d722df3344e7d1ae6e2e2642170056150 generate_microRTPS_bridge: remove commented code
		3d9f83a4f2751cec6d7c4252f1d694d9cab00535 microRTPS_bridge: structural change to make possible to generate pub/sub code for multi-topics/aliased msgs
		d24c415fd7a8f63351c903bada8e9ad9f372799a PID rate controller - Add controller gain to support Ideal PID form (ISA standard)
		27ef1899c729a7e40e249ef725bb749ee826b077 Fix up MAV_X_RATE as html tag doesn't render (#12449)
		423219c60ed2a9e4f97484634e2e4f4adc218d5b pga460: Change variable initialization to uniform initialization style, format whitespace, and change baud rate unsigned to speed_t type. (#11861)
		4c4bcc5fdbc17ca1a29877839f8c529cb1be20f8 Mavlink: Fill in thrust field correctly for offboard rates setpoints on fixed wing (#12311)
		f1c66749e358e674bd91ba3999196849996c6f29 vl53lxx: migrate variable initialization from constructor list to declaration uniform initialization (#11896)
		eaa3d4a24f7349a729c9d7761210da464144163c tfmini: migrate driver class member variable initialization to declarations (#11893)
		2ca40bfc65a2264040ed6dda701227b4d2bf679f Changed navigator to properly separate xy and z distance to waypoint
		ae6fed4f2915def3df6adadb850c559b050055fd Migrate remaining variable initializations from constructor list to declarations in mavlink_main.cpp/h.
		cecd009ddc01e4c28d5a60d6599ea3faf757e213 mc_att_control: fix vehicle_rates_setpoint_poll() error due to merge timing
		a707403eaf0a189edac485287a3c3a3ec54d7030 mc_att_ctrl: added yawrate control from offboard.
		ac002db25c1a7eb3652ac39fd3b54f8acb67792d MAVLink/Commander: @Pedro-Roque's offboard yawrate handling
		d13dfdcd24585587a4052f644819532b59f5ec04 AutoLineSmoothVel - Remove duplicate of _yaw_sp_prev update. This is done in the Auto FlightTask, _limit_yaw_rate
		3499b6ff89c6fdae3226a67583e3c745ba31acb9 AutoLineSmoothVel - Do not generate heading from trajectory if the velocity vector is smaller than 10cm/s This is done to avoid generating large yaw changes when the velocity vector is small; for example when switching into loiter or reaching the last waypoint.
		03332aaa20eb85b8089f858c1616a16173d5b497 PX4Accelerometer,PX4Gyroscope: set_sample_rate requires a filter update
		95f144dfb77cdcdead833c522d4f6fab2deac7cb msg.idl.template: do not generate typdefs for builtin types (not required)
		6d8d8e3c88089f16cd59c4c70d35a06785a5dbfb MC gyro cutoffs - Reduce IMU_GYRO_CUTOFF to 30Hz and disable MC_DTERM_CUTOFF. A low gyro cutoff is needed for most medium/large size drones as the structural natural and blade-pass frequencies are low. A higher value is still desirable for small platforms surch as racers or well isolated autopilots and should be tuned by the user. Specific values for config files are untouched. The cutoff filter for the D term is disabled here as the required cutoff frequency for the default D term of the rate controller is higher than the gyro cutoff. In that case, enabling the D term cutoff would just add some undesired phase lag to the derivative.
		21194239c7f4fb460f3cb8a03a4ce5b3da08cc6a FlightTaskAuto: revisit yaw rate limit
		581d25f77f005f7250e4c4819550b2fb82f5c70e Auto mode traj - limit yaw setpoint rate of change when generated in the flight task instead of clamping the yaw rate in the controller
		73fb30f2510f53dfc3e628354ff6a2550a0621d1 Migrate an additional set of 16 variable initilializations from the Mavlink class constructor list to their respective declarations.
		42d0522cddf191c66a14f7e9d7661f9c95a64be6 FixedWingAttitudeControl: removed check for negative airspeed and slew rate on airspeed scaling
		d9f8e37288d8e34baac79b32d71862045946534b omnibus: use default clock rate of 20 MHz for SD card (CONFIG_MMCSD_SPICLOCK)
		d2a0c857edfc64d1b97ebd8965b7d1cfb0e182da sf0x.cpp: change baudrate to 115200 for SF11/C
		463d5512d92cf30b2bad05c5576a0c7c1fb2aff2 mc_att_control: only adapt yaw rate limit on control mode change
		7e8cf87d0d08f30fb4bf181731a37b65bcc6d0e5 mc_att_control: move attitude control calculations into separate class
		32ca6f7030a60f8144aab07afe99928947f455e2 ekf: scale wind process noise with low pass filtered height rate
		471e1bc86638bcc1d681c6e7860bbec426c2ff2e serial/generate_config.py specify full loader (#11667)
		1f65887982f6f136b088bdd6664f318585a3bc51 Migrate a few more var initializations from the Mavlink class constructor list to the respective declarations.
		09da8e7dfcadeea574c855d583a9d20a64a68463 ekf2: Split static pressure correction into separate RH ad LH ellipsoids
		e0c48d1d76bc2c436fd58cf3640dac481474c76f PositionControl - use dynamic constraints to saturate velocity controller for now as it is needed for the current smooth takeoff logic. Will be reverted after smooth takeoff refactor
		3543071eb9a386534ea65d4fbdcc70797cc6e749 Position Controller - Saturate the controllers using static parameters. Handle saturations in the flight tasks only
		986ff96c3e2017ac0dd960412b516e0f1865d0ea Jenkins mac compile run tests separately
		8dc050998943a8c8d7fcd91b985842dbade2378d mpu9250: split icm20948 support out into new separate driver
		53a127beb922325a5e39d37c3fba006ac7b40e86 Oversampling rate for MPL3115A2 pressure sensor (#11332)
		8da1ff4cfff699b9db5e1989c1362ac7324ccc03 generate_microRTPS_bridge: add the capability to receive absolute and relative paths
		504372f551d37d64141397c9add67c9d35b2338e MAVLink: RC_CHANNELS_OVERRIDE generate correct RC channel count (#11219)
		f21bc89a904c6812a8747fd4c4d8e869218ec424 Unit tests: Retain atomic operation This ensures we get absolutely accurate timing.
		52c848a556fa7b82273dac7ff915893f43dd01f8 mpu6000 split into separate main, header, implementation
		c5fece6568cce7a2e36fc499ba94cf25c042279c Redefined reading strategy from serial to get the latest available data. First "stable" version of the driver.
		dd300dca0adbdbe01f6d5aadd099fc4f3ebfef20 Solved frequency rate issue. Now driver publish at ~10Hz.
		591e8fde5d01204588180da7a88a808ce5834901 Initial commit. Integrated new distance sensor hardware.
		766f911005dc4949925a46507236c62582d54d59 beta75 - Reduce MC_YAWRATE_P to avoid oscillations when battery is fully charged
		d295320e8285b659799d2122ffd8363faf1bad07 sitl_run.sh: lower rate for jMAVSim to 250 Hz
		e485885344dfc59bcf81ffec0192ed81fc82ed84 platforms: remove unused Rate class
		dc49e259b3c92fd64a0066e0ed87314d7b79b4ea logger: add separate profile for vision/avoidance
		43034922e24691e74515b2bcd8a82d59bcf72972 Mavlink: Incorporate changes in UTM_GLOBAL_POSITION message
		33a9eb946a8a727c54aaace7c30d48bf011b690b Mavlink: Reduce rate of UTM_GLOBAL_POSITION stream
		90bfdb6f0a2832268baa4d91f88a9e3130a335ff VTOL rate control architecture improvements (#10819)
		bba475aca19ecbcf83db1ea9c4fd3f5c919012c8 logger limit trajectory_setpoint rate
		c3a4fff0cd6081417be6076929909b69676896e3 Auto traj - generate heading from trajectory velocity vector if possible
		aa586ca327685b23e89a460b594ad5242c1774bc Trajectory - Overload integrate function to allow for custom integration period
		84665672ad11bc9ea7818c1cfc620c59686745de Vel smooth - Change jerk scheduling strategy
		22780efcd052377df71e3cccb88a5cba1ff89acf Trajectory - Add time synchronization between trajectories. Split update(...) function into updateDurations(...) and integrate(...) to be able to insert time synchronization in between.
		d2ed091a1d62eac14d4820151f74264ced740d74 delete IOCTL SENSOR_POLLRATE_MAX
		556a9422b5b5cfc0c5de24ddbba98890ab4b6063 delete IOCTL SENSOR_POLLRATE_MANUAL
		8dfd55fc9e147293586ad0b4dd340568d18c71f8 delete unused IOCTL SENSORIOCGPOLLRATE
		0ea18b2b73a397704123cf32bab1047d9e21a889 delete unused IOCTL MAGIOCGSAMPLERATE
		60a40ec131790164471e2d2527effff04b7fd312 delete unused IOCTL MAGIOCSSAMPLERATE
		aaf1667b091289e606a2e88df3a33f8292e1ffd0 delete unused GYRO_SAMPLERATE_DEFAULT
		3daf37433e2154c1308ac1bdaaba4676d2bd9684 delete unused IOCTL GYROIOCSSAMPLERATE
		60c14fe8f16f0767441fc30cf473396c2c4f27ce delete unused IOCTL GYROIOCGSAMPLERATE
		e759e0e1a513936799eadb532f993a38b694fc5c delete unused IOCTLs ACCELIOCSSAMPLERATE and ACCEL_SAMPLERATE_DEFAULT
		8ad59160c9333f869fc1c7be9df9f02017d9781f delete unused IOCTL ACCELIOCGSAMPLERATE
		f59f0d4b2d5734a388fafc292870bcc8a989810b delete unused IOCTL SENSOR_POLLRATE_EXTERNAL
		d552c2a362142178df8b44bc24dc9f3fa1170ffd refactor mc_att_control: move publications into separate methods
		3a462c2ba72c97bc22e420db9e070d0091168953 refactor logger: move debug buffer printf into separate method (DBGPRINT)
		0745ba9052b02035ace49988945c3760ea720377 refactor logger: move some code inside run() into separate methods
		5eafa1b34b802dbf8a6f256721139f5af6584460 refactor logger: move some independent methods into separate util file
		d832b4fe28375364a413f983b24a7a6740889530 rc.mavlink AV-X reduce companion baudrate
		50e46f89b671e9843c94ab821b0e4f664bb38187 move get_absolute_path() back to generate_microRTPS_bridge.py
		3fdf60a1af9e09bccf320cbfc27c7d041618910e for now, do not generate srcs/headers/idl for composed msgs: needs update on the PX4 IDL template
		703a5376bb6dace2e2a573be8bb7787a14011072 bebop board config: add a separate SOC_ARCH_ID
		fc980493d7d487111c14d45e61b7d368613ab9a8 px_generate_uorb_topic_helper: add a check for the existence of the RTPS ID for each uORB topic
		078f5ea198636d305188954e78d1a6410b879a76 serial generate config add 10 generic serial ports
		64912ed7f683b02eb6204c5190c330f76c43e5e2 rc.serial.jinja: remove 'param touch' for baudrates
		ced37fdf3031cc45dfd3504de49df0802dca73e5 mavlink_main: use px4_get_parameter_value for baudrate, datarate and mode
		a3d9b84b1e67b281684fb099ab1fd48c56d15f68 micrortps_client: use px4_get_parameter_value for baudrate
		5bb75a7ff81ba0ca1f0cd196f40abd26814f37ea Tools/serial: add script to generate ROMFS serial startup logic & serial parameters
		28521ea77c1655667235327474005d7409ee9029 move parse_yaml_msg_id_file() definition to generate_microRTPS_bridge.py
		a50fed1bf9ab79f6f642d029b467e2eb50d3b0e3 generate_microRTPS_bridge: state that RTPS msg IDs definition file path is relative to the msg_dir
		7031bb5a6d9f869238bb8ffef6e7d8957d16d903 navigator: add yaw_acceptance getter to incorporate feedback from position controller. The yaw acceptance is defined by the mission item. If the pos control sets it to NAN, then the yaw at a waypoint is ignored.
		93daec43d3a0b81fb4cd60ff0687fa08eca26ecc generate_microRTPS_bridge: add option to set preprocessor include paths of fastrtpsgen
		d708c965eceae8db631ca9af9738091ed69c0f41 px_generate_uorb_topic_helper.py: beautify
		4137517d123f773682c44806970698e63f921831 px_generate_uorb_topic_files.py: beautify
		57f5bb629052d1a3295b4b342f0b39e61ee14c4f generate_microRTPS_bridge.py: beautify
		1ee6c03627a2c2efed902dd562ea4beeb6543425 add --generate-yaml option
		96f3feb08853aef5eecf59cbbd653e926b1bfb0a weathervane: get rid of passive strategy
		6038c22174cecf6b84af2bd03be5cf58f86eb7f6 added a weathervane library - computes a yaw-rate setpoint that tries to rotate the nose of the vehicle into the relative wind.
		0d0fcb140ce59ddc6ab50fef177534e544ce31a4 Updated rc.vtol_defaults to correct PWM_AUX behavior for VTOL airframes. Added PWM_AUX_RATE to rc.vtol_default and set parameters directly instead of environment variables.
		e17f0802cce17d3e241d4c239c41a44e806ce9e8 tecs msg: changed flight_path_angle to height rate as clearly we are looking at height rates
		334aa57a5f21bc9b394e58c73054d0a04dc99e21 Fixed-wing autoland: Remove the dynamic altitude acceptance calculation and just use a simple separate landing altitude acceptance radius instead. This gives users that do not use LOITER-TO-ALT waypoints more control over their landing procedure
		454d175617d383e75a20090369042aca7c7196a9 rc.mavlink:Seperate sys compaion init dependant on MAVLINK_COMPANION_DEVICE
		ad4bd6b0d6b7737233cc9fd0e2eee696744b26c5 Jenkins add separate Ubuntu 18.04 posix_sitl_default build
		f100cd73ef03e462fb2a03fd8c0ab6163c3cb99e msg: Create message for GPS drift rates
		d50042f58d2c940ccc45d029ffcec977b73caa95 xnphlite:Intergrate tune control library
		c53c035ec6701e5303b547cc8be3256ac761ba60 px_generate_uorb_topic_files: add check and throw error if no timestamp field exists
		cac84e14247f06b258099364aa4b5103d0295c22 px_generate_uorb_topic_helper: do not account with the timestamp, so the struct size matches
		a5de82aaa87bee699bb027b30f3bab51c4989a18 cmake: add documentation for px4_posix_generate_alias and px4_posix_generate_symlinks
		8090708f76906246caee481f66153995148453b8 FlightTasks: generate tasks depending on target
		81f0b64ad32ffaf446ad9e3f937986711f353ac2 gps: add SER_GPS1_BAUD param to configure the baudrate
		5500dfc55035cd3992c8693c3b3814e9c571b599 px4iofirmware: moved the simple register updates down to the fall-through block, moved the sbus rate update up so it doesn't get called on each of the other updates which would set the wrong value
		76848456bbc0852917345e452ae43a64647fe306 Jenkins split SITL tests into separate pipeline (#10144)
		2bf90574ed42459626725632c12bba0655bea7d9 estimator_status separate LPE only flags and comment
		a24b614dec0f59d5c11f39f93532c4f7640375de FlightTaskAutoLine: generate heading along track if yaw setpoint is not valid
		2302c6400458c0de22b1029e457fb5d90d64e010 listener: add optional rate and cleanup existing arguments
		d85481be6d631aeee5011ba27d82b4dc9c368d97 Restructure FlightTaskAutoLine: -add FlightTaskAutoMapper that handles the different types of waypoint and generates setpoints for all types except of position and loiter - FlightTaskAutoLine generates the setpoint types position and loiter if the flight between waypoint is a straight line
		8b1381ead9803f8fdcbae6fc2f79087a0cbbef3b update ecl l1 and usage for new roll angle setpoint slew rate limit (#10005)
		ca42483794287b0d2d3d549df0257e0fc6319f68 update msgs fields from camelCase to snake_case so rosidl_generate_interfaces() is able to generate code for ROS IDL files
		ac8f44268ba724a2c0d38bbb8ba3492f66fbb24e Added remaining two channels of PWM_AUX_DIS disarm parameter set commands, remove trailing whitespace from pwm_params_aux.c and pwm_params_main.c, gps/params.c and added block comment headers to separate sections instead of whitespace.
		4a8a3a4079cc3e032219947ca32cff5dfd6be21c l1 controller: simpler way of doing slew rate limiting
		fe4e6779f3b248af9c992f6a514022efb0bfe25e l1 position control: added roll angle setpoint slew rate limiting
		ec16a4d0637d0fa551e585d14857b1f6a756ab71 Migrate LOGGER_BUF argument to rc.logging, group OUTPUT_MODE instances closer together by relocating UAVCAN logic block in rcS, and alphabetize hardware specific logic in rc.sensors.
		bf4ac7a9d639f26fc7557345a219ffd1bec04764 mc_pos_control: for terrain following use range sensor climbrate for velocity estimate
		a5e8eb23ad41a2a3df118af2faf7c8a458b29ef3 PositionControl: saturate thrust integral
		72a213aff71af09b21db0b14295107a99843837d FlightTaskManualAltitude: valid altitude/climb-rate is required
		3c40aa0d9c7023740b08a89cd7e8fd4993915c13 PositionControl: if valid velocity and position setpoint available, always prioritize velocity setpoint generated from position error over velocity feedforward
		89a902524a0314ac9c12c3597d800c69a22d2d91 px_uploader:Revert the rebooting text to have baudrate
		4f937a2ff6fd54b3bd2b4953fefdd2922162d0a6 Migrate px4io logic into rc.io.
		e1f2360560738ce35276639c0f22dd21b25dfefa gps: remove unused field _baudrate_changed & _mode_changed
		4d71686ac6daffff87b2e7681d75cf897e4e881c gps: add GPS_YAW_OFFSET param & properly initialize _baudrate
		5dd981a7be453ae6016d0371ba8a52fcb186f44f GPS driver: Initialize baud rate and improve output
		c199ca51938d33e9f0bd37185986b178da291ef9 msg generated print support boolean
		e12acc4b282d26ae1b8c1e1cb4220b53ef54b097 Migrate hardware specific mavlink stream cases to rc.mavlink.
		cd07e756b9963252eb6e99fd93b78f14565367b8 bmi055 name separate accel and gyro perf counters properly
		9fa882119d8309b79a39f9d7114956188266e197 fw_pos_ctrl_l1 remove unnecessary orb rate limits
		6579b7254a78618641acc296a7f9780374fc46de Change TECS max sink rate minimum value, because very fragile aircraft might not be able to sustain higher max sink rates
		77d4554e6d38358d489cde76b725a41493001aea Modified comment about feed forward of yaw setpoint rate.
		a6883c3a0d21b6549179f2d69b82c9356634cac6 uORB generated header use full name in C define
		d177e96508d2572f6fa8eb7ff41852749c882548 EKF: Fix bug causing slow drift when high rate flow data is used
		7f1686171b3a2dafa7d88a0ec864b5755913ea3b sensors : add parameter for maximum flow rate
		e4d863b95f940e2e454491bb86e42c0814bf83e0 Subsystem_info status flags & checks: Separate the functionality to a) set the health flags inside commander and b) to publish them from external modules
		533f42adb8bc3f40d6751f2c916cf64c6b6248c9 crazyflie: add probe() to vl53lxx driver and set imu sampling rate to 200 Hz for this board
		4098d50ff9e48935bcf38adcb5658e514acc4e15 pmw3901 driver: remove integrator and publish data at sampling rate (about 10ms)
		e33da0a821b54be098eae0f794adde328060733f fw_att_control set default yaw rate max and update parameter descriptions
		6cadc922855c67120044a8b30ab78d5377cc1bd9 EKF: Don't reject saturated flow data when it is the only aiding source
		868bc010878adaf5a124fc0c9d6cef4045fa06ac EKF: Relax minimum required range finder measurement rate
		2e92484325ee99ea7538a39e2f3fa623e8d974ab ecl update to latest master with separate libraries (#9406)
		c5b2f59f5767ffc5f5401677ab917b0f114a072c PX4 style fixes (excluding EKF generated code)
		b98cd6ecb55654498d65c26d8ead128881fb9f32 ecl-ekf tools: separate the analysis from the visualization and preprocessing
		f2cee9970c658fea586aab98494f93cafcceeb40 MC acro: add separate params to configure yaw expo
		c0efe2db56cc59c3615d9e70279cc7cbc568364f tap_esc: replaced PWM_DEFAULT_UPDATE_RATE
		41de588a73465f2a3f619df1ca9cc8496f6a5143 Move HIGH_LATENCY2 stream to separate file and update some comments"
		fb1bb7a769f0dbc4d3710fdf4d9b2280f986bbaa Move the SimpleAnalyzer to a separate file
		2a5c7efd8df5a93234d738ffb410dbbd9558b2f6 Mavlink: Use filtered update rate for HIGH_LATENCY2 stream instead of main loop delay
		1124a397f2b2543e826294361c91fbaf6cfc8534 Commander: Move telemetry logic to separate functions
		32815dc1d3898182bcf4b0cd1b472507ce7a30cc Only generate the HIGH_LATENCY2 message if transmitting is allowed
		e01763a7c7d0b47c11f7b9124efdf15c1456bbc9 Set the HIGH_LATENCY2 stream to a constant rate
		75ed9b002bdf67420b9f8f664dc8d8a698a8010c Add the SimpleAnalyzer to generate messages for MAVLink streams
		00f6ef1d2f35043d84ba3d070efe7b463c0a4821 Style fix and iridium signal check rate fix
		ab8527cc8faf125e1e6878ae915be4cc8eb8373c FlightTaskManualStabilized: limit manual yaw rate in flighttask
		d64b59b95ff7933ecab3e776026c4713016fbb39 FlightTaskUtility: remove duplicate slewrate
		c4fbde395becd2ae7afee492edf218b51e918e5d ManualSmoothing: new class for smoothing setpoints generated from sticks
		e763642a8bb996cfddd9dc429cade6c7003d48df FlightTaskManualStabilized: this task will geerate thrust and yaw setpoints. Thrust is not yet supported
		b4d56ed51a629e224c73cbedd8ccfb1b18e16d67 mc_pos_control: publish yaw_move_rate
		03c81a8948734c7f48c63a343fd90e7b3314b093 ControlMath: never saturate in xy when vector is below minimum
		85c1627c7461e2a44d1e719f94f942dc356f3c5a TranslationControl: new class that generates thrust vector from state and setpoints
		de872ca04723666b23f677be1a14c03b60230537 FlightTaskManual: remove the smoothing from the task to add it later in a child class also separated the velocity scaling to enable sport mode
		888a63c00151385c316584975636951862d1461b FlightTasks: bool return values for clarity & introduce updateInitialize() to have input data fetching separated from the update()
		634a67d058024caf9a19728997146fb4540f5c63 FlightTaskManual: Smooth flight integration: slewrate now works, set to 0.2m/s^2 in all dimensions for testing
		1f6571729207097e546f82c77104428bb5e41544 FlightTaskManual: Smooth flight integration: Make vel_sp_slewrate without any refactoring compile     analyzing detailed semantic and external uses of the variables still necessary
		1b858f5e5656fe1f34678a9c23b50f74d86c98b1 FlightTaskManual: Smooth flight integration: Copy over vel_sp_slewrate without any changes
		c4c4441c8785ee3243ec3673e2d86f9916a059a1 generate_listener.py combine message exclusion
		e76a7e48c801f26acd2a0cdfc6440aa2155be94f generate uorb topic helper ignore _padding properly
		a98c7cf5c88a3f59f6cbfa3a90f1a1559d8b6b7d generate uorb topic helper rename px4_printf to print_field
		3db17a04fc9dd7e035cda5a1a952bd04ee3d2954 uORB generate message print functions
		096e2ec6293eab5b93187454b63c4ad585376629 Multicopter mixer - Always unsaturate high-saturated motors when possible
		5da2842dbce2a1b21edfcd75f02430b0cc5d5f96 Multicopter mixer - Always unsaturate low-saturated motors when possible
		6d445cf5a6a1353754839cd75243cd0ef84afce7 Adds ability for generate_listener.py to process out-of-tree uORB message definitions as well (#9097)
		64b97cb18e0dd420eaca0a6a9b6f52657696f33f fw_att_control: in acro use thrust from rate setpoint topic
		74730273c17ad84a56459b6e11d0795e5a268dde fw_att_control move angular rate limits to body angular rates (#9023)
		041886a28957c17505b19367eb8703444123a4c3 attitude_fw: move angular rate limits to body angular rates (#404)
		426f2cce2e54bc40c4ca74cf0385ee199493cd5e fw_att_control split header into separate file
		5b7c062f67c2d971f58b0f22f41587fdcccd01c9 mc_att_control_main: remove unused _rates_sp_prev
		f346b00ee0b975fcea9d1d826f523192f498c0e8 mc_att_control rate controller: use a butterworth lowpass filter on the D-term
		12c343317cde38c9866c3bfd346fe842d739b341 Add aerofc baudrate to list
		83133b1bcae2eae59383dad7d1b6070657e9d279 This commit fixes the way baud rate is generated from the program argument in the FTPS client and agent.
		f866698fb26defbe0262106f2a7260f89b7276f0 ekf2: Update parameter description for max optical flow rate
		d53c5319791945130f8cfedee9337f29853c5445 mpu9250 wrapper: set autopublish rate
		915f728145eae90a8184149978fc0d5ad1f655ed libtunes: Separate the default tunes from tunes.cpp
		2bea09a997d953c7ee61ae39dd8363c4bca0d992 rate controller status include rates
		98441ac1004c937eb9c065f710b004ba9e8378e5 Log rate controller integrators (FW + MC)
		5a189f3c4a8b2f599c10d9277f5d11e77c01b367 vmount mavlink input: rate-limit vehicle_command topic
		48edaa7ef63c360d3d94f7e655756f9da999ade2 vmount: remove output rate-limiting
		b7d7d1209b331a571b205d5a0006e543c1891357 px_generate_mixers.py: scale mixer so that sum(z_thrust_scale)==n_rotors
		dac2a93ea2edfb4998121b9610f27523794e265a logger: add sensor_combined at full rate to high rate profile
		a02cd869c342fb33b0c2163b9deb302108f483f0 mavlink receiver remove unnecessary rates setpoint class member
		1f63d85869b3495f3f66a3300b365c57469f1020 NuttX generate Make.defs per config from PX4 cmake (#8573)
		f86d4b18f815522e74a34ee32617c40db935b05b Jenkins generate uorb graphs (#8571)
		4d08f56faeb024bc806f9932f25ac5fa6a7d1344 cmake add missing generate_px4muorb_stubs dependency (#8559)
		90b4afebb55627a28d62e412d252a518a7733909 Commander: properly separate preflight check and prearm checks
		51952108931470d994c934b96e03e4e128f139e5 CMakeLists.txt: add custom target uorb_graph to generate the graph JSON files
		e2d6c0a8f9bbdd566beb9262bab08b45af2800b3 uorb_graph: add script to generate uORB pub/sub graphs
		024589d63de054e699ae8f5b079973ca1f6e7a74 msg: Add separate vertical and horizontal validity flags to home_position
		b21af471ac9b1505871e76ece6368e17351ce892 QuadChute monitor tecs height rate (#8395)
		1a4f4b083c37f8da1d681cdd6c0db51f78d44a2e cmake nuttx keep builtins generated by nuttx apps (#8323)
		b0ad8269a5f49d8fb1624e15845a052a60cae69d EKF:  enable separate monitoring of aux velocity innovations
		26171df9fc08838aba37f7d466eed6249f12e394 mc_pos_control: save previous velocity setpoint after constraining, fix smooth takeoff to be still excluded from slewrate
		26d95ef67479b90212f5ea8255d43721865ff904 Mixers: Include mixer_multirotor_normalized.generated.h everywhere
		2c4228ce985d0f3e46a7721c5e5b94689f427842 Mixers: generate all versions (new,normalized,6dof,legacy)
		99f6c4dbc3c5fd9f9e84dc1f37add76da3f81afa Mixers: Generate from geometry description files
		4e7bd576cb160903f9370fef0987232b2663bbd2 generate_listener.py: generate one function per topic to fit function sizelimit
		e12bfa30d42d9add1b095cc1d19bb87e727ad339 mc_att_control: defualt parameters set maximal acro rates to 2/1.5 turns per second for roll,pitch/yaw
		3ce5525b7ce56aeb8fc9a66967fd674858abaae0 mc_att_control: use expo input for acro mode to allow for high input rates without loosing input sensitivity
		be6079bc52fac0b3423094f7f377325662f55201 logger: add high rate & debug profiles
		474f216a0a315981ed43483833898806924a2eae UAVCAN bootloaders split into separate repository (#7878)
		5922e08f5e052d455b5aadc0a6bd601843ccd12b nxphlite-v1:incorperate master's led changes and fit
		e281958b4342c62021833f62a64bef80859f7c50 nxphlite-v3:incorperate master's led changes
		53e9ce83528ca1edb55748bba2f1b19ed667bf3c incorperate master's oneshot api - not functional
		b59aefc989d34cad32317b0235192310ce4d47e7 Airspeed measurement: Add accurate models for dynamic pressure
		c1199d1202fb1a1b8fb1e14df73098faf88732d1 mission don't apply slewrate for altitude
		7a822c9db27792bfd3fd478789ae71504f8c3cf3 mc_pos_control: don't use slewrate in mission
		e58766c3942ae773d1d2f6d78855eae43be30fd0 MC pos controller: log exceptions but rate-limit them
		61351792021576a4f2b64ee719857322073de22c generate_listener: Add support for uint16, int32 and int16 arrays
		49c0947cc2ec35787ab3023066e474df9a1510d6 generate_listener: Add space in array output
		e39b38ba96971245aaf6d2b1c249868c8717665e landdetector groundcontact: adjust climbrate if landing speed is low
		7a3a9a75d50d11f527cddc69a4fe160810d1ce78 Add command line options to PX4Flow app for I2C address and sampling rate
		560e9e88dc0977bbecd53386fa5572347d5fd43e Apply slew rate to reverse thrust
		305a95aef9dea790ebb7009fe04c98532768a82e Integrate Python-based tests and benchmark into Travis
		73d23742ea5c297f262c0e03caec61ee482977b1 vmount: rate-limit the update of the outputs
		c05ea542d9f94fab15b56fae2ee7734ab797d6c9 Added requested information about generate_microRTPS_bridge.py
		be090c0109a08500e15091bff02d0568629a024f Fix GENERATE_RTPS_BRIDGE logic
		09f1373a08543024672b43b9d47f70614f061113 MAVLink: Adjust stream rates to match real usage
		c1f5feac831776b5721c0f400782faf7b784c848 MAVLink: Queue transponder reports and send them at full data rate
		2e85a4363e618e20e8e1712f8ee35b5291e6da3a MPU9250: Separate mpu and mag resets
		cef3a29ac9b3995c8a6b7d214a07b8d53530b68e refactor replay: split timestamp offset into separate method
		674ae5292ee420a45c769cc9ac0cb0fe0da78334 markdown module doc script: write how to generate the modules documentation
		7a4f557a7afbcab5433f7ba1f22165e7de1668e8 px_process_module_doc: separate page into one page per category
		7b108eb879417e1836c409f507fe9177bebd990b Reading the pwm signal from shared image. Both 8 channels PPM encoder and 8 channels revicer are required. Before launch px4, ppmdeocde programe should be launched. To download ppmdecode programe, visit https://github.com/crossa/raspberry-pi-px4firmware. Pxfmini and navio are not popular autopilot hardware in china, I can handly to purchase it. So that I use raspberry pi to build autopilot separately. This dirver help us to decode ppm single to pwm and pushlish it
		3c42c8f7fab5c9d7fbeaec52071f8130da081f90 mpu9520:Use maximum clock rate
		81c46b6f92842a5528d079a2e10ad89b4d56ea95 VTOL Standard - Disable pusher-for-pitch strategy in manual control
		b511ccd9fe9a3aabac6f896252bc35edf2a57810 mc_pos_control: integrate complete order and limits of velocity setpoint calculation - one warn_rate_limited was missing - vel_sp_slewrate was in the wrong order for smooth slowdown/speedup on takeoff and landing - slow_land_gradual_velocity_limit was replaced by calls to math::gradual - smooth takeoff speed got controllable by user input - comments were corrected - an additional check for the sanity of velocity setpoints was added
		2758a4a6fabccd8ec31981a563caab7682445d8f mc_pos_control: add warn_rate limit function
		eb067291bf06d9ac736e6e14b54e929d7ce5c224 airspeed sensors apply offset separately
		6f3b6bf55be22abaa146c383b801d9723111fc73 Update parser to get class information and create separate groups for each class
		cd8c8ea5de150d12f4d95c5e828398d6342a8863 FW default PWM_RATE 50
		d6e9287f516aee8fa69ca571a400090de15e58ba mc_att_control comment out unused rates_i_scaled
		69ba69f30ca887198c6efd72cf0743996c4f21c2 controllib split blocks into separate files
		c84611f0f5a76f459f46999a93a1c405e35c8b3e MAVLink: Fix rate handling for camera trigger messages
		a89980f440a16352adf0b0d90f005b401e8112b0 MavlinkParametersManager: update sending rate
		0d22e97c09e493559b8c9645bea21e4cd7c53077 sensor_params: document PWM_RATE=0 for Oneshot125
		0a1fbef8c8980856967ac42a065df3e40abcf966 pwm:ensure that a rate of 0 will invoke the ioctl
		da31e6e0b5a913e88d8487b915f2648a32bb0242 bmm150 max datarate changed
		e9aef2eb958e6f11cbbf5ca1cf1e0b341ecf28d3 px_uploader.py: properly loop through all baudrates
		2467297acfe5a03697add654db6ecd8705a3bfd4 px_uploader.py: fix exception on baudrate change
		709bd8cb28a214f40da7b0059909e01815a54b20 mc_pos_control: combine separate pitch and roll maximum tilt angles into one because there is no sense to have different angle scalings into different directions it would lead to unintuitive piloting experience acceleration is directly coupled to the tilt angle regardless of possible assymetric multicopter vehicles
		6a99281501d80155bfd7e4bb572612fab9c5c9c8 Incorporate @bkueng's feedback, inhibit bogus output on first pass
		3dee42b5ca737601671af0ca57c243d44ed69ebf stm32 : deconflict pwm_get_rate_group from all other timer modes
		8c9affddc8159a82f13f99608855b7c82bd9b3a3 travis-ci generate and upload parameters.md
		ade6336fd0ee86a0357bc10057266245ffe575b1 ist8310: lower sample rate
		e535156599dfe4781762a4c8d61c09a68297154c ROMFS: set baudrate to 460800 for aerofc
		a5cdff06d5630a769e9f6b1306ca16fc10f0857c param: implement rate-limited autosave
		a6eb0053c5ca4af338487a54afe096e822d22db5 TECS default FW_T_HRATE_FF 0.8
		e75f5a4642a7c9784ba9a75849740fd2a4ce1e6d perf_counter: add perf_print_counter_buffer & perf_iterate_all
		9f3043f9cad0346aa82b17cec2736ab270910a59 printload: store total_runtime in a separate loop
		d21c44704d691bb47efe38b752f34941f3cd3001 Propgate any errors in setting the rate up.
		dd25366b86750540472e987076cc4ddcc0a1652e clean up timer_set_rate and add advice on hacking counter frequency
		2d5588ae02560aae029844410212aab38785d671 simplify oneshot mode selection; use zero PWM rate as indicator
		fd3889b5a6a268de2fd5876bb26765419a7a4eb9 mc pos control: auto handling such that it does not use slewrate when goint to pos
		5e2f18ebaa26996827f9fd9ce4059c66c862e94e mc_pos_control: added separate velocity control setpoint slewrate for deceleration to improve the smooth user experience while accelerating but not have any delay when braking
		e4c012289ff2edd1189c25f3cf38a145ff2b63e3 Logger: Sync setpoints and states to same rates
		f7e4d8453db823a69f81e75e518042dd3b4012ff Logger: Drop position_setpoint_triplet to 5 Hz since its not required at such a high rate in analysis
		30841ee6bf1b750a9de42f01624d81cea5d83a20 send_event: separate initialization and wait until started for 'send_event start_listening'
		4811ab6b137784a84c67c64bffa4917a7b7f0702 logger: reduce rate of some topics
		4eea89bb42377cc4c9b7738119ace8fa4e92565b refactor replay: move topic publication into separate method
		b2d47adf56cc2157659945afd241aeffdec320b3 jmavsim_run.sh: add -r option to set the update rate
		3961c46d6834f2ccac29c52d5bff78de3fced8aa UAVCAN: Incorporate manual loackdown
		3e88b2f2b102b9ae22539422e03396e8ab112b04 Rate-limit navigator update rate
		47411b052cd4303a1d65b4d1f106eb76d4d6ab41 aerofc: test 115200 and 460800 baud rates
		f9795ccbabd02527a35e91385b16cceae1200c90 px_uploader: support multiple baud rates
		6121119631d775d134100225a92c32da0ed05ee4 ROMFS: allow to use 460800 baudrate for onboard mode
		f300877db40bc0ee2848ed203a6e505f2c58ebee yaw controller: computed desired yaw rate based on coordinated turn constraint
		aaa24b0cc877e60bdb421574f9357f664dc786b7 Reduce attitude rate but add Quaternion
		c4a8aa9c68b0a38e4fa8c4a762687305f287e33b temperature_calibration: refactor to separate code & reduce code duplication
		9e80a6c9d68661df1246daefcef44e895161cef3 sensors: rc filter no unstable cutoff, better initialisation, reset filter on change, constrain output Filter gets unstable if cutoff is above sample rate/2. Filter initial frequencies do not matter a lot because they get replaced by parameters anyways. Filter delay values get reset to 0 when the filter is reconfigured otherwise there can be some weird spikes in the output. Filter output gets constrained to the range again because of possible overshoot.
		d991285406fad2d4b39ecdbd2337b0fb773ed16a sensors: rc filter: added sample rate of 33.3Hz and lowpass cutoff 5Hz hardcoded for testing
		27a4ce26918a12ab8fce570303728051592c2010 sensors: rc added lowpass filters to the 4 main channels without useful samplerate and cutoff frequency yet
		f718b3a97ac95ebd8d94d06a85cc3d8180c95476 mc_pos_control: limit slewrate different in up and down direction
		9e9e0e23ad68f451cea0a5b412156afc807e8bd7 Land detector: Detect ground contact separately
		7e6daaf3d120047c6b55d0cc2950f79b23c6f8e1 tempcal: remove separate temperature calibration module
		7e21aaf0c97fb9e1bf39c4825aa71fb9a40b84a8 Tools: Add script file to generate sensor thermal compensation parameters
		117826a31f0682d152fdd2d3c35fd065f6e722ff sensors temp compensation: refactor into a separate class
		967197adeea1a9f051c06a851ed64130a079cbb9 update sitl_gazebo to used flow with limited ouput rate
		8cd913c148f8a0753bfdcef30f18acb11389b9e8 gps.cpp: add gps baudrate 230400 to qurt
		e90bf8f8e554c63213a5c6834f48973241fa4bbb px_generate_params: Sort parameters by name after parsing the xml file.
		6fe9b8e54351c8fe620f959b62ce1902b514f3ab use CmakeLists scope to generate te XML file
		e0fc0a847c87ade89eda1f33e20d7c690dbac0af Mission: - weathervane on takeoff - separate cruising speeds for VTOL in MC and FW - cruising speed resets - mission work item logic is more clear - fixed double execution of certain work item states - enable cruise speed change on the fly by command - moved VTOL transition target position generation to mission code and set always
		3a17c07b1e7b582e05f68059311135e730dfde51 Implement RC and DL failsafe action handling for multirotors Move RC and DL failsafe actions handling from navigator to commander (credits to @AndreasAntener) Separate manual kill switch handling via manual_lockdown to prevent override and release of software lockdown by RC switch
		64449883928182ca5abb516b91cf9818bd74bb18 MAVLink app: Send messages on average at a more correct rate and send on first call
		42101671f4a7509c238ed584ea22d1ad8004def1 Drop rate gains for H480
		8aede5d32bba9ac4c80513e28ef44b600b7fa41c mavlink: add 500000 baudrate
		10c6ae77aeeffd5f1ef45e96c86d8ed6dc9f1e4a Attitude fw yaw: Initialize yaw rate properly
		d4da626e78e0b415a0e46cc345017d1ca6eb5873 sensors: move sensors with voting into a separate class
		f9b3b5a799667e0ec4b1bf29692892533514c9cd sensors: break off parameters initialization into separate source file
		14f75bc8a3b9b6af44cf3a6cb9eaadb86eaf0b56 SITL CI: Remove log upload from test script and move into separate one
		8e8336a83f3ceda0e27c3980c2ec2a0f112a7f7b gps drivers submodule: updated after removing unnecessary baud rate
		0acdf32ed571fd5c4dbfb09dfae8ba7941620a4c gps driver: removed unnecessary baud rate
		d10c4dd824865b1bdc9ad2b822286f5b9a94da61 gps driver: added more baud rates in order to support bebop2
		17f49ec8cb2da6034dcdaf1c1b6adf1baa73f5d7 Integration tests: use separate commands to set mode and arm
		508c782bab689cd5a2f5a992986332ebb0f5560c mavlink: Add support for high speed baudrates
		4edd12c44ae1d67df8b3ae5e7f010caeb9875f9b Make PWM_RATE configurable via QGroundControl
		0734db1740ca5f8f480418892067bfe3da83dfc3 Ignore all CLion related files as they are all generated from cmake
		bf9a1c5a1881f3992269f8e9b271736b68445d0c Removing alternative io timer rate for CF2
		c5f750dcca156ce84d1156ba66f7d25b797c3f45 ekf reset: more granular reset / timeout strategy for gps fusion
		3aa9a72562f8d78b71eb06228a754f0824403960 mavlink_shell.py: default to 57600 baudrate
		318c970477394d61445276b818a3867cf72e4cc6 mavlink ulog streaming: add rate limiting
		7d72f31a295ad0dde3600581110326e87924cab2 mavlink: integrate MavlinkULog into the main Mavlink task & receiver
		b9728ecf3981cc16dde07497cb8f4df503d2a707 Uploader tool: Add option to set different baudrates for bootloader and flight stack
		71e87cf2876553b769aea9779389f3a2e45a7e21 Set maximum publishing rate to match MPU6000
		fde165b4f1679a6f65fffdf7f55028f99fb4edff Fix 2000dps gyro rate setbits
		cf8f48486898835dcbb55dcbe8c54a4427349022 mixer class: updated comments on slew rate limit method
		c2a511d81d2356191ee812e8b4d192d397a3295c multirotor mixer slew rate limiting: naming and fixes
		8b889caa3323b1b4809f1bce052bbfe9e7ce5d1f slew rate limiting: implemented for fmu
		2607769470450074cddd73c8c516874c20bfe1df slew rate limiting: moved logic to multirotor mixer
		66ddea01d144aff29a6f815c9cedeb29947b7289 implemented slew-rate
		e0618422197d4f9a98ebbaf36be2b928cde730bf posix main: only try to generate symlinks if data path argument given
		cf5338df02c52af1bbdf4f4fae9b3326f0ee6d45 accelsim: lower publisher rate to 250Hz
		d1850f5112497dfe05bb1238d884c99c1d3f49fb uorb top: measure the elapsed time to give more accurate results
		e42ff72d6a2a24c3fde35a7096d02fbe4a47f948 Standard VTOL configs: Limit yaw rate
		3b58caa32a15f371dff1c11b2a0dc10b332ea75a Updated motor RAMP timing to match slew rate limiter
		79f2cd79d93e26ec44c89838508328ece94c453b px_generate_uorb_topic_files.py: add multitopics to generate_topics_list_file_from_files method
		e7afecb544b5921e719c9a3acabb13009cd340d2 Tools: add separate jmavsim_run.sh script
		d5c96ec66ac7f27d446496cb3b3b1781fa189218 LPE rate and stddev changes for mocap/vision. (#5467)
		3163cf90c9916855e56a64a1692694443f85f2b9 FW: simplified flap/flaperon logic and always move them at the same rate (don't jump)
		d84a3250101da6df242a5f7a8c929504f5eee7c1 Integrate DF BebopBus into the wrapper
		f07cd13fe82eb756a2a19ff0ac41349cddc6e3bf circleci update to tolerate submodule changes (#5451)
		ce27cc8326c24b4835d1af0e01fc63cbce7641c9 mpu6000: Separate DLPF params for MPU and ICM family of sensors
		00d4eae373ef1eeb184000c1586ee4a40328e267 attitude_estimator_q: don't filter output rates
		422cf7e21ce4be26f02096739389e568389e9e23 assign timestamp in vtol vehicle_rates_setpoint message (#5227)
		3a0f4c84a516a6a5f9c71c532112015c3c9f3faa motor_test: add iterate command
		a1b710025b9c686b4ce4ccb6e96889239fe8f122 Improve new logger update rate (#5073)
		71d150f6ec0789d36d4f7af85a2e44c225846d51 MAVLink app: Fix rate handling
		5de19500c2e0cb0acb20ab36ce26372862f10de9 TAP-v1 set Console Baud Rate to 57600
		c4e77cf41113ae775b87078104b239d88bd28603 logger: fix '-r 0' parameter: should be unlimited rate instead of 1Hz
		bc6e83f5e3a3552afe8704ba43829c6682eb58ae Version reporting: Be more accurate about platforms
		25e749de7764bd466db0108ee849fe524ccbb6ab use MC auto rates always in AUTO removed duplicate weathervaning limit
		998579befc22d15c22c9c5b78ff612dd4de06f56 mc pos control: zero yaw setpoint move rate in attitude setpoint topic
		57fa9d2070b92ebaffee51fcff59707dbe46c681 use separate altitude offset check in FW
		6739ae9dfc96e4e8bc3857d191722bb7b1ce7e8d ekf2: substract gyro bias from control state rates
		2f113a4ce3138d3ec9b595636aa0656b47a31ebf MAVLink: Allow data rate updates
		3ef6ee056f5fbae679417897e9da3d32c17a48b7 Sync rate control gains
		65da9173b92ca251090f92b1bd0c2f86cef3a225 EKF: capture innovation checks and reset events in separate variables
		afa3429bdbcf09c4104461bc789fc4a851d6e453 210qc: Fix sample rate
		aa355d86d08a2198273f09ef21aff442ef68aa9c 200qx: Fix sample rate
		2c6a8c0ce619a7ba57fb55a474e7f6ac35b682ef MS5611: Drop readout rate to 25 Hz to alleviate self-heating.
		6e7c605279f77ebc66b5da17a296f0741cc326a5 Tools/px_generate_uorb_topic*: combine the src & header generators into one script
		093eece29b039697ac5aa20ed1199876a1de902a orb message templates: move common code into px_generate_uorb_topic_helper.py
		7d4c4c0401fd9f4e488f22bbbac797234116c40a px_generate_uorb_topic_sources.py: add search_path to the environment
		12165ba5a48ae8be1cf0c4034f138f5bfcad7a14 uORB separate tests
		468b0b25de5c74c93fefb1f94a060a23c7761ba9 added different parameters for ascent and descent rates
		f1b7e7714e39626d2ddc1aed5d25d925558ef71f EKF: Make average update rate of EKF closer to target
		aafcae7e6f1bf3161b630430edf073d63725783a MPU9250: integrate using the FIFO sample interval
		4269db73a059998387c48650e80d683859d461ca refactor semaphore: move into separate file
		1a57488ac68e147389050752e8b6b9bbf6620a56 orb: add a separate uORB::Manager::initialize() method
		1b133931a621237042e670473a035f6811cfcbf4 Battery charge estimation: Refactor the filtering strategy and move it to the backend, doing integration before and filtering the resulting charge estimate
		1827f78ab727aff59b56cb79179ee9c4adeb485f orb unit tests: use orb_unadvertise & create a separate test for it
		58a7db51c373416bab894e8f55582c616c4d41a0 gps: add RTCM message rate to the 'gps status' command
		630146686ed73f64545f16ee48ed32ad8181df19 Comment out line which checks for attempt to set sampling rate beyond that supported by device.
		8c246b3219b07065d6fc67646f0eb9cac9348817 mavlink_receiver: only publish the distance measurement of the mavlink flow message on uORB if they are valid On the snapdragon, optical flow is computed in a separate process and sent to the mainapp via mavlink. Distance measurements come from a range sensor and are already published on uORB. Here we make sure that meaningless distance values in the mavlink optical flow message do not interfere with the ones from other sources.
		d2ecd3c9f574925c918ff980861d62b819f94c23 Modify config files to incorporate changes made in the corresponding non-legacy CMake config files.
		fb97edd8afc2a091201ad0865b5d40ab7f7aa6a1 Adding new CMake config files which will be used to generate a build which uses the legacy sensor drivers.  This is only temporary until integration with the corresponding PX4 DriverFramework drivers is complete.
		6344fa0e8cab9b63baa7b82158a5ba62857916fe limit maximum rates of all measurement at which they are stored into the buffers
		5211da9f5b56dd140930051a2fcbe826d20a2755 Adding new CMake config files which will be used to generate a build which uses the legacy sensor drivers.  This is only temporary until integration with the corresponding PX4 DriverFramework drivers is complete.
		fde635ef5ab2fbf45a576719406095481a3b5d43 px4iofirmware: fixed display of sbus rate in px4io status
		c5f5b9f53c0c65cca0b0ca5c4069f7d0159b189f drv_pwm_output: added IOCTL for SBUS rate
		30ce7fdd48fed3143a71a8294b44483f275493e0 px4io: display SBUS rate in px4io status
		6290e621d4c60136cea16f902247095fbae60ea6 px4io: added control for setting SBUS rate
		f19761d278bc725289615983564169f4801e74e1 px4iofirmware: support setting the SBUS output frame rate
		58122ed33d0534626c13c063c2088317c0fc84d9 sbus: added support for changing SBUS output rate
		7acd5fda22b05797d1d9f985b78807ea96c6f075 ekf2: send flow sensor yaw rate data
		9259406a2981083e08d6497376251eb0aa7c5e81 generate_listener.py: add a timeout of 2 seconds
		1269dfbc43b8a2dc2a593192c1fd8c88c23b7c59 generate_listener.py: fix listener command
		0bfe3a44037b06beb507189609a31d3b5429c180 Updated lpe for separate sensor source files, also made more quiet.
		4bdfb8a10775ab2f8feeade1c622de259234052c Drop Wifi rate to 20K
		04cfc23c013086c894d7505e808fa40fe78ebdb3 allow pusher for pitch strategy to be turned off by setting thrust scal param to zero
		db2a53d95df220b1e7df1ab99655b59d254575f8 added parameter to allow scaling the forward thrust used to acclerate forward in multirotor mode
		13967975c1de26c37a9dbc4db388eb02edfe64ad Wifi link: Drop rate further to relieve pressure on ESP8266
		d3f5cf5d936efce10907e858fe83de4fe3970fee MAVLink app via Wifi: Drop max data rate
		55e4e75a4f30237ab1cf5ae3b75a79958f34e71f SITL: Generate SDF from xacro on every build
		eb41d25ff6972d1a443d9c63bc369313f2dac746 reduces update rate of progress display, stores message time (not TIME message) as floating point seconds, automatically extracts TIME message, updates usage samples accordingly
		079151b3fe75401cf0fd71aab15c8695dc336ceb New strategy to build and run jMAVSIM
		e66a3bd99ff0b9dd6a27895ec2fedabc158bb773 ekf2: incorporate fixes to covariance prediction and initialisation
		c6bd93ed401b784d8743da648099fe4b7a056a86 EKF: Include all output files generated by derivation script
		470098e182523919c4f9674cb7a861ea17d57904 EKF: update default tuning parameters Parameters needed to be changed when covariance prediction error was corrected. The magnetic earth and body field process noise now use separate parameters to help with tuning
		76a9ee261890416e8ad8ff2a60656ce527a1a491 MAVLink app: Limit to max updaate rate
		ff338d8920a40ffd8aff111eb50951d124598379 set mavlink data rate for snapdragon
		1b7115dec9d91d4b9868b640cb2fc389b3f23b5f increased airspeed fusion rate to 12.5Hz
		0cab404cb892f6463dda9d8c6e293ab4246476a2 Recuperate 1.7K RAM with leaner startup scripts
		647526407a2a7cba1a4b3d740dac61fef000b9f1 snapdragon_rc_pwm: cleanup and raise bitrate
		cd2f0eca9503df8421153958e7164a3bb25404a9 uart_esc: major cleanup, raise UART bitrate
		2dcd529ad873555a9a67002509f0530c6fb01c76 sdlog2: Use more appropriate priorities and locking strategies.
		37079dc7437087def1718e2d0d1fb27a7017ed7f sdlog2: added separate replay messages for flow and range
		122dd9c53125242c84d1946c15726df481b8f626 EKF: Add source file for optical flow LOS rate fusion
		74694e3c77fca90e7f11bdf29b2ddfd3a746462f Commander: Support fallback strategies for rejected control modes
		68e45057a05d24e87e3fcd7aea2b571be0a1434f sdlog: compute logging rate correctly
		5aaf74bbe6a7eb841f7dded9da93df762fb92f04 MC pos control: Allow higher yaw rate by default
		44e885f3c3d48c67379a7561ae5095d1e055a91d Att control: Allow higher yaw rate by default
		c6a30d74c1a8750cc099fb4597bce428f8fec609 Bump VFR HUD  rate for OSD
		1d0c968a888b7395a8dc67f2c59d56187d2bf4fe Widen rate gains
		caa94d58a6c28eaff7ed38eca2167783f9e2af66 Manually integrated Jim's changes from integrate2_jim branch
		020cc5978e3816c15c4f1071cc00e029e57d9504 EKF: Move calculation of declination into a separate function
		c7640723c9096f09ebccfa8bbf920758562ae7bb change std::fabs to fabs and rate_threshold to double
		dba462b9f34636193d9f3b698d0a7242e3d4c0e4 EKF: Improve efficiency of optical flow fusion auto generated code fragments
		48ea0230e1e1f06416b947e149a0d8e72dc56ec3 minimum clearance for separate takeoff item needs to be bigger than acceptance radius
		4123da4963904f6db8ce5132c346a5460a2c6a0f SF10a: Run driver at the default max rate
		9eb46fa7a06126416fb3e0b05c414e078415116c Conversion rate comment added
		7edd07f8cbc9da3da62c365b0ec5ab78d69ec76d Rebased on master, removing the default_rate field and using default to 0 for rates
		76da9ab82bb75b51f8287daaee248b01a111da8f Set default node id to 1, default bitrate to 1M
		f35e3335be8092d14136c82f35f48c253e0b250a - only use takeoff strategy when in auto mode - after jumped takeoff set previous vel setpoint such that thrust setpoint is continuous
		bf03b8cb18ff6404911ea172e673428efac329b9 Yaw rate limit: use a lower limit for less twitching
		e17f3441190bbd3b8437e000550feb13d6edc929 MAVLink: Enable 4 streams and fix OSD rate configuration
		19b81b9ab26e4576450d6cb946ee06a127b2c6ce Commander: Rate-limit preflight check
		751a95deb84d6fd5a948431724057bfdfc6d233c Commander: Operate blue led on pixracer
		4437727b970282a5c2d720a1791976cfd25f839f Airframes XML: Generate new icons
		f22c574b877070b919fbad03d2a5e0a7e846b952 Integrated cmake_hexagon for qurt build
		a4018bcbc1d554a2f06a1a0bc2a9872e40bf3f11 Update to higher jMAVSim update rate
		7c3a67e3747e67defe05fe9ab92b607fef37ba3e use optimal recovery strategy for tailsitters
		ac4e95df058e481bce20ed377f2daeee77343ce6 use optimal recovery strategy for tailsitters
		ee2e3811d73c18158d0ca0dfe2c99a21f636b3a2 RC lib: Support separate config from init, allow DSM bind from all boards
		b958928095cbd65a8de2eff9fb454694315af73e publish rates and quaternion on attitude topic
		ba00b2742ecc56093cc9dd271843315a02d62b30 QAV250 config: Set higher max rates by default for attitude
		989b65912bcf7bde040d12aea6c7e1e0058f7f73 jMAVSim: Drop sim rate to 400 Hz
		76c479170a3fdb61e21b302f20e0d3f2fa08e01e add transition back throttle value and angular rate
		67dd28e2c4e4e6fb39c345e74c40759baa3f5500 update distance sensor separate from flow
		719881b4a473d8be66a00be17bfc740637891a08 EKF: Run vehicle status updates at full rate
		17653113d53c7c70451daca4efa62ff102c6b39a FW att control: Run all topics at full rate
		4b56587188d9b990809dd15f045e8103038adb17 Gyrosim: fix rate and device id, also output of info command
		e41c3cf87676e64a1cadb42840998791a3bd1981 Missing Close es and poll rate reset
		d5c89c53923d0eacfcc1614d07887b7db77e383b BUGFIX:Take 2! CLI "commander calibrate acel" resulted in hardfault
		2ffccc5c9f1667aae5a2908e66e8a39df7faa15e BUGFIX:CLI "commander calibrate acel" resulted in hardfault
		6200cf6d869d1eb452519834f24557cfa346f4b3 reduce gyro update rate to 400 Hz
		234a200e6081bc19c0489a5bd266ed4d00cee917 renamed heading controller to wheel controller, added groundspeed dependency and separate parameters
		b93f34c99bb5d71bc4260541235b9e906d9b2796 use separate heading parameter beacause the other one gets reset in auto
		7ddd5712c53da99715ff14602510f44fe56fe8b6 Integrated DriverFramework
		d04a4969e211a2fad5d2c18fdb266a39bd5d773a Integrated DriverFramework
		56d67c6f6c8f19d5362936257ed4e6a76513c0dc Tools: Support injecting param meta, do not generate code for these
		15e8f28c88c90440b2da8f37cb578978610c576e VTOL att control: Move param file to generated version
		90023b2a0c2073fa0a8610729214a10e94056af6 MC att control: Move param file to generated version
		54fff33e8ff9c132b0c986dc40afe68543089b9a MAVLink app: Move param file to generated version
		b54a149b908f3fe5fe580ff39a8d0112803d104e reduce PID rollrate P and D in QAV250 config
		27df787bfffbc5858e2fd3e41491e293521c8683 Separated matrix lib into own repo.
		83079e0e11854ee4517c0dbd2a7989d7c2e806fd Inertial Nav EKF: add notes on use of generated code
		8a6e9d17bad1348682c8e6f727c4261f4530df07 MAVLink: Do a better job at receive rate limiting
		af6a1961870daba1b43a612eecd151f92b021a5d Add generated code for 24 state Nav Filter
		d4a19163bb49b20612643b4fd531cf10e0496892 Added switching from attitude control generated rate setpoints to manual rate setpoints when in rattitude mode
		c4a82d78c880b9de3800b3c6983e827890f9ec8a Added commander support for rattitude mode.  Still need to incorporate attitude/rate switching in multicopter control
		43834e3fafa09ba38fe6f995cadcf191e666250a Att Q estimator: Lowpass output for all three rates with adjusted lowpass frequencies
		468bac71c2997f17b04546f03b50f84c54adddce Fixed PRI64 to PRId64 in generate_listener.py
		44bb50e9eae36713a37624e9686eca62221a0360 separate _DZ parameter to XY and Z. this allows disabling pos hold for XY and not Z
		a7c6a343c6ea0d27f007ee250415ea3bef81514e Commander: Do not enforce sensor order, only enforce that all present sensors need to be calibrated.
		4d7cc41921101cf9ee91793cf12e21c3d94a7c19 EKF: Retain minimum Kalman update rate
		4e4d10d8b9b1b814729e529a461a37e284f8f0f2 generate_listener.py don't depend on platform dependant slash
		1bfc919c83e93eddcd333a606a3da6df3b0f0dbd cmake generate MSYS Makefiles on windows
		e8fd711a5c721230ac829db0904bc3d4f00ab455 uorb generate interally set required paths
		8d756055b8517a153667ca78a0c00f73cf09158d integrated control state in fw_att_control
		6dbf4e45733c551d67038ba85f704ce937fbae3c integrated ctrl state rates in mc_att_control
		78f5a35d1214f3d60878e4c0104428b98826d919 integrated control state in fw l1 controller
		90f2e8d61a82be3b2cd60d112cfbd7fcf48af76b Force CMake to generate UNIX makefiles on all platforms
		5c52efece4b988ca8f13fc12c3975e32705f927a Sensors app: Rate limit new sensor discovery
		f43ccdaea1f515d06508b6edaafac0d0be956dbf Make parameters a separate library.
		e6cbee74bf04dc4ceee610139b51dcb76bc92329 Tools: Fix param code generation to generate correct union access based on type. Generate #error C-code for unknown types to prevent silent failure.
		a470e03cf0dc50665b1327479ed74d89722f4f32 Rearrange default stream rates for MAVLink
		d5e152f2cddaab6ace64f656baef7569c9b7c44d Attitude estimator Q: Add output filter for rate outputs to bring noise level into manageable range
		dce31a76a82ceffd42c510b1ae2487ae80d05110 EKF: Set correct interval / update rate
		9950d5e9501bc6921cd7d9d8b84f61521ba4f7b7 EKF: Use delta angles / velocities if available, fall back to rates / acceleration when needed. Remove unused sensor offsets. Store estimated offset on landing, but do not yet load it on boot (we want to check these after real flights in logs first)
		4143c9402972c28aba55a3c0376fb8d4dabf0d45 sensors app: Re-introduce sensor rate limiting
		33bd30233ef99ea8e0fa8010e8dad36dd84619b2 Remove mission topic and move it to auto-generated
		b9face97660482faa6d41aac8c7d7197ca6155ef PWM in / RC in driver: Move to generated uORB topic
		b0a9679fcafd82f147b93eef252a1fd965a7a6d6 PWM out driver: Move to generated uORB topic
		647c2e2a3a7d0e0b67f5311d436844b8c80f0618 RC param map: Remove non-generated file from GIT
		b530582e5970f934650c75d22e7e3c9807f9e647 RC param map: Move to generated uORB topics
		36a787bd91a50f0b3b16aac93b536f2a636d942d Mag: move to generated uORB topics
		1d1431e532a63ba35bb384609ba642826abe1525 gyro: Move to generated uORB topics
		7e24240ec394ab4e0c011e2891d30b955f9b0f38 Baro: Move to generated uORB topics
		33a1e3127a3e92f5fdf9a4aaad19f5ad3e7fa0aa Accel: Move to generated uORB topics
		bf9bbfa27fc5f2b5ea909600d7dc983998f2ec4d Handle turn pitch rate compensation in pitch rate controller instead of pitch controller.  Also set inverted flag to true if rolled more than 90 degrees
		39732abf1f16d4dc9ca643001ef39cf73a462727 Changed ecl_roll/pitch/yaw_controller.cpp to no longer transform ctl_data.angle_rate to angular acceleration as the angular rates are already angular accelerations as calculated by ekf_att_pos_estimator
		c9d0b54a6f102a08fbb77cfa4955cc9317a85fad Attitude estimator Q: Integrate data validation lib
		9df860e92177faf6cf3e137fdd4c55a1311c5eea update uORB for generated topics
		b3c1d5692669e72ca41c15152b8028e78532281c sdlog2 update for generated topics
		16cb9edf19853a3ba603c8cd7ee548d74023a8bc Converted telemetry status topic to generated topic
		c3d10c4cb309bcf1d260f257a569b86e0edeb19a Converted multirotor motor limits to generated topic
		ffb9e8716196389cadf8b73f6488c5f5229b3381 Converted satellite_info topic to generated topic
		c826451ac187321368711106d20c98759ccaa973 MAVLink app: Do not rate-limit trigger messages
		06a4e9c58593ecc311c70d623d7e6d9877f5caaf Rework trigger to operate on work queue and timers without jitter
		8b7f1cf560220f649001d2927e4831dd9504be31 MC multi attitude control: Limit yaw rate to avoid mixer saturation.
		ebb061764a23d075dfd22a7d6fc3a8e03f048ae9 MC attitude control: Limit yaw rate further to avoid mixer saturation in the first place
		e0870d09cd98a5329f45c279142e14abd20018e6 TBS disco config: Yaw rate looking good
		fbc1b78b3819beeec9f5327ef40fc3de1d599808 Attitude control: Enforce rate limits by default to prevent jittery control outputs / steps
		0d9d5d1fa5d443cb397a14751105213304b173ba TECS: Limit rate demands
		adda7702f9cef732dd6665f80af421f0ced8d6ea MAVLink: Reduce default link data rates
		d19718a23bc0fb757002fadc5fa50393daf7e911 MAVLink: Reduce default link data rates
		193e02ebe601143100bec240508047935aa780af Remove rc.autostart, as it is generated now
		d26cb08b3bdf4618600f3fa191587181e7ae9f95 Firmware makefile: Generate autostart listing automatically
		fde0c65d7749a1a951a1dc3389c2d1dcfba2d09d Airframe generator: Also generate autostart listing
		d94f2aa407741a86256e1971197e5efb3ec93ddc MC pos control: Use separate params for manual control
		033c512fbf45cacc59262a6cb1cad9c437270122 Add separate params for manual throttle control
		d0d46c97138edbc2583866a0da9e12df2ca1cd0b MAVLink app: Use better default rates
		482641e40313eb1a7e810021c72b0610d3b7882c MAVLink: Crank onboard attitude rate up to 250 Hz
		44eff3681955ee03c9611fd17a218edf32b3ec67 SITL: Run more streams at higher rates
		fd63ba7b898b95469b62f6f3f42f12e042aae619 FW pos control: Widen acceptance range for yaw rate to re-engage heading hold
		f0e9817f2b2cd2eef15af1c4b6c00cc94fd5d39e ROMFS: Adjust onboard data rate
		319f9d820f2c77cb8b63cd3342accbd5a183d6de telemetry: Crank up rates to make param downloads and other things less painful
		5b354b96310fb5fed71bfa944db00052c3ad5bfa PWM driver: Fix _IOC to _PX4_IOC for getting servo rate
		74bdec2cc642b23302a80ab75a4500854ac32d39 Merge pull request #2459 from wingtra/estimator_LP_rates_log_covariances
		da29b88a04cd8f144ef48bf3b8b66652e5d46b91 added LP filters (10Hz) on attitude rates in estimator
		adaaeff48a4d7b3b36e407f832a837627171d67d uORBTest_UnitTest: Split test function in 3 separate functions and add a test which fails because it does the subscription before the advertisement.
		2ba8ac44382d7e88cc22b73471733c2d01d9305e Move mission result to generated topics
		adbccfaa1cd100609490b61f2081a0619b0a36c8 Saturate velocity command for mc_pos_control.
		28d3729acd202d8bac131ac98e59534e8d08f25a Backport of Fixes mavlink_if0: invalid data rate '(null)' bug
		e8a9c200561fea02f24a97883e6c617d07b251ce EKF: Ensure we start with zero local altitude and zero GPS offset. Since the filter is not publishing any data at this point this is not relevant in operation, but might be important later if we publish a separate altitude estimate topic
		4df833d25d03f6cdeb7eb12c5bd2ca54bf606b29 uORB: factor out ORBMap.hpp into a separate file
		ef6e07fc9bf6f4cdf51f74c930b57d8becad185d fixed wing position control: - only lock on yaw if yawrate is below threshold - remove more magic numbers
		363a4821656d5fd8afef2887150f6ee705074af5 Move navigation_capabilities uORB topic to generated message set
		d7547d388fdc60c74b838987a99f81d19ab1a8c5 Remove auto-generated airspeed topic
		3da7da9466799a854febed0d57c4dc730b78fbea uORB: Moved wind_estimate and vtol_vehicle_status topics to generated topics.
		a75c0d8eb1b4aed14e95ae1ce004c8809d0e8fed uORB: Moved vehicle_vicon_position to generated topics
		411e0b2f84b5aa006c6ab030dcc9a47890fe7ebc uORB: Moved vehicle_land_detected topic to generated topics
		5d62fa419a109c1ef56e723707b004d143e59bb3 uORB: Moved vehicle_command to generated topics
		7fb581291807b28e001991db9b6a1f514fdd1f8a uORB: Moved time_offset topic to generated topics
		38c0a1a251d0f8390e5a3462136a2eb3897bb045 uORB: Moved test_motor to generated topics
		b36fe0232f34aa34e703809dd68b6571b7fbe7e2 uORB: Moved tecs_status to generated topics
		520d830cec15866ca1d018bdc51b6133cdb08491 uORB: Moved subsystem_info to generated topics
		f1d038efc07edb336dcf930e199a21e7f214d6b7 uORB: Moved subsystem_info to generated topics
		f7563816d4c1db10846285b84d2c6509b04eeaad uORB: Moved servorail_status to generated topics
		7b90746a7fab9b0a591791d298c5a4ffa93c19ed uORB: Update objects_common.cpp with newly generated topics
		0e51092eabbec4993036ce88e2c09663b5232b90 Move geofence_result to generated topics
		a994e5826705018e394c7c4bbcb598f7fc2b8ff3 Move encoders to generated topics
		d400643738f6a3b9d9f245a87d0c837f55daa179 Move battery status to generated topics
		06ba8d924a116f670efa96a90145b21a80fac0d3 Move estimator_status to generated topics
		a190d01ade748f06ac595fe6ae2454f6c376c833 Move differential pressure to generated topics
		961b6b7802b4fa68e1a2bb8ddd5672fa26bfaea9 Move vision position estimate to generated topics
		01d72adca5f5193f8ec868526c0d3ea091667c50 Move debug_key_value to generated topics
		6ce097546cf9a7195eed1e69b28b9384c41ac484 Move fence to generated topics
		e07731de7a5d3cf5f7a5deedd60556b761399bb7 Move esc_status to generated topics
		b980e34c3c473c8b6b19b67c18a23c9b4cc8411d Update uavcan app for generated actuator_outputs topic
		f73a942c05dd08a6106aac2a0c7bac0c35092dda Tools: don't try to generate messages for hidden files starting with a dot.
		5b6f1b5ca554189cc25a52926066f857c543d80c fixed rates feedforward: plant for feedforward is given by derivative operator
		7f5a5e085cedc9f76f549f4fc5ecebe62b9ad0aa Add "calibrate esc" command
		16df7e1656235b2184955363186e08d7882ad923 fixed rates feedforward: plant for feedforward is given by derivative operator
		fe357a9a667e5076fccbdb28ee9bcae55c18f5b1 Separate timeouts for battery and high pwm
		a6af1fc0faf529b214f9158bf172f34488517be7 Add "calibrate esc" command
		7da96b3bac49ca8fc391e0bb44c31b344c0818b0 POSIX: Fixed uint64_t print in generated topic_listener.cpp
		9179fcefc9ce138f8fdbbe9e194ca11ecb116b33 Calibration state machine fixes, generates less bogus error messages during calibration
		1978f1bcac1d854d035f78672decd8d4ac67f6ce distance_sensor: remove 'distance_sensor.h' autogenerated header
		00296ba24170d808bfe610fbde3e89e95d6f3908 POSIX: Fixed uint64_t print in generated topic_listener.cpp
		dabcf63c506f5ead7978d49df039e4e193cc3a15 mavlink FTP: Drop rate to realistic value
		542dc9f65d05291b8b9661374044f8c51a4dd209 added default rate I gain for multicopters. added default gains for FireFly6 in mc mode (from Simon Wilks)
		b6441d29661be76d6790a4c492114065424174a3 implemented new mixer strategy
		5b91f172e397ec57420869680e35653f2f844edb topic_listener: moved generated file to Build dir
		3af6e9d76e9ba6cd860a2addf0f0ab197aac2807 added autogenerated code for topic listener tool
		ecbff2885c6af9be03c97422fa62b4bc03a772ce FMUv1 config: Recuperate unused interrupt stack space
		0ebf626632675dc5d54d08164be04d37ec1d74d2 MAVLink app: Allow higher max data rate
		31818b30b6e7402ee6a6ebac9ef8381478f4ee20 Linux: Ignore generated messages
		192d70e5702534fa09b8f364d564476bf17dbd54 Linux: removed separate path for dataman file for Linux
		63d741e3686d4dd1fe872426aec0b1570f897628 Merge pull request #1993 from philipoe/PR/IOActuatorUpdateRate
		77771b2bbf2ed784fee48d535bbac2e8ea717c49 fix comment on MC att controller rate limits
		7f418445f2a2108b1026a31b3763da5e6d960fe1 add new parameters for roll and pitch angular rate limits
		a07712bb1e41538de72686562c8295f2688f6880 apply roll/pitch acro_rate_max in MC attitude controller
		93eff2bb956e920b99b2058550fdbc3f23ec6155 px4io firmware: Allow actuator update rates down to 25Hz. This allows to set the same update rate on PX4IO as on many commercial RC systems (e.g. Spektrum, which works at 45Hz servo update rate).
		989aba363df8d98b1cb548a4b5dc0f915c49e771 Merge pull request #1928 from kd0aij/limitAutoRPrates
		6ccfc222d38ef0f409e7d9d237aeb4c6e80bfeb3 fix comment on MC att controller rate limits
		b356508f6b05504af745dd1ee2ba2ab00816057d add new parameters for roll and pitch angular rate limits
		6b26594697a305477b81aefa4788e1521de63bc5 apply roll/pitch acro_rate_max in MC attitude controller
		a184aebf0f27a77d528921d66965ab1304c4fca0 mavlink: Crank up param transmission rate
		9d61e3a7db733309c02b238703c3773d436864f2 Use new calibrate_from_orientation api
		631e518c45b054441cbe9eba5167d3075d5d2a9d BIN_TO_OBJ: Change NM radix back to hex so multiple leading zeros in NM output won't generate octal constant in C.
		2d8908ad01cc75fd7fdcd3bc2c94c6d398322662 Merge pull request #1905 from PX4/mc_att_rates_ff
		7236f22f12dc5609f2775b846d12a62175c11d80 added feed-forward for rates
		e191958ce656dbc31bc0029b9d0e1ed2fd4db72c Made aux output pwm rate, min, max, disarmed and failsafe values configurable the same way as for the main outputs
		7bf6c3bae867e3ed350043a89e7e1ad4b87b9236 Increased update rate to get rid of glitches in servo movements
		2b71bff85879fa0264877e9391f579d53071ea13 Generate messages first, then check submodules
		6635d4113eaf29c278045d74f9a4c6e2974ad485 Remove header which is now auto-generated
		a77420ede84b293e41855ddc7b23b647cc64da96 corrected rate offset calculation such that units match
		172179ee2ef3bb680ed58b5e7267e0732266e8c4 removed docker/vagrant stuff, is now in a separate repository
		53ffde30c257a00f4760e93cfb3b02bac085f682 fw att: add param to select yawrate control method
		3a2256dfe72b519fb0ee5225fa179d4a46a3cb76 Set up ACTUATOR_CONTROL_TARGET message and stream rate correctly
		76901c6414ac8612552546aedc194089dc45c510 AttPosEKF: Moved data collection to separate function
		004118f929a03e0d42e363dd2b74330ccf6b82fe LandDetector: Change rotation rate in rads/s to deg/s (more similar to mpc params)
		f53aa5628e12cdc0cd47906c4b6846f8717e3bc0 sensors: init accel and gyro with default rates
		a4961092af2d0e09a3dbe04e8c2f0a362476d21d mpu6000: check for default sample rate
		dedba4307de2b99ee3a9fd2d6c31c031bd4524ed lsm303d: check for default sample rate
		90b29efebf846da195af53492ee2ee0c50b6d7fa l3gd20: check for default sample rate
		e2524b9aed144db6fc023e169e716435c9c93052 drv_gyro: introduce default samplerate
		0e1832452fdbba0ecc3de944bbc25c2eb9c2f313 drv_accel: introduce default samplerate
		e532b81ac1f3356a3f2771d605b8d92d88d19d67 uORB: Remove last remnants of ORB_ID_DOUBLE/TRIPLE and migrate actuator outputs groups to new style interface
		8da83cfc80d2209e41cb47dd1dd2831d18a34012 objects common: use separate files
		265139f836b1fefdacb1e9498f0d25ecf2ecb47a add msg/fw_virtual_rates_setpoint.msg
		d7e57061c976ba18c69d8be9949660e85f645126 generate message wrapper headers on ros
		738f65a705c5dd2e664fedf54fd1064f685ff5c7 generate wrapper headers for uorb
		b795705640c6a14ba359e381c935351f9377aea9 improve efficiency of non-uniform rate LPFs
		ea57dec24b14d94ec82f04b67bc31775b1f4a9cf revert to original ms5611 temperature sample rate
		f86c0ed892c0b63af11d23e860c815d1c087ff8e remove fw_att_control base classes: as long as they are not integrated into fw_att_control_main they are useless
		154111d4c011a9fd58812cb88fbbbbc38e30e08d move checksubmodules and generateuorbtopicheaders dependency
		213f08ee07c57d4781002cefe797f7ce9e9fd561 generate uorb topic headers for tests make target
		3606f5370af4d439afc47d1585a76e0b66e34336 cmake generate mixer_multirotor.generated.h for unittests
		a6ad8b3cb74bf02c269c18187fdd938391581970 Travis CI: Output generated mixer table.
		18bf501992afa8b561822615104c3868091429b9 Added output of the generated multi_tables to the terminal as well as to the file Changed compiler C++0x enabling flag to check if it is a cuase Updated copyrights
		1bc6c44a0e30059620bc5fec85c5d096cd911df0 Fixed compilation of tests target in clean checkout Moved mixer_multirotor.generated.h generation to the standalone makefile to prevent copypaste
		59fa170e54a4a88b4bdad86622e75183e9fbdc51 Automated updates of the C++ code generated by the multi_tables script, now it is placed into the mixer_multirotor.generated.h file which is generated by makefile
		c4471d77d7d6a20709240ab933c32d87ba7c07fd Moved quad_v and twin_engine to the multi_tables in order to make all the tables been generated automatically
		a0b767f4676a9204260442c56ab309108d47638d add yaw_manual override variable, effective only in ALTCTL and do not publish it in attitude rates
		2f332f0e9296e57187c152673fe4df5919cd6d87 Integrate the Google Test framework.
		e697413667579ffb1c5900193a03da257c05d11a multiplatform subscription: uorb: separate class for no callback case
		4a42f6ca6a95c9b05ed2c1e66cc251ea0e001c59 Restore EMA. Works better for low rates
		9c09a9e8d56b69797b64e5fa1f17d2bcf760e2bb mc att control: prepare for ros integration, move class into spearate file
		99d89577cd4c7e663583773eccf0883c1df773c4 vehicle rates sp as msg
		0e33e52d4ae2df06467f5b862bb0734c3ba23015 use uORB ID to determine the correct rate_sp- and actuator topic to publish on
		fa8ca2fc107ccd0a8e74dc3798bc27f8422f0a56 set correct number of PWM outputs and PWM Rate for caipirinha VTOL
		e28e8c11bba0779386fc16ee47deac4db39b51c0 make default apps compatible with autogenerated attitude and rc_channels message
		30d851284606476642c6cf8a54070bc08ab923c6 MC pos control offb: read altitude sp separately
		5f6d03099e07e20abe9cec685fee1244d7c9a0d4 fixed yaw/yawrate bit masking. fixed navigator overriding offboard setpoint
		ddf57813f4a571a274c9080bc9ef04c86dd70e63 Merge pull request #1416 from sjwilks/calibrate_usb
		c7f7de352d7e0f2921526e33077c6da6a46b404a revert some of the OBC rate changes
		a960fcbdef475e5ab264760568b15867d55b7774 Increased ashtech POS frequency and increased baudrate
		964fddb387b8e635d2cd13fb2248643791304489 make geofence update rate independent from positon update rate
		21009e89a4c748d8a61174058bb378c1d6306b8d flight termination mavlink outtput: limit rate
		25b2d4b823d339c69365baecc7b9eada37e0a529 change rates for mavlink streams
		e3cac1999a0b4398e669f90cd28279ec2a0784a7 navigator: geofence with global pos: reduce update rate
		808cc60cdad5c085d74e583d967cd86126ba1fca navigator: geofence with global pos: reduce update rate
		9608e7adeb069878d5cedd3ece9edc7f4ac40ce4 flight termination mavlink outtput: limit rate
		e056fbb7038e4274fc54f4e19e66c8174ffff28f add heightrate ff for tecs
		e8c634d87a981977d0ff8fa2edd5e83e64a1d380 Merge pull request #9 from swissfang/tecsaltrate
		4e9a52fe45655aa853bf9af10223d32767bb60c4 heightrate ff: fix order of calculations
		dd1945bb7644b41e765866aefd3c6cc14e433b37 add heightrate ff for tecs
		132c9180ead0c64c2edcc36dec2bf8896679a040 mc_pos_control: move position offset limiting to separate method
		ff28b5e930dc07105b4e1f7b43ff3b9f7b09f7ac Merge pull request #1313 from PX4/onboardrates
		b150c3092c2bfe532618678b91c1eab42095c486 mavlink_main: raise rates of onboard mode
		55fde23233de3d311d6c8d0b2cd368e45af3caac support new yaw and yawrate fields in mavlnk position_target message
		8f2fa6da25ffcb83b27e732e4d22b845a652500f Adjust rates for attitude and attitude SP
		8a066a85faa7dd15265f705eba78a9dfe53f9f1d Fixed bottle drop to operate in GPS outdoor test, pending test flight
		03f839a27ac61178be8ef77526faa13a46c4cd6b mc_pos_control: more accurate position setpoint reset, keep attitude setpoint continuous
		32e32d92bdad3eb4e92e9e53c112fcdcf848c7e6 Add throttle slew rate param
		3b1c92e42f57277a12d40963c22fbea9820ee0ad Make throttle time constant tunable separately, group TECS params correctly, make climbout alt configurable
		fc2e0fad4731ef543be4c3da73de6b670d40d804 TECS: Added separate gain / time constant for the throttle loop to allow independent tuning
		68415137b9e1117a1f7b4d54b9a96ed39af6a713 Merge pull request #1217 from PX4/mavlinkrates2
		cec472eceaf262f7b0dec27cc4041383d07858c0 Merge branch 'master' into mavlinkrates3
		17bfc06e9c16851c42121357735996c12ca2f52b Merge branch 'master' into mavlinkrates2
		e3bc5571556d043ad5c8c4fcabd1f9b371599397 rc.usb: set RC_CHANNELS_RAW rate to 5Hz
		2cf688312a83d3c8ad5b813de0643901891886c0 mavlink: show 'rate mult' in 'mavlink status' output
		5f0fc4b566993590bac90d577047a24e8c545415 Merge branch 'master' into mavlinkrates2
		a2ac45f4e0b0b2a1f0acef4f116fa3e0ad99483d Merge commit 'bd808ccf3a825ac1304a72dcede12478fda76857' into mavlinkrates2
		c5a623e15892d63eb3571bc450edea368b2894db rcS: set rates for parameters and missions on USB connection
		1938ef16e39ff937a3076489f3eff0a2eb4bbb65 mavlink: don't scale up rates, debug output removed
		ef363edfcd810e3b153609f0a723f53db0cd3885 mavlink: TX/RX rate counters added
		0c0b1a4c666671e964d295fe6aea64d7b6a98fc9 Print mavlink radio module rates
		dfbbc6600e67618e030c366dca5b440dcd0ddcb7 Seperate vision position estimate correction logic from gps. Add vision weight parameters. Fixes false positive of valid position indication
		07d11583bb0926ac9fe1cf2f1c7e11c683606a4b Rely on theoretical value, as the closed-loop test with multimeter suggests this is the most accurate measurement
		1f3625371d787cdc452b45ad9d9a01423ae51f96 Obey radio status in opportunistic transmissions as well. Last missing bit are adaptive rates
		cbfbdd27883b4f038032aff907f67544fddd090c Merge branch 'master' into mavlinkrates
		41003a243793e465a71e9b142e7c9aac132d3923 mavlink: TX/RX rate counters added
		52a9513e64dacf1004fd0e11df3daf5eb607b0f2 Update rates
		730a520362caf9c9d3e506a31441d9921e008144 Print mavlink radio module rates
		0c5ce3d3a23a32556b38bb0936b315d12290e4ba Hotfix: Allow the HMC5883 driver to continue to operate in auto mode
		5e62ae7a9e2a7d3ea05d293900f7171884fbb448 hmc5883: added -C option to calibrate on startup
		bd5d3ebf70dc9e1aef106b60a840c17824d35b9b telemetry_statur: use 4 separate topics
		28a31708f98eefa4ceb04617f2da3dd7892c99fa Merged estimator fixes and mavlink rate config bits
		2bd5511d096c3351bf74c81072e2cc00b344ef79 geo lookup lib: Moved to separate module and compiling with -Os to save some precious flash
		194aa491107ca10a65065edef3977c20c02a507c Merged rate config changes
		9f3758582f31066ba6ec0af2efc5c959fabb1baf update mavlink headers, headers generated with message definitions from the externalsetpoints branch of mavlink
		74ae18c245514d918e6ea58f05de98b9fe4b63a5 Fixed rates flags
		5be741607c0d8d477ff30c7639edbd3bce427e7b mavlink: mission manager moved to separate class and reworked
		44481e3773b7a576b31727c64931216112d953e0 mavlink: sign of climb rate fixed in VFR_HUD message
		3538773b99d4231bf8a64e9c257cfe0299a93021 Initialize rate values
		ef6af184aa7858a9124de13c958f02b140b0f712 sdlog2: Logging wind estimate at low rate
		ffe095646c5984236731c88fabfe2b2b0cedf983 sdlog2: Set logging rate and extended logging based on parameters (overwrites commandline if non-standard)
		78637ff74b4c12edca0fac9ea8eb65f38993b49f mavlink: publish attitude / rates setpoint in offboard control mode
		e72a7a7dd78cde4a93d42a53328553e71560fc27 fw att: robustify main loop against non finite numbers and limit error output rate
		157c360caa14a7b172cbcd6b6085f18292e29edf Merge pull request #894 from PX4/yawrate_limit
		ab5e76e3d9da5a76d6520e166d5370c6bdfc4a53 Fixed printing of bit rate
		75796e95b4232f961b7ccc9e8c8a76433b389eae mc_att_control: MC_YAWRATE_MAX parameter added
		b96669a5314198b88e406fc02940ed2ced291f2b Logging changes, baud rate changes.
		a66dcbf7e92a1028765f6c5c9a545945ce1a5dc3 mavlink: publish SYS_STATUS at constant rate, don't look at update() result
		b1e4b34a56bfaaa98adb253195d9751f960d5a94 Logging changes, baud rate changes.
		de3efc0975f1b84cf556bae11bbebe95609dbcdc mavlink: publish SYS_STATUS at constant rate, don't look at update() result
		8666ca53bf5b8eebbf60908c16273b711f80a19e Reducing VFR and HUD update rates, we do not need 100 Hz for 30 Hz human vision
		69bc0c8e3998f87358bbf8a5f97f5c31dca43f76 Reduced param rate - as long as we do not have proper QoS (= reducing all rates at once if link becomes lossy) we need to open-loop match the link
		bf69a7b6473adde22b3220b6e72c0d065c897bc5 mavlink: camera mode rate is now correct
		952fd1ec6cbc615d6bd9213061dcce0f9cf8c5f0 mavlink: camera mode with rate multiplier
		c0c54f01cb351afc4184c35a0308686392af1a14 mc_pos_control: operate in local projection instead of global frame
		3317259e798b31ff407e07188f3080f6dbccf478 integrate range finder into fw landing
		76af0970f5220d3a842c4daa353a45ef51df1082 Increased param rate, fixed wrong usage of MAVLink chan.
		290b07920c94df09415ccc1c44850c57d0750fc3 Fixed missing reset of poll rate after test exit in ultrasound driver
		2ee8214244efbe09981e71ea194573daa1c2f5bc sdlog2: move some global variables to local scope, set default log rate to 50 Hz
		2ec4ee6fc08f5368a52028de83f420ffeb249698 mavlink_receiver: split message handlers to separate methods
		0789189c0588ebebd24a523f9639411be89c6a9b - Added JC params to jetdrive control example app. - fixed offboard control mode rates
		2159f948ea81088076b440cd8b673b1ac9f70da3 mavlink: -r (datarate) parameter implemented, minor fixes
		141982a3ac21e7a0437f1d7692e4024daf873c21 mavlink: minor refactoring and cleanup, rate limiter class implemented, new messages added
		18f72f8dd7a3bd4a9af00fe28afd29e0cc65e2e9 mavlink: GPS_GLOBAL_ORIGIN message added, set message rate depending on baudrate
		0656aae3cb46f405888d8130e9db4bb3f9dd529a Now setting flag_external_manual_override_ok to false when in offboard mode,so that fmu has control over outputs. Added handling of OFFBOARD_CONTROL_MODE_DIRECT_RATES.
		52b29cae39a93a0c5218e911e61d1f6cfe6115c1 added poll to 'attitude_rates_setpoint' as requested in TODO
		1afa53a159ee247a1c57ca59912077c5076c3997 Cleanup: Moved sdlog2 file conversion scripts to separate folder.
		2b4af6635708be2248abf53edb65a9223fedcd6a mc_att_control: poll vehicle_rates_setpoint if attitude controller disabled
		55f5f1815f6a8f2efb969cea2eb061bdc2d9b92a mc_att_control: remove rate limiting to run at 250Hz
		d933d523eb74ee2290c56afcd11fe8e85c6e702b mc_att_control: att rate integral fix
		282e0bb6703e6f013eee690bda97e09045837fd3 mc_att_control: separate gains for roll and pitch
		4f78c3e60596d1b596e5ebcf4bb4e101a5b356e7 Disable PX4IO debug - spams console on comms failure. Each command does report the failure separately, so we get a better feedback level without the spam.
		d811b0f0dab95949cc03428379555f0f4d1806e2 mc_att_control: ATTRATE_I / YAWRATE_I implemented
		dae5c838422a6250e1a7e4920d59cb8976a16a8c mc_att_control_vector: support for disabled rate controller flag to handle AUTO_READY mode
		8c518aa23710ba0b9ad0c7ad2c03428ce8ddb290 Useful bits for high-rate logging
		b5fb5f9dbb2d26cea1ab50f005cedff52e992eca Navigator: Moved mission stuff in separate class
		9d4ba6e4f64d631c67a419518a8398debade4641 Navigator: Moved mission stuff in separate class
		72aa171ef982deef1519cc21129024a96d9633db mc_att_control_vector: attitude rate D component implemented
		193692cc0df0c3a4b9905fc18cb04321095b6984 Hex Startup: Set rate of all 8 PWM outputs (6 are not possible because rate can only be changed for channel groups
		3c6f01bea8a65e2c347d1b893b3fe0d152bff69c tecs: speedrate: use p loop instead of pre calculated speed rate for now
		714f5ea634a184ac80254e2a415221f738d2ecd6 Track raw battery voltage and filtered battery voltage separately. Estimate remaining battery as min(voltage_estimate, discharged_estimate). Battery voltage LPF time increased.
		ad133f601bd89156c9cef661cddf684c99ca76cd multirotor_att_control: use PID lib for yaw rate control
		6fefa453810893d5a983e20e0d503f726e07d06b Merge branch 'fw_staging_ouputlimit_master_heightrate' into fw_autoland_att_tecs
		c275f785414121c567523db00def3f76349a218f Merge branch 'tecs_experimental_prate' into fw_staging_ouputlimit_master_heightrate
		c0100b5e17b87b1c721a115bdbe535ab606bd58e heightrate p as parameter
		2e9a383390f1d6456f7258676024ad06ff5af1c6 Merge remote-tracking branch 'upstream/master' into tecs_experimental_prate
		cf862bf810f9c6e86f0b756b71e57796d523bdae Merge branch 'tecs_experimental_prate' into fw_staging_ouputlimit_master_heightrate
		c20aee6327035ab8127bb0f030d0ac3af13e47ea Merge branch 'tecs_experimental_prate' into fw_staging_ouputlimit_master_heightrate
		947207e68da08b7cd14e7da0b44d000b1c435b11 change calc of hgt_rate_dem to use the filtered height setpoint
		b21b9078e2d719bfd7af9580ac3b9b5957ef1d57 wip, fw attitude ctrl: split into attitude and rate, compiles, untested
		cb5e5e914351754356c85e61f2394d1cf91db71f fw att control: also transform rate estimate
		ef6f1f6f808e49ff3aca68aa08001e37093b89ec get_rot_matrix() moved to separate library, accel calibration of rotated board fixed
		9daecd708e2fb24782354ec11a0c9581800ac616 Merge pull request #479 from julianoes/hotfix_baudrate
		5cd675d8cce6a3c35eab1970cfb8668b0a6b24e5 The mavlink baudrate was too high in the custom_io_esc startup script
		71ac33596836519a341001bb48a8835b8af75cd3 Small improvements to autoland, ensure that throttle can be shut down close to touch down. Depends on accurate land WP altitude
		b7d8d77c0f3b68430e9683316c41b0d9df4abd7d position_estimator_inav: if flow is inaccurate, but used for correction with less weight
		9d1027162fb5cf32a6ff22d0d52a5a37a780322c position_estimator_inav: use flow even if it's not accurate if GPS is not available to prevent estimation suspending when no GPS available
		ea0aa49b546476ef9ca9904b32dc507d66f0ab44 pwm info provides more information, some fixes for setting rate/min/max/disarmed
		55f7c561efde3af1fcf562f71391a94711480988 Merge pull request #442 from PX4/px4io_rate_fix
		378041ad31794109b2673adab8102faf6806bd96 px4io: make "too high rate" warning consistent with real behavor
		19fdaf2009d41885923b586432cb2506a24ca5b3 Use the generic device::SPI locking strategy.
		e301bb4d9425bbe460384afcc029dac6fa63f3e1 Reset baudrate after px4io update
		d28f5ac03fc9e73cf26c8afa1ed701ca5af0df08 Updated IO firmware upgrade strategy and locations
		d1fd1bbbf7c7fd6bc76137257d6ecb91e8b6f3d4 Fix timestamp on rates_sp
		8083efb60c97ffce5be8dcbf3956ab67cc17d729 Use gyro at correct rate
		3875df2fe07d33d00331efd02394201d684655c7 Workaround to get the HMC5883 default rate right
		658276e1cc5f4639fb09ff41a20b422e6ce33fe3 Add reset and samplerate ioctl to HMC5883 driver
		e5f1a7c2c3a67648829ec0dff5bf290dddc25847 Better transparency in IO mode display, fixes to commander arming, minimum publishing rate for arming
		63af0a80ee19a73a94a3b46bbddffe1b80610a3c multirotor_att_control: run rate controller only if vehicle_control_mode flag set, codestyle fixed
		083cc60acb8b602864d0727e09218eeeca5eb980 Increased logging to 200 Hz in F330 startup for v2, allowed to set up to 333 Hz update rate in IO driver for v2 link
		a2f923b9a3bf403e3a9fcee39d87c7aecc28559d Increased MPU6K poll and sampling rate to 1 KHz
		c2ee4437e0fd362ed8d73203394d34802e9eb48d Rate limit sensors, as the in-sensor lowpass allows us to operate at 200-250 Hz
		36cca7a31b428408eb686df592f092ba5fc24006 Added rate limit in sensors app. Just pending accel filters now
		a9c1882ea01aa0cf00448bc874c97087853bb13c l3gd20: fixed bit definitions for filter rates
		68ab69de010adbe37b37558824ca013ecd0d569a moved commander to C++, preparation for better gyro scale calibration respecting the current attitude for more accurate results
		f4df4a4e081d9eaaa5dbeef013fa6320b0cea3f7 Forgot to add current samplerate to constructor
		0ccf50bca367d39f75a7a4f76f98dec7352ef3d5 ubx: SVINFO parsing optimized and message rate increased, CPU consumption reduced in 6 times, ~0.3% now.
		04fbed493aab1dede6c2200aaab2b990d24a66e7 multirotor_pos_control: use separate PID controllers for position and velocity
		d63730419b7a8ea8696f7518bf24baff149b18a3 Merge branch 'mpu6000_set_sample_rate' of https://github.com/fibr/Firmware into mpu_rate
		88389ea2554c6f56a4fdd86cdd86a1e7b6affc21 Merge branch 'master' into new_state_machine compiling again Conflicts: 	src/modules/fixedwing_att_control/fixedwing_att_control_att.c 	src/modules/fixedwing_att_control/fixedwing_att_control_rate.c 	src/modules/fixedwing_pos_control/fixedwing_pos_control_main.c 	src/modules/mavlink/orb_listener.c 	src/modules/multirotor_att_control/multirotor_attitude_control.c 	src/modules/multirotor_att_control/multirotor_rate_control.c 	src/modules/systemlib/pid/pid.c 	src/modules/systemlib/pid/pid.h 	src/modules/uORB/objects_common.cpp
		1f7f7862ceee827c1c3a6087defb8cb52db3f4c9 Fix the USART6 default baudrate to match the IO bootloader.
		be6ad7af3b65841d2b460e3064c166dc9167401f Rework the FMU<->IO connection to use a simple fixed-size DMA packet; this should let us reduce overall latency and bump the bitrate up.
		dec1fdbde0c7bb6f3eacae97ab9656f77294cbfc Cleanup: remove useless angular rates from attitude rate controller
		3bfc4ed5174c60de7eb98efbbf3c7729fcaa231e Att rate PID fix
		ece93ab62834be7f46501b1d31733cf58b5b1188 Added integral reset for rate controller
		c1049483a82857bebb012607578add9492446321 Added integral reset for rate controller
		8d6cc86b4f37773c9c4db77b9666fa2a075c1871 Cherry-picked commit e2ff60b0a6dbcd714d57e781d9fe174b110a6237: use rateacc values
		6f108e18d21b61ea6a3bf137f01023c594085494 Just include the rate controls for now
		2b9fa731efd08a01effd87a636ae8e53994944f7 Use the pid library in the rate controller and change de implementation of the D part
		95236c379a3b0a551f5ac26387356ecad0a82d60 sdlog2: ARSP (attitude rates setpoint) message added, attitude rates added to ATT message
		68b884ee6c0112b42c1f90b711892dd791696610 Merge pull request #292 from DrTon/ubx_msg_rate_fix
		1addb9f6c56f68f600acd4bdd609ef14697bda44 Fixed bug in UBX::configure_message_rate()
		496127ca459c603e5de3f8bc83c6113bcf9cbead mpu6000 driver support for setting rate
		b614d2f1eb3b3ddd26fa22a1a0761a5aef52c1a8 adlog2: added options cleanup, updates rate limit added
		f5e405ef5b06f4bf26cf3758d962aa7884a7d94c sdlog2_dump.py now generates customizible CSV output, messages/fields filter added.
		3ec536a876a66f4e56549957e81ed4547c92a0c3 Improved GPS update rate calculation
		27a25b5e172c972e4f9f31c2a30114498346bb08 Improved update rate for velocity estimate, not yet where we want it to be
		3466006735123bfd27c94538d98af5b79f47d5a0 GPS velocity update rate validation for u-blox, WIP
		421253e6db6c5e716c84ac505a8caef679ea97ee px4io: allow set of output rates above 400 and below 50
		1d327c42a6f34f8545940cd8630586726e4d3ae6 Mag sample rate was not actually changed by an ioctl
		eb3d6f228cd96ef2a2b8a33f667dd1cdc2d5fdc5 Added some functions for changing rates etc (WIP)
		60eca61e41bbae8fdcb6f92ecdc130a49e49fd29 HOTFIX: Adjust the FMU update rate adaption logic to avoid constant debug message spew when not in a PWM mode.
		26d45d5e3484ec616238b34be3fa9739d8e30efb Silence MS5611 driver, the perf command still captures the error count / rate. Unfortunately this is necessary as general users are concerned about something that is (at a reasonable rate) not actual safety critical.
		1ae4edab220e93405cd99f105648c4a8f948b41f Merge pull request #224 from PX4/pwm-multirate
		7e4d6133aed20d2724917dc570e4926b18df2b84 Make communication rate between IO and FMU configurable
		688ec090e811ffa5df0a704767f5eb70c635913e Moved trim for fixed wing to standard trim values, can now be calibrated via RC
		7011fe563b583d7940247a7a01265b7f8675fee8 Move PWM rate configuration, etc. into a separate utility and out of the individual drivers.
		57429fd12cc4277c88948c1819b245d9e83523d2 Convert HIL and FMU drivers to the new multirate PWM interface.
		6cf0758b24de1e0e28e1bb65fa33a0b49b1601b9 Changes for multi-rate PWM output; default and alternate rates. ioctl protocol, PX4IO support.
		dc74eeb421bce204a3064bcc60d524bf3fb53ab2 Report the control values from the FMU in the status output. Count them separately from the actuators.
		3494039d9000d211c122d73d5e7ac9cf9109dddb Get a bit fancier with the builtin app specifications, so that we can generate them from apps as well as the config.
		abe48bd7149fee4d18d709e7325cc70ca7230cb8 Auto-generate builtin command prototypes. Tidy up path configuration, etc.
		e9f2197bfa40522d6a58e01888dada4531d9dbcf Move upload functionality out into a separate makefile.
		e692ccc44ec017f79c74a9bab619019007e27cfe Move more functionality into firmware.mk. Now we build the px4 bundles in a way that will let external builders generate them too.
		b80575fcff926fb819adeb1760632586c19cf719 Break up the firmware build into a 'make export' phase for NuttX on a per-board basis, and then a separate per-config phase that allows us to avoid re-building NuttX all the time, and ship more than one firmware config for a given board.
		0eca49a4f6d4a06868770c8b0c36094d889cb846 Checkpoint: Separated all bools in vehicle status into conditions and flags, they should be protected
		cb0fd834ae15c45cf6993f8c9eea9c99b2b153dd Minor polishing, fixed rate and last measurement indication
		12f4cb2dc38303b58750a8f3b120738a291ac8d1 Tuned GPS update rates
		52ff9b7d433fed007a62fe2de375f685aa1b6b8a Use multi-part transactions rather than separate transfers to avoid racing between the ioctl and thread-side interfaces.
		5fe376c7b9bed861768680089bff3c62a030e2b6 Correctness fixes from Tridge.; increased the minimum poll rate to 50Hz, don't set the input RC timestamp unless we get data.
		f14c90c2220fffc51bc6e6e89bac6f9e726ff505 Some timeout needed to be raised for now to make ubx with baudrate 9600 working
		afb69cd05450d6df1bf2233b95030c9b93daaf1e Reducing pos/att correction update rates for debugging.
		28ef7aa1bea97593637537c832b07459a2520b86 Refactored RPos. Increased global pos output rate for debugging.
		5b07efdbeb8b6c6e7c3e5a86a2e55a2de345b579 Automatically generate depdencies for source files as they are compiled, rather than using the NuttX dependency generator tool.
		3bb145f584298de3ac636be38be25d4b1235a8be Enabled and tested ring buffer, logging at full 250 Hz sensor rate
		faced6bfe3826a4fdcfcd72171edbb501226814a Merge James's controllib bits into a separate library module.
		4447282260be0780eb6e36f5e953bf56888a5688 Integrate the interesting parts of the CMSIS 3.01 (r3p1) DSP library
		94fa60fa04d97ba35bee584dd823997588510563 Merge pull request #132 from PX4/#111-px4io-integrated-mixing
		9df2aaf3128a14c49d5f82e624174fc55ff3da0c Merge branch 'master' into #111-px4io-integrated-mixing
		0134186420273170c14b80b8114ccd2474da1792 fixup rate
		219ab05a707d8f2795dc91f5884a42f20dd6a640 added PWM_SERVO_SET_UPDATE_RATE ioctl
		1b82dbb58db9b7a279841714fe64c7830f71e290 Merge branch '#111-px4io-integrated-mixing' of github.com:PX4/Firmware into fixedwing_io_mixing
		36d556256f1ec8a9991d4a76df2833149fd9f02f Merge branch '#111-px4io-integrated-mixing' into fixedwing_io_mixing
		61d7e1d28552ddd7652b1d1b888c51a2eae78967 Reverted changes to multirotor rate controller, changing to a discrete derivative does not help
		c08135ffefcb171fd518e210b88e7e993361fd81 Merged rates setpoints
		56a650461894d8ab541277010e93fd5ca75f9f0d Incorporate address environment interfaces in binfmt/ logic
		fe4bf6f555a1a453c16a7c671cef3625902d2991 Integrate PATH traversal logic and binary format logic
		f81d00594c156c51ab976d3b6d101915377d7afa Made PX4IO FMU timeout based on IOs HRT, updating mixers now on every FMU update and not at fixed rate, this is WIP and currently does not support mixing with RC-only
		03076a72ca75917cf62d7889c6c6d0de36866b04 Added required additional fields: If system is ok to launch (required for LED indicator), if system is ok to override fully by RC (required for multirotors which should not support this), desired PWM output rate in Hz (again required for some multirotors).
		1485a4ec1aa8328cc50d99a1195b20df2b11045e Fix breakage to the DSM parser introduced with the input prioritisation logic.  Back out to a "any input wins" strategy; connecting multiple receivers to I/O at the same time is currently not supported (read: strange things will happen).
		9fa794a8faa2d30023d9943beae55a05ed4e48a0 Rework the PX4IO software architecture:  - Use a separate thread for handing R/C inputs and outputs.  - Remove all PX4IO R/C receiver configuration; it's all automatic now.  - Rework the main loop, dedicate it to PX4FMU communications after startup.  - Fix several issues in the px4io driver that would cause a crash if PX4IO was not responding.
		7d485c117b8930ca0e6c4bcb71199e3ccc8dfeb9 Merge branch 'rates_setpoint' into fixedwing_outdoor
		98657b8ae41dff36839f2022011b672b012a63f9 Added rates setpoints as system outputs
		13000a71212076a515043fb7ca89ce77cf6c36b4 Yaw rate sanity checking for controller
		f0e39397fe5d9b301ad887ad430736397f6403fd fw control: work in progress, heading rate control loop
		722af669fea5dcb6719438326f8272cbb8ca69ee Better integrate calibration check
		ccc5929f33e2867f61fbca1ccf3e04840e9166c1 Fix some mkdeps.c issues; Incorporate mkdeps.c build in Makefiles
		3bf4cd0abd093be0b3f2bac724aa952dc1b1bb60 Generated libraries are now installed in a new lib/ directory
		e7f2c053c241849e3ea035fcd22a0e29945b3415 Quickly separated low-level raw RC from mapped / scaled RC, supports FMU PPM and IO PPM / Spektrum now
		ec43e7b7be69e4445c08ff8821de700e449a8f70 Increased output rates at 115200 baud
		0e190d4cf7f3d151592414d8bc3d3eaf77e0b0e8 lib/math files not follow coding standard; float, double, and long double versions in separate files to reduce size of dumb link
		5135e5308b5689794b0497ed6be103d1bc332b7b Hoist the GPIO driver out and integrate it with the px4fmu driver.  Move these pieces into the drivers tree.
		1065118ebc963dbed75da5c7093b1863f0e099a6 Separate config from implementation for the STM32 pwm servo driver.
		3f240a70baac2435cbd543e305ea0c57cb65e7a4 mavlink cleanup, drop rate estimation is finally correct
		ab447ac713b010c090d6e2de85fa5d0d0af5cbbe [work in progess]roll attitude and roll rate loop works
		42c61271ea73be29a21110980764d1a68f8ee530 remove bogus dt from att rate
		d3ae83cb2283591e56ad2999271f7bbd6c756a0d Merge branch 'daregger_rate_control' of github.com:PX4/Firmware into calibration
		6a48b91beae575ad4684151f08c75b079caffe5c Lowering default rates at 57600
		b50bc7798ac463de3e0c3147df46a3f7227df8c3 Wip on inner rate loop
		4dbf7befe369ba00a73945a0193f0a061c271dc3 Disable rate control, disable offset estimation
		bd3f3b10317f58d20f635f4a3e6aee8fca8d9d2b Sensor rate and throttle inversion fixes
		dd50c88f073926a550f0f1f5b08f931116dd4f8f Fixed GPS lost issue, fixed accel scale initialization, fixed code style in rate controller
		4fea0a3fc15346efc366aadf1d80697664b6f3f0 This commit changes the inner loop control structures for fixed wing attitude control.  Nested rate and angle loops are used with limits on both the rate setpoint
		2a06b66845542b05e3cad3d21099e33adc213227 Fixed inner yaw rate loop
		733975ed2d7b5906e35dbdebad52ee8fa9d92fd6 fixed Rate controller
		f3cb2cf8a3b3e002e665c82588e98e502ec3e285 rate controller update
		beca2b072e45fc91ba6c315919abd26ee6814863 Moved from raw gyro to estimated angular rate from EKF for rate control
		5895a2e96619a0c35a4c2383898582bde0ffdb6e Updated update / telemetry rates, updated covariance
		1725069c188fddce7e22026ca77edd5ea980b54a Merge branch 'update_rate' of https://github.com/sjwilks/Firmware into ardrone
		4933d1dbbd8146ec548168fb9b855009107078ca Only provide update rate mod support to modes supporting 4 PWM channels
		7a5ac6892e68c14b77ba6e3db3fd7e0b9f1c79c6 Support custom PWM update rates
		7f153098926bf977609c6efb53fa7cb5093564af Calibration should not freeze anymore, ardrone flying but estimator is not able to use calibrated magnetometer data
		ec3949bf82dbaa50ea866b65cd0fc4630af18001 Fix a bug where the rate controller is always active
		201fdbc42c46bc9146a8cbf2434a98792d6d9f50 ardrone flying now (still workaround of disabled rates controller)
		abbe998506e4ba49bbf6a9a9ae731b1eec521db6 ardrone in the air again (workaround: rate controller disabled)
		37163011fc752e40ee712d4c945c8393538f2708 Use the update rate parameter provided and not the default.
		705172d302b99df7ec3c4172c247c6136adbec88 Untested, but fully implemented attitude and/or inner rate control
		b0b72b11eb6c112d3fb58385f5681af55dd5605a Reworking control infrastructure for inner rate loop, preparing offboard interface
		561bea65a2032c2c510a6dd5e118924f21b3d86e Ignore a turd that the kconfig stuff generates
		3a18a79bd5661307eb4c32834e2daf84ccf02a07 Better log rate balancing
		5dd6cbcb13f4fa3b3490ac8bccb7d1c5cbbc625c Logging rate changes,
		1538247a72f37a2f969aa5c41f7a07da4ae31d35 Sensor sending rate fixes
		eb8e3a2942abbed63bcb3c6336f20bb247f0c6e6 Reduce slightly the rate at which we can be spammed with arming-state change messages.
		b2db45bee3c6915346fb7be8dba064708955549e Separate CVS parsing logic from tools/mksyscall.c; Create tools/mksymtab.c to create symbol tables from CSV files
		ee6cba7a0102a6c26ee1143bc103fe8c99577520 Add lib.csv that may be used to generate C library symbol tables
		cd886ccff11e205ce61ef79e95da5953583ffc8a docu diagrams: removed old inter app communication, updated state machine (is now also in a separate file)
		aaf2a23f18eb802c9fea1e45199106eefbab59f3 Reduced optimistic send rates, better mag scaling
		767f253976746a5533dd1a258373368539b4359e Fixed attitude rate limiting
		dc484c1d21fcb7bc4f4be97853647321e8a147e1 State machine cleanup, introduced variable rates for MAVLink depending on the baud rate
		92a1fab0fd9e95737258c30fc423e839652edb72 Integrated optical flow
		cd3a49c3a2ef24987452f3e65038dcf67c037e5a This file is automatically generated and should not be checked in.
		aa8c93baab849f47c8552e3679ab0abb858fd488 Extend the NSH mount command so that it will enumerate mountpoints if no arguments are provided
		4c2b6c49c91abfb10f554dcf219e01e7a88884fb FreeModBus is now integrated with the Nuttx configuration system
		876ffbd29fcd090094da7be50a9b2f26bb1bab02 Calibrate lpc4330-xplorer delay loops
		db2bfa3e69fee84003a2fe13632c21046a1dc5b4 NxWM: Calibration is now done on a separate thread; Change mechanism for reporting calibration data; add method to determine if the application is full-screen
		7cc9218389c6b2b214759675418629510c1544a9 Integrate the STMPE11 driver into the STM3240G-EVAL board logic
		a16ee47f0e0c64da88b21ad1baadd08f79193af6 Incoporate (more) new ARMv7-M exception handling logic contributed by Mike Smith
		6c02000ba47f08484280da61fb8d384a59eb5c2a Incoporate new ARMv7-M exception handling logic contributed by Mike Smith
		ae529b8648831d3e18679a78689d1ea1890fed94 Incorporate Z80 bugfixes reported by Phillip Klaus Krause
		7de5004f475fe6234e7d4452bdd95d5f527fea8d Add logic to control CAN bit rate via the .config file
		8953e3a370efeb12110d7bf4f6b9b69bb031aa3b Calibrated all PIC32 delay loops
Results: x/1128

speed			7
		76615f8df3760a7e64746b767835a02cb0af9aa9 VTOL: set HTE horizontal speed sensitivity threshold low
		904ed57abaf0d989711e22e968d0b0a0739b53de HTE: decrease sensitivity with speed
		2b80a6958a1b69f647bd52fc662cb2343acd6bc4 fix disable airspeed check with negative ASPD_FS_INTEG (#18186)
		5b70fd4a1d409d3a35fa7247d7563ddb0b9a4046 airspeed_selector: switch to events
		e6166dfc767d04d0037c35a9591ec9c33c92896b AirspeedSelector: Improve wording of sensor failure message
		6f6d3f98a646c5d3df72d2a17f769faebec8c807 wind_estimator: move from ecl and consolidate airspeed selector
		9c0a52d52a411b983b1835ea2675367678b5169c delay time: potentially reduce delay time if baro/aux velocity/airspeed is not used
		155d3c7d367fced2830ff57031e346c2faa037c8 FW pos control: fix airspeed input constaining
		b06b46b2245784280496e95e8c38a857f70039ed log raw airspeed derivative, pitch setpoint and airspeed innovation for TECS
		4b42a1639b164b66f5766274671e92ce25aad9c5 TECS: in airspeed-less mode, set airspeed estimate to cruise airspeed
		71fc1b81612fa9b5184d5abb93b69d109e9d0e4b airspeed fusion: use yaw from 312 sequence when pitch is close to 90deg
		b7e563bdbeec1a22ea983badb6c3b47b7e1736d9 Airspeed selector: fix in_air_fixed_wing condition
		596da5b7d33673f3e7b646b97cebae62b0647837 Airspeed selector: use module params for FW_AIRSPD_STALL
		c8ec6b3d08a8fc6f4ed94b8e7157920761dfb91a Airspeed selector: remove ASPD_STALL and replace by FW_AIRSPD_STALL
		d3fd03a0149b3ca2ae071dd7b2c4e9076696d0b4 airspeed calibration: instruct to blow into front of pitot
		f16913c175c6c9ed192f7246ad62f535ad472631 mavsdk_tests: fix timeout at 1x speed
		8400f2c9bc8c5c545e27fe59f7cd689d4fb1a62b FW attitude controller: add protection against division by zero in airspeed scaling
		b66ae5f2d4269ff9ddf24e68bda69401579b5ae0 tecs: use raw inertial acceleration for true airspeed complementary filter
		eca4d90a91caa81cf7c50c9a23fc60717b6e1f59 init.d-posix: adjust COM_OBC_LOSS_T when using PX4_SIM_SPEED_FACTOR
		a12442654138c88c796f9a655907f78fc258d04d ecl: apply same GNSS speed accuracy for EKF2 and yaw estimator
		c8c3f57ba158093f36ffadc3b5df1d16971f4916 mc_pos_control_params: correct cruise speed description
		c904767f1d7f9b3d76fce91a846eedceeac117da Always start airspeed This ensures we get readings in the log and in the telemetry even if the sensor is disabled.
		e53e001de1ff6e96093b71f4cea2a347dc086b6f Airspeed Selector: do not run checks during landing
		440e72e69717e5ceb03d2da414710097dcd11d68 boards: cuav nora/x7pro don't have low speed external (LSE) oscillator
		82200fab9e19d80b3182452048de6e29e87546e1 mavsdk_tests: relax MC "Fly straight" speed threshold
		c1de27acf74503c2f2987635781d3f0d4632b939 mavsdk_tests: use more conservative speed_factor
		c524e61b973f6de96fe93edb2a3aee90c5db488f airspeed_selector: fix timeout check
		77884bdd340c86b7a62cac15b7df9a097feefcfd SITL boat: tune L1 and speed controllers (#16784)
		92f2043d8ba1320ff185bdb13274332b649a0ffa TECS: add EAS_sp to tecs_status.msg and rename other airspeeds to TAS
		4922659ef4c890e3c307c46092e62a774b8180bb FW Position controller: specify in params that the airspeed setpoints are for calibrated airspeed
		da7f6d06f3ffd56fae39dbfe5d939be7f8334f5f AirspeedSelector: set default of ASPD_DO_CHECKS to 1 and ASPD_FS_INTEG to 5.
		28f9214e5606a4985e12e78cac084f5f6b7ebeae AirspeedSelector: parameter clean up and disable re-enabling if clear delay negative
		98d057b8c9ad031c9a0557f9db386abc5df904ae AirspeedValidator: change logic for innovation checks
		0c2099e788b9442ac7700b505c21e44d3204afe6 AirspeedSelector: improve messaging on airspeed sensor switches
		aecc0aa0c3acd839ec7063bd275ec43592fca982 AirspeedSelector: do checks for data stopped in airspeed selector, not validator
		7132e674d68f8ea4cb390a9a4e42493dee3c22eb AirspeedValidator: Simplify data missing check
		083cd6f1c1504ade28de6c0eab51e90f547f7bae AirspeedValidator: remove unnecessary _checks_failing
		37a49dbb6a6eafdb18bf388b9dcb0c4d87228ee7 AirspeedValidator: improve readability
		061fb9ac07cf57f59be220cdf3a6e16055976887 AirspeedSelector: add const
		cd2c366e221e7cb5784f1047579bff48a0c46187 AirspeedSelector: remove unnecessary reboot required and Experimental comments in params
		11dbc7e17f2292fbdd16863ee95d1a4938130a45 AirspeedSelector: improve description of ASPD_FALLBACK_GW
		0f1207dd7eb1cb1f384dcb8916590964de158463 AirspeedSelector: improve readability
		cee401666598b54e268d65a79a51fa7841ceba49 Preflight checks: Airspeed checks update
		f05599caffea1690a4f5b5f3b2645463da8742a3 tecs: use speed derivative provided by local position
		fa559aef43c579b33ba11c29de1592726dc36e2b TECS: stop learing integrator if airspeed is not available, but don't zero it
		77627a08ca43c33597f76dc04fe2131215a8e7f1 TECS: don't allow speed height weights to be larger than one
		64ed96bd953e6456a793243c05b47c6b2a6986a1 ekf2: Correct airspeed used by EKF for calibration errors
		c65cf13bb8614b284d5c237cde284ee640a13c36 EKF; Treat combined sideslip and airspeed as a horizontal aiding source
		1e6976234fd89d21fd468ccc424e98c576ed75ac Remove reset_offb_cruising_speed(). Make more explicit that this PR only affects offboard mode.
		9cc9e4f89f43fc6ca3021f0eba73a64490f55835 Handle MAV_CMD_DO_CHANGE_SPEED command for FW Offboard global position control.
		fd18ba649678a8aa5f1b871b2f6b3d770c1d87d3 tiltrotor: allow to finish transition if groundspeed is below cruise speed
		842d98d57297cf7020ec0cba44cd1eb7b95b5d32 AirspeedValidator: fuse true airspeed before sideslip (#742)
		6d255df0a80d421dd01567818833e367d603f28f airspeed selector: disable beta fusion when not in fixed-wing mode
		25c113a5273ab315c511773b23ef81e2a93f0026 StickAccelerationXY: boost low speed brake
		5382d3b8fb75f6218b293051e19c4f1cf3489c04 rc.VTOL_defaults: enable wind estimation in EKF by default and remove MPC_LAND_SPEED being, as it's just set to param default
		651e292d42b64e8d6ab1abd62288b62735b403ea ekf2: move AirspeedSample update to UpdateAirspeedSample()
		5dd14dfd544b0000c08d4d90848a3daaec542863 FW Position Control: re-add wrongly removed airspeed_poll()
		8f858d95e6b4f1e6df57716b5b45fcf89be76d8f Rename equivalent airspeed (EAS) to calibrated airspeed (CAS)
		f8d5b09b5666ad5ffdbf411eddbe5a21453cc938 airspeed: remove duplicated comments from cpp (they should only be in header)
		fe6a1ce88242b99335e88a6d4c5880703b8ae329 simulator: fix airspeed temperature
		1eaceb17dc538e930253e87ffcbdb1dd37f19233 mavsdk_tests: adjust timeouts by lockstep speed up
		26bac78eaf274cf58aacbc239cc8f2e865ba864c mixers: Multirotor remove text roll, pitch, yaw scaling and idle speed
		06aa78a291e478cb6613267bfa34db0f7d1acadf EKF: Only record airspeed fusion event when states are updated
		486a461a5eb0a3a69576cb3a87be389036ecc03f EKF: airspeed fusion derivation test comparison cleanup
		ede6204f856789519400cb514cc5ffab8b34b5b9 EKF: airspeed fusion cleanup
		a5a43dbc6c6e1cb12d2a117cebf20da702ef95ec EKF: Convert airspeed fusion to use SymPy generated auto-code
		91c0f19121d9dbb80fa284483f4b1f4f79fc7e55 FlightTaskAuto: use new Sticks class for assisted land speed
		6dad4a33591b21a5c69557c28f9f0e2814ef0c54 SITL VTOL tiltrotor disable airspeed
		1efc8c27ebfc8c8414153746c99ea7e118c4e9ca FlightTaskAuto: check yawspeed saturation before constraining
		7a401e5ca3c87b214b04aa95b474337706e6564e FlightTaskAuto: Create artificial yaw speed sp for feedforward
		dd95498379a41045e2b4aa112f2bf4b64563d994 mavsdk_tests: at normal speed RTL can take a while
		7f213648446bf32f86d3813a8ff80795a894157c EKF: use initial wind uncertainty with no airspeed sensor (#823)
		4f82f028e7b7afed43e3900b41afa294149def92 airspeed_calibration: Fix FD leak
		45ebbb895a40eb8c5970edeed6df897316bf6036 Airspeed Selector: do not run it within the first 2s after system boot
		5bd0df422d45c27413912bdb5572b7afbf38bdba Speed up mavsdk sitl tests
		af1a445031f9b3fd5c924944aa9a29dcc0f2e144 Vision test can be speed up
		bcce75e691657e7da06ff1bf88fc878eb026c92b icm20948+mpu9250: add support to configure the high bus speed
		7c533e5a535e48b460dda1a4f148b830155f3e06 commander: Clarify airspeed calibration failure warning msg
		c61cd10db51b3abb6941c80fb85c608dabdb40bb mavsdk_tests: without speedup the VTOL takes time
		ae2032d29ff1929f7d8b52983cbeef10e121ec89 mavsdk_tests: use the min of the speed factors
		b7e8837562174c067a9183b35e2e6bb452fd10ab mavsdk_tests: add max speed factor
		152427ecdcabe4ff87a4ec358a00710130e3898a Ability to disable airspeed scaling (#14334)
		dad9c154a3cc475ca0a5fca04886a8ff9a29b7a5 VTOL Land Detector: move to airspeed_validated
		c80593a144712570f9926f3b6b162d103f381847 FlightTaskManualAltitude: Rename _min_speed_down -> _max_speed_down as it is the maximum allowed downward speed
		230d7f2558a00aa8e4baa9d174de984c9d4cf426 Update EKF airspeed interface
		856961ba8525d32b4a4890a473f02c58c987efda Update airspeed interface
		5b02310f439a64e1dae39dab12b2e91c21d6fd70 Test Airspeed fusion
		7ed6a437c75da9b2157549866c2536fb0cf53bb1 Add airspeed sensor to sensor_simulator
		093a982f49c9d6e50e76025faedd02c89976725d Reduce speed factor in SITL CI tests
		57f3be3a6959bbf98e7184ea676f09312956d9e8 fix bug if speed reach minium during ramp
		7bb952baeddcb83ac0238955dd805624ef07d7e6 update airspeed usage to airspeed_validated (#13710)
		ce9aa119ffb1d5355a90f338b37fb321501a3992 mavsdk_tests: option for speed factor
		2bbe4dac256a3f88adbe6c72aba2208e68cbdeea mavsdk_tests: run test runner, speed up sim
		5f670754813932eac63f86122245cc5f60abca68 mavsdk_tests: raise timeout for realtime sim speed
		acd18adc18ecae9d3363b13be425d062d2a71186 Tests: Speed up boot The previous boot configuration took at minimum one second to boot. This is in particular significant in tests when the system is often started and stopped
		83e51ad1921d9ce61d307f311f1cf536ca8517c5 PositionControl: remove speed_xy constraint since it's anyways unused
		82b4e766a553feee5a9253b5d24a267840948243 AutoMapper2: re-introduce gradual vertical speed limitation during landing between alt1 and alt2
		4ba672a7ba0d2501af7e13181e6ca1cc23a6a955 ManualPosition: Limit horizontal speed during landing
		e2a2654628e7c61aa49fd6c8f219cae28ce625cc level calibration: speedup & check for motion
		4a28c8180b3f0249efc706f712b9ed41ca4f7dec FlightTaskManualAltitude: yawspeed filter remove line with no effect, comments
		cd2b5e7479902eda91b1a7327f1314e28ad5ad12 FlightTaskManualAltitude: Use dedicated member variable for yawspeed filter state insted of using the previous setpoint
		3f92bc26cefb0d59dfc028b0cfd20bff711a0861 airspeed_selector: fix airspeed subscription
		ebdc29bc5f8aed084e524fc7cb33b517f6949a37 Airspeed Selector: enable airspeed_validated in control modules (#12887)
		ff6577ce5f9d98697da56fc5cc3724e95dd7fac6 EKF and AirspeedSelector: publish multiple wind estimate topic instances and log them all
		ac6ee972d350b94dfbcab5266b6018b5e2d29e10 airspeed_validated: move it out of the alias space
		4eb9c7d812c8ac78a6609057466135f47798e8c8 Create TrajMath library and move waypoint speed calculations in it
		b1698b78bc58ea03057f886fe368044ed5cfacc5 AutoSmoothVel - scale down acc_hor using traj_p parameter in the computation of the maximum waypoint entrance speed
		255c911155d15ea0ebf6fef2eb644cd2d2c2825f AutoSmoothVel - Compute desired speed at target based on angle between previous-current and current-next waypoints Also remove crosstrack P controller that produces overshoots when the acceptance radius is large (crosstrack error is suddenly large at waypoint switch).
		07895cd3b6dc7fe2d02b6a1c92a83478fcbf6c73 Airspeed Selector: resolve conflics for wind estimate topic publishing after rebase
		d129fcccd5a3d1ad4a286a60dc757cd44fd9726a Omnibus: take out local_position_estimator from build as was out of flash after ecl update for airspeed selection module
		5bc69797962a84030e293b5d92cc2d01ba51a886 AirspeedSelector: added RTPS ID for airspeed_validated message
		cedf14e2ba453f0eee12da0dcf75bd2fa23cb049 Airspeed Selector: repurpose wind estimator into an airspeed (selection, validation) module.
		970e362e9a5de056ca165ee56f081ea86f9b71ac Increased stack of lp work queue as with new airspeed modudle it was getting low
		50dc8aee7a876248463ba025c227c70eb7a4c68e Airspeed Selector: added airspeed validator class
		248e1818e29028802e1c6e94e7bc8e11d118fd7a Airspeed Selector: changes in airspeed library to account for new EAS state (equivalent airspeed)
		62fa464e4dd6cb5e585d23bd353aa50a469879f7 WindEstimator: added support for pre-set airspeed scale factor
		09f29dbb07aa1dc74540f4c4608f505ae0268bbe added option to fix airspeed scaling to 1
		e43e37cc46ef74da0fa86bfe2a9b470c9c472467 fw_pos_control_l1 add new simple min groundspeed
		834ae3128f62c8111a3f898bfb3e44617b79d063 Implemented reading speed from the Roboclaw
		15ec73629bad9087a3ae52dd95dae87966eb2701 MPC auto - Add MPC_YAW_MODE: towards waypoint (yaw first) mode. This mode ensures that the vehicle yaws towards the next waypoint before accelerating. This is required for drones with front vision and aerodynamic multicopters such as standard vtol planes or highspeed multirotors.
		6df16003570645779f151ab38f368d3da18e0710 Auto - Update velocity setpoint generator to avoid overshoot at high cruise speed. The linear mapping from position error to cruise velocity is changed by a combination of that linear mapping and a nonlinear function containing the maximum acceleration and jerk to avoid overshoots at waypoints due to overoptimistic breaking distance.
		59c555aec36aa5b1c1edac8d0d09fb90a36a3722 Multicopter Auto: Adjustable land speed via RC (#12220)
		e54075abe886c555315243773a99febdef95a23b MC pos control - Force cruise and manual speeds below max speed. (#12404)
		d139bc5a7c7394038260cb553a3eb12040c9be0c Use bc to support floating point PX4_SIM_SPEED_FACTOR
		423219c60ed2a9e4f97484634e2e4f4adc218d5b pga460: Change variable initialization to uniform initialization style, format whitespace, and change baud rate unsigned to speed_t type. (#11861)
		46c00ca6a44faa542de2cacb176ca1121477cafb vscode: add PX4_SIM_SPEED_FACTOR
		e1671571c8384235a486d6bedace8c95346317e2 jMAVSim: use PX4_SIM_SPEED_FACTOR, not cli arg
		3d22da9cbe91b5b9a51a304f6511c8cd9004f4ba wind_estimator fix true airspeed usage
		9bad61b86b7476967f7e67e18e93c1c093a0c91e Improve robustness to bad and lost airspeed data (#11846)
		4ef59e0a59359c0de6c7609c679773ee73948c9c standard_vtol: transition at airspeed of 16 m/s
		42d0522cddf191c66a14f7e9d7661f9c95a64be6 FixedWingAttitudeControl: removed check for negative airspeed and slew rate on airspeed scaling
		36aeb9defc1a4059e9a7ff7c508649b8c4f95c7d WIP: FW attitude control limit airspeed scaling changes per iteration
		93d52581eff90ccac88b7c8d06f45f48c5e05fa4 Auto - Fix cruise speed. Tested with and without SDK. Before that commit, the drone files at max speed instead of cruise speed if not precised by the SDK
		e88f1b33b2b81b4f886ecef0d5463508c82cfb2e FlightTasks: fix mission DO_CHANGE_SPEED
		dec96b0a3a516ed8a76ebaf0fc2db5227a1669bf revert FlightTasks: fix mission DO_CHANGE_SPEED
		5da57954332d7cc589280532dfd3c9493a71e78e commander: PreflightCheck replace all differential_pressure sensor checks with airspeed checks (#11722)
		a21242b0e351fbb5e1c5e7f0c88dee6fc79f9c60 FlightTasks: fix mission DO_CHANGE_SPEED
		8947cb5841acae5de58716b8933525851db975a9 FlightTaskAuto: removed non used _getMaxCruiseSpeed
		6bb0046407917326ab067a33af42fdd816079510 urtps: fix UART speed setting to work in Linux
		c0dab475547089ae997d6d0a91cf511808d56855 mc_pos_control - reduce smooth_velocity_takeoff default threshold, set initial takeoff speed to 0 and remove useless else
		4cace1bbe9e72f8138e00e565c86d6066c2541a8 Manual vel smooth - use speed_up and speed_down constraints to limit velocity target of the trajectory generator
		34717f7005675e8fea7def742def44eb9c24f19d Merge pull request #11288 from PX4/pr-tiltrotor_noairspeed_transition_check
		45d7165eb33301a68d106ffac50a1bc30b41f5b7 fw_pos_control_l1 skip wind > max airspeed logic if airspeed invalid
		a1fc44d1f03969614a22019ab61af61848a271d7 simulator: fix noise in airspeed
		23acb77e2d52121fc109dfd09852f74b801bad4c Tools: add PX4_SIM_SPEED_FACTOR as env variable
		db6de38b1969459a383b2f644c2d60fd32669f99 Work in progress to support a speed factor in SITL
		21bcc0d2f40d307c3c88009ff5a7f13e8dbbe93e mav_cmd_do_reposition now obeys the ground speed argument
		be4900f61d5f1f9ee24ed10e711150bbaa343dfa FlightTaskAutoMapper2: remove speed_at_target
		370371767f32de3d5ec46943be5100128e03b7ad FlightTaskAutoLine: ensure that desired speed along track does not exceed maximum speed at threshold to target
		deed462e621bb8a338e142b99befdb78f0c0d214 tiltrotor back-transition improvements: - do not set zero throttle during the entire back-transition because otherwise we need to make the back-transition really short - added ramping up of throttle setpoint during backtransition to avoid step inputs - back-transition ends after back-transition time and not when motors are fully rotated updwards. previously the vehicle would enter hover mode at high speed which was not handled well by the mc position controller
		85c2b6307c49571e2d37d669382ae55881c3a30a delete unused IOCTL AIRSPEEDIOCGSCALE
		52fc56a61f09bcba39d45a34c5e0e55f0a6fa8da gps: explicitly set SPI bus speed to 1MHz
		8714b216b0a074b487b72495016a67524d9a71af FlightTaskFailsafe: comments and land with land speed if velocity in z is valid but altitude not
		82ad7d77fa99493311736eebcfe1e245fd2537f7 airspeedsim move to cdev lib
		3f65efe1b01edcdb69ee5e049a886948659558df fxas21002c:Clean and speed up with SW, HW LPF.
		4c4f585ad568bb7db9bf631d87f7dcd508065060 Fixed-wing autoland: 1) The landing configuration (flaps, different airspeed) is now already set during the loiter down instead of at the start of the landing approach. This is done to avoid any mode changes (which can cause altitude/airspeed jumps) so close to the gorund. 2) A scaling factor for the TECS throttle time constant was added which allows tighter throttle control during the landing (i.e. close to the ground) than high up in the air
		2d9bbeb7ed439100e94a500929b2c6b02f67ce50 FlightTaskAuto: use the triplets from navigator and not with the internal ones for obstacle avoidance. Otherwise the vehicle is continuolsy in the offtrack state. Use already comnputed yaw and yaw speed setpoints instead of subscription
		2b6926fe9d7666697efe56d0ff445c630db54ce5 FlightTaskOrbit: speed up stick input to a fixed time frame
		2017e394b34c421d11c17f431c7d21a9354fa083 speed limitation during auto-takoff: remove from legacy and add to FlightTask
		5ef2a61be56dbc5b0b69db437b9c8633b36ded5a ManualSmoothingXY: ensure that maximum speed is correctly propagated to the smoothing class
		9df337e2437e94b9530fa92d272f3db7a47bdf6c FlightTaskManualPosition: adjust scale based on vehicle maximum allowed speed sent by estimator
		37bfd8e01a69d241c88e69328cc01a841f8209af FlightTaskAuto: always update cruise speed
		1fb8eaf6c645af00fb0d958f8788df2442eba827 mavlink_messages: add yawspeed to local position setpoint sent over mavlink
		558a0f892c3c7e767db9c50aa8f28cbbf1a34569 PositionControl: auto takeoff with constant speed
		50ae8c9c6f8e5d56e91d43604950ab97333a7e17 airspeed.msg update incorrect comments
		3b580514aea72e1d9c52cf3f459b8250ba094c04 delete unused airspeed.true_airspeed_unfiltered_m_s
		9a4de0932520fee1e073a5361855e30cd30ea3e4 sensors remove airspeed negative check
		05936f2ff7c0e77b01c6f970ac815dd8f90e48e5 px_uploader.py:Speed Improvments on Serial
		f3a7886fbf60ade09ca07178b88faa004a760982 trajectory_bezier: remove yaw_speed define
		59c7fc5d96f7b0cd887f13c06b7de55e285e2b64 mc_pos_control: use one method to wrap yaw speed instead of triplicate code
		47f2db67b64919d78a320cad00e9f053574de549 mc_pos_control: execute yaw or yaw speed of the obstacle avoidance waypoint
		29d1226c700271ca3c69b8a32cc3d62a921e1b2d px4fmu-v2 only enable ms4525, ms5525, sd3px airspeed sensors
		84f937a0980c8c57448a997db8be01dff1ae8913 airspeed sensor: use bus_option array from i2c.h instead of one in each driver
		325fe16178672257fe5df154a61c0ba516e4d0eb airspeed drivers: add PX4_I2C_BUS_ONBOARD as possible bus
		82b3e57abbdac5f5795d55a6f9dc83b6223562ed rc.sensors: look for airspeed sensors on all busses
		035f240e76144433c7a75fbe1ec9d7ed8774421c ets_airspeed: add -a flag to scan all i2c busses during start
		670c3cbf4e941ddca94583d944c6d8a771fb51e0 sdp3x_airspeed: add -a flag to scan all i2c busses during start
		fd675084ccd58f21d7e858ad91a00a12acdd4a00 ms5525_airspeed: add -a flag to scan all i2c busses during start
		cf816fe5560e4181ef6b4a307139c7243f3f0c73 ms4525_airspeed: remove i2c_bus parameter from start function (it tries all busses)
		5f3ea2f7ba458b7dee5b9214659e68fb542dff73 ms4525_airspeed: change start_bus from bool to int
		c231b6834d76817a6855bc4bfac709bdf467fe41 ms4525_airspeed: remove PX4_I2C_ALL
		fa35731e02ff54857dc3b0dfdf09765047494446 ms4525_airspeed: add -a flag to scan all i2c busses during start
		20aabd35665e53dedde67064e895127f004da914 move systemlib/airspeed to standalone lib
		61b4b2df886872a819a088b3cb7bcbefe9317a82 ets_airspeed: add argc check and use px4_getopt
		ac55a0de58c0884c3b70726aaf1f7d4889575c92 airspeed calibration log critical when ports are swapped
		35cb2d0a9e56428e5ea9c7116e9356d86aadede7 EKF2 fix airspeed orb_copy check
		79ff1436b89423f5d7e7f8b965c2f826bc8021b7 vtol_att_control: move handling of motor state and idle speed selection to VtolType class
		8f9e8a6282fa372e40f86c2f9470020e2df66847 FixedWingAttitudeControl: use trim airspeed if airspeed is disabled
		d6a86dfa56fc2d7ed566b0c065262acd1af91878 tailsitter: do not condition transition on airspeed if airspeed disabled
		4bf33339dc1b2b94b691adb5daccc2543d5af423 FlightTaskManualStabilized: remove double limit of yawspeed
		4f17fb1303823495ddfe6e504e70e827c43c31d1 ManualSmoothingXY: detect alignement based on body frame; do direction change only if not yawspeed is demanded
		975ac11635b513afffce533dce0f3dc1fa682b11 mc_pos_control: enable yawspeed execution for tasks
		9fdb3ace0cd7d8b37098a29b2614fbb5dd4c9f69 FlightTask: added setter for yawspeed and removed newlines in comments
		919d0d64838c38c1b9bc2841f1cdd0c86adf5dc5 msg: vehicle_local_position_setpoint: add yawspeed as a state you can control
		25300a6b11ae5d363b2eafe24718d44c454a859e VtolLandDetector add airspeed finite check
		fda2edb7c423a5db52f580ddf4160b80a6ab869a sensors only publish airspeed if finite
		cc26c34691db1e622cddac6d330679fe61467d37 airspeed driver: un-advertise differential pressure topic
		372a519ac419e6760abb6edc502dfa5465505906 wind estimator: added airspeed and sideslip gate sizes for innovation tests
		7c0f043116699ea469c42d10081403ca22bc638c added module which implements wind & airspeed scale factor estimator via work queue
		95c4777b355bf05b59b69cb97ae131a03cfec564 added airdata module which contains wind & airspeed scale estimator (#405)
		52e5e0df14c13343661403f53f9a7c0ee427babf fw_att_control: schedule trims for airspeed and flap deployment (#8937)
		dbdb2c9c22a59c7376204eca55e56e2a0f3ab27f px4-fmuv5: config fix stm32f7 max SD card speed
		03338935e0df471c01c25e9d360ba6257e264551 vtol_att_control: make sure blending airspeed is smaller than transition airspeed
		6900f97b72abb7816b2e0fec022bf039c0d9eea4 vtol_att_control: use airspeed_disabled flag instead of airspeed mode
		11e3081efd98b2fd714a2c0ca83ae57d7a950df4 ecl: Fixes bug preventing use of GPS reported speed accuracy (#8981)
		eed8b0085750dba4c267e6e91dfc816307ecfc7e mc_pos_control: Release estimator speed limit only when speed demand is significant
		642a4a5fc7afd913661c24b2394497917f5b53da mc_pos_control: respect estimator max speed and min height limits
		f016e66ff822e993c813899a3cce7e2bde342fd9 Revert "EKF: Release flow speed limit with altitude gained" (#382)
		ddf0ecfc3801b63f0849d5ba37a523746c53d8b4 Airspeed calibration: Ensure that the calibration state is stored correctly
		4445ffc70eb5990be1ef9f56f8dbc10aaccfe91d sensors don't store airspeed in class
		e70206f74bc4f77a0e000da3c923f4459006d2b1 EKF: Release flow speed limit with altitude gained
		a5cc4bcd08e8f3fec404528db9280b239a7289cc Update SDP3x Airspeed Correction (#8242)
		bb9f8c3b44f378cd1a00015dada69dbc27b24432 navigator set cruising speed/throttle for reposition (#8096)
		38f45d1a9dc89c78c6bbc3c9c6ee21f8f8d264e7 airspeed sensor startup improvements (#7903)
		7a5f58a607379b5abd9ea53b9e05ab7b16859f7a px4-same70xplained-v1 nsh:Optimize memset for speed
		96b4e5b512ceb203656316ced12cb3d38cbed15c zubaxgnss-v1 nsh:Optimize memset for speed
		17bf776af384f5c62efca3061cddb56c8b2e6110 tap-v1 nsh:Optimize memset for speed
		e53a06429cdaabf1ca51eb09fe038ac017a2b319 s2740vc-v1 nsh:Optimize memset for speed
		3f267a5cb2e927d8762c9593c9b6a204f41c3f50 px4nucleoF767ZI-v1 nsh:Optimize memset for speed
		c71e01bd44fea0907be18047cbf117bf75aeac6f px4fmu-v5 nsh:Optimize memset for speed
		e4f47d4faa84e97baee1db16fac2af413f4b06a2 px4fmu-v4pro nsh:Optimize memset for speed
		68679a3e8ec7bc3be03dffa07679c62493676aeb px4fmu-v4 nsh:Optimize memset for speed
		24446f0c88f5afbef1b7df9f2ad294360918de21 px4fmu-v3 nsh:Optimize memset for speed
		6955a4c0400005fbb5979a5c43a64e9e1bc85284 px4fmu-v2 nsh:Optimize memset for speed
		c760278d0fa6a718f0d6cef14772a1ee86bd56a1 px4esc-v1 nsh:Optimize memset for speed
		c7f3e84bf4086b1da1f85d413b5ffa676078d936 px4cannode-v1 nsh:Optimize memset for speed
		92411e7195b945c9b148df7ca09232d78bee5e16 px4-stm32f4discovery nsh:Optimize memset for speed
		1a98f3c149ba52c458205a66fa99feda69146991 nxphlite-v3 nsh:Optimize memset for speed
		3c25e8d89955a0ef4067453148cf458b70b5c773 mindpx-v2 nsh:Optimize memset for speed
		0d82e807fe6d813193b5dc3385c590db5a55e6de esc35-v1 nsh:Optimize memset for speed
		ad6d0304a996794c4d0a81e5f88ed60464457d2b crazyflie nsh:Optimize memset for speed
		202377dd4eff0eb1526da8d6a35ce1564c40a24e auav-x21 nsh:Optimize memset for speed
		04a61d47cb6713b14bc927648a1c57f6651b8d0a aerofc-v1 nsh:Optimize memset for speed
		e95b76025731c8335f0dd606b043646cf54c415e aerocore2 nsh:Optimize memset for speed
		1880abdac50ceb0b02379948a76886fa6557a524 Airspeed: Base sensor model on device ID from sensor
		b59aefc989d34cad32317b0235192310ce4d47e7 Airspeed measurement: Add accurate models for dynamic pressure
		9cd915949a3b5932cc98e79cb70301fee9863265 FW raise min airspeed based on commanded bank (#7575)
		947d63fb11e10885253f042ee86ea28fb42ebbaa mc_pos_control auto: replace min_cruise_speed with cruise_speed_90; take care of case when cruise_speed_90 is exactly in the middle of max and min
		dbed42a72006fbabf56bc5220a14fe5abde89a3c mc_pos_control auto: ensure the order of cruise speeds during mission
		0a37d8dc429a30319b96dfd20c6ebc68a8500f19 mc_pos_control: clarify speed params
		c4c18caed41bb58a2a8ef287cf40c76783a1b6d1 mc_pos_control auto: set speed at 90degrees to 1
		fd8a5644e8af36aa0a6eb0982944959376b3399f ets_airspeed posix port
		15407afc6e044eedea07b56e1e23bb35ace25baf ms4525_airspeed update test helpers
		641a90708cae4bdfd1df0854d1476a80209d7ddf sdp3x_airspeed posix port
		9cd25d604b50e2d5a73387775bae95d4f537f309 ms5525_airspeed posix port
		e39b38ba96971245aaf6d2b1c249868c8717665e landdetector groundcontact: adjust climbrate if landing speed is low
		3983ac23fa5278ce9bfda70ccc84e7e839141897 Merge pull request #316 from PX4/pr-ekfTrueAirspeed
		cc5db74d1b8ca5febbfcae0cb3ee479f636934d1 EKF: Add true airspeed accessor
		bc46f13d90adc183b5802c38f2e6dd855dd5aa72 landdetector: use control mode, add minimum speed to detect hit-ground
		8878be57411a24babec515f96db637ee1b3d1700 MC land speed: Ensure that the difference between land speed and land detection is high enough
		ad21dc3f504f62ae5551f759cc8f8c86b19a75d9 Pixhawk configs: Ensure there is enough TX space on high-speed UART links
		fc30f2906fd8b8dc5fe52c38a887e9e4e56b2e0a mpu9250:Use a cpu speed independant _reset_wait generations.
		b804616ad03cacef0b3de360eab2b10e73060876 preflight check airspeed use differential_pressure
		e303c2ad89fe6c8279434b99022da7d754d8fc1e eagle tree airspeed allow negative differential pressure
		b511ccd9fe9a3aabac6f896252bc35edf2a57810 mc_pos_control: integrate complete order and limits of velocity setpoint calculation - one warn_rate_limited was missing - vel_sp_slewrate was in the wrong order for smooth slowdown/speedup on takeoff and landing - slow_land_gradual_velocity_limit was replaced by calls to math::gradual - smooth takeoff speed got controllable by user input - comments were corrected - an additional check for the sanity of velocity setpoints was added
		1c7833e3b1660cece4d341dfadbae8791e49dba8 airspeed calibration simplify logic
		eb067291bf06d9ac736e6e14b54e929d7ce5c224 airspeed sensors apply offset separately
		936f92fd0bd59b5c1985fe1cbc59076dcdb78ca3 airspeed verify using filtered differential pressure
		72969f00d7f17b0a55b107452d5d8d41fc6a8adf airspeed calibration error_count is uint64_t
		85d7c7d16593e3ee612d880cac1c51084096585b add sdp3x_airspeed to px4fmu configs
		73d9358b1de0ec5f2ae949f2629fead0b98fe9ec meas_airspeed rename to ms4525_airspeed
		d5eab23f5361971cac2b25f1c647f6e0895c18d9 airspeed error message clarification (#7497)
		33495e81437113bf301ff6cb5f1d1e5cf50dca0b ekf2: added parameters to specify horizontal speed and absolute altitude thresholds for range aid mode
		19cdbcfd4f4d57a1810d1b915e22d903ec0f5ca7 sdp3x_airspeed: fix shadowing warning for crc
		a25330762a0b70f5adef6ca5d0672b950f7f82fc Commander: Adjust airspeed checks on prearm condition
		d104f984d4a6201680dc9ef1e235d37dd50916f7 Sensors: print airspeed validator status
		fd9f6e9415f25a69784d3c156b76d9a541fe8330 ROMFS: Rework airspeed start to include SDP3X
		c6cece52d3e9ba37cfa3868c896c845f2aa4cd36 Sensirion SDP3X airspeed / differential pressure sensor driver
		833cdc92369e4fec946bf0266e8e70f8f814807f EKF2 update GPS and airspeed delay defaults (#7353)
		0c4719de3ede6f3124e3550cfeb375f932d8801c mc_pos_control: smooth takeoff, fixed gradient of the velocity ramp by takeoff speed parameter because we need a workaround for the broken auto takeoff logic which can start the vehicle with a loiter setpoint in this case the very first moment is still a jump but then it gets taken over by the fix gradient ramp this can basically be reverted after the auto takeoff logic is fixed
		b5820afa1437f258e01914eb2ca0fb6e04437930 mc_pos_control: smooth takeoff, fixed ramp reset bug and takeoff speed limiting condition currently when the vehicle is landed again (not after bootup) the core position controller does not run anymore therefore the velocity limit ramp in some cases did not get reset correctly
		8687d414bfdce24537e45b109888dd6e4b8470eb mc_pos_control: new variable that defines speed in manual controlled mode
		0b8e88f476589b84d071d238bd429a8fca6343c0 fw_pos_control_l1 remove unnecessary ground_speed
		0b0c552deef242f5242b6cd476102cb908addf2b fw_pos_control_l1 remove unused ground_speed arg
		94ef3db4079e52e6d9d541d766c9a7d08acfb6d8 autostart external airspeed sensor on i2c port 2
		1d681b0356f2d71d0b152e6e95a922463f2137fd Update URL in airspeed calibration error message
		fd0efac2b5e2d1c2e9437655f1f20f134f252b8b IO driver: Run attitude control group limited until the device speed gets set
		058bc97c838d9ff3958e95c3ad18098f2d75ef36 commander preflight calibration: accept param6 == 2 for airspeed calibration as well
		80c8130f078d0ea8590f3966a324b073b28430a2 sensors true airspeed fix
		384e3bb6939b1c701bc8b78ff0264e7a908e87c5 meas_airspeed status aspd_com_err
		1d4d57c4db9ed46664d8ef6ac0be11f89e146b9f bebop bus wrapper: log actual and setpoint motor speed
		fa6ad99aba2a99c6e3f981212f59b508293ab811 Enable MEAS Airspeed voltage_correction based on ADC_SCALED_V5_SENSE not CONFIG_ARCH_BOARD_xxx
		7fd06ee913375f6cdc338be0b783fe7f811f54b6 MAVLLink simulator interface: Simulate minimum airspeed noise
		b8598c4407d15133d2d51923ef093a68961831a1 Sensors: Adjust airspeed fail checks
		a13082bfed69d7f05a540aa806f8c945827816cb commander: Widen pre-flight check for airspeed
		b29e0040f1f838c6249a7af29f98f31f939bcaf7 ETS airspeed: Work around weird choice of manufacturer zero level cutoff
		df5d0ba8b9ed368cff4ef664b2415b652260fd91 airspeed cal more descriptive error message (#6324)
		1de7636fad67362210ecc8094034419f6548fc10 Tiltrotor: gradually reduce roll control with time or airspeed instead of simply switching it off
		c416fc3fa00f389932f4dee4267033ab8b3b7ec3 Tiltrotor: - added open-loop transition time for airspeed-less flying - added ramping down the back motors during forwards transition
		9cfd46b87c5a4a748503243cfa4def558a57c715 Airspeed sim: Fix reset function
		6d4579751a0041181a2d3e36b2fab08c52311b72 tests add airspeedsim
		647fafe9bc83612c173125a0b537951965ed9fd6 Allow for immediate cruise speed changes at any time during a mission.
		e0fc0a847c87ade89eda1f33e20d7c690dbac0af Mission: - weathervane on takeoff - separate cruising speeds for VTOL in MC and FW - cruising speed resets - mission work item logic is more clear - fixed double execution of certain work item states - enable cruise speed change on the fly by command - moved VTOL transition target position generation to mission code and set always
		ef495d26b89b105871c9c8cc882a4821ed85d1ee Airspeed calibration: wait on filter before preflight check
		b531e65f6abf0017949fadfd33424f672ee90991 Airspeed check: updated message and explained test parameters
		f772fc2d021245b9ae274c3205e9d502d5cf1ec0 Airspeed: preflight check for bad offset, fixed calls to preflight checks (vtol & airspeed)
		508c782bab689cd5a2f5a992986332ebb0f5560c mavlink: Add support for high speed baudrates
		9e589cef480e82cc5a8bf5c4002bb2bb7ca27bef airspeed calibration fail with any errors
		46a697787fae2b37b90709bd836728c1d93f2e13 log all raw diff pres and airspeed
		0fa79eab5ce2c710363cc0154ecf5c79d8be6884 add differential_pressure to airspeed logging
		eec55a09185069b86262209c22a9db2ce719f81a TECS: run underspeed detection method before calculating speed demand
		352b4ca1771ec8955bd24e6a7592f2bd5c630473 EKF: Allow sideslip fusion with airspeed fusion
		fb6f4be453b1cb95f790ddaf0c698739db03c161 EKF: don't allow sideslip fusion to affect non-airspeed states if not deae-reckoning
		e1d9d503e375681be4d17e6e057adf464de26ad5 updated logic of when to fuse beta. Now synthetic sideslip measurements are fused after 5 seconds of cruise flight with airspeed sensor activated
		79df7e88891fe2651398c8ccb4b6a2d6aa3d3234 EKF: Reduce effect of bad airspeed when other aiding data available
		57d7a002614a251dc6a72388e9101c16981d1e39 Set BMI160 bus speed to 10MHz
		c81a1631ece0be126fd49d3a4850c79c6197b357 simulator_mavlink: init hil_attitude with 0 & set angular speed
		997ae984448442f352681db15d67cd9b12691e08 navigator: reset cruise speed when out of mission (#5494)
		51c8715638245f64b7b01e41414df8c0fb5cc82b fixed issue with airspeed never fused
		a9894d7e8c5adfe515efac6854345ea03c78a3e1 EKF: improve efficiency of airspeed fusion
		c5e11cd16f5be37094a221ef9cfc44ead1326a62 TAP:Added i2c speed setting to init
		a38263b8e7062c2d3240058e919e071e1a2e971d Enforce enough braking power when users set higher horizontal speeds
		ce3749d04fb11ec0407c0ae301e356df4845f9ea Make tecs init airspeed mode dependent
		0cf77a30b1dc4c3ae488e08562d7255ae7dfda82 Init tecs with transition airspeed for vtols without airspeed sensor
		ddc4d70d5196ec912830df346293bb35482956fb airspeed_calibration: remove unused include
		6f6ae78cf2ef095a01f5a3b557df8699c146ca14 ekf_att_pos_estimator: added logic for airspeed modes
		37531c018a7f789949c0d7514bbb2850ad5b48a2 Implement MAV_CMD_DO_CHANGE_SPEED throttle
		7f8c183d99372206e4b0258e2328a1be39d76551 added airspeed mode enum to control state topic
		c2da51ccf5a6a922ce1df7dcd0902c0756e6cce7 use airspeed mode parameter to decide which method used to publish control state airspeed
		099becb3536f1b480bd5ee4b6ee37f36694857e1 added parameter for airspeed mode selection this will enable small planes flying without an airspeed sensor
		d66af65a9265faf6684d0d1909e2c4cfcbda4d14 ekf2: fixed airspeed thr bug
		acea2f98d5df5e1b64da9a38c186f1ff65963ebc log airspeed in rpl mode even if it is not fused
		9c170f7fae5b482db7ee5a27bb52894e772329cb added parameter which defines threshold for airspeed given to the filter remove unnecessary replay fields
		8125717bf5771d6ca32190ac7f95dcc2d78b20f6 EKF: remove un-used airspeed health class variable
		cf489f424875abb999d710b4386042f1e3c99b72 EKF: capture airspeed innovation test failures
		ee33f21303cb66d6ed85a68a33d37ec2fef76aaa added airspeed to ekf2 replay
		5217b73df16f0d9eac26c716423ce613a248934b added bad_airspeed reporting (#123)
		b126921894d000d29eb1b3325bf89de996c4baa1 changed airspeed innovation gate to 5 (#119)
		6b5e77250f3144180cb7a3d90ce8c0906b3f77f4 ekf2: Added airspeed to rpl logging
		3cdf56e57cb4996264e431759a4b2a05bbaf16c8 Merge pull request #122 from CarlOlsson/airspeed_fix
		ee7d7aeb8aed1e9088143b3ebf6f5c112cf4ddc9 fixed_airspeed_healthy_bug
		3f169d9b787fb55addff94dbaeb2911117bde39f Fix instructions for airspeed calibration
		1126048a9350eaa5c212dcaa3663c31abb7a67b4 EKF: Improve protection against bad airspeed fusion
		c942266aa6a5c6ba75057281b91576c2bef4ce79 fix airspeedsim: add missing return
		9b1e4c42de6408da83a3ab72d11cfee706374d74 Multicopter: Clarify speed params
		00c8821006f74a0f7b2ddd9787470b6ee47cd8aa disable airspeed fusion for now. Needs more testing and implementation of side slip fusion
		99fc61c27cafc8a0329d91df76e4bbbb80a7c869 ekf2 airspeed fusion: - finished logic for fusion - fixed bug where previous control status was set in the wrong location
		0231b512b4d1b9690e51c18843563fb630c1e0c0 Plane: Use appropriate idle speed
		b3b22b1c2c9b965ec39b8df80717d719fc6d5bc2 Airspeed driver: Proper start handling
		93fde19c25f13fe9c4000bffa9d95ea16bcb13cc changes some cell notation for speed
		6b3ad034197592b993b13a183f68fbd49d7467dd Merge pull request #86 from CarlOlsson/small_airspeed_fix
		65d491cafc9d94f143aff5265962d245dad7cf0e ekf2: update airspeed fusion (not yet active)
		96b9674cb679332c01f66dabf3557667c2c40d8f Merge pull request #84 from CarlOlsson/change_to_true_airspeed
		1ea26b406a88c173ac4e497ea356c94de82d30bd change name to true_airspeed
		2f48317a9ea7b05d8c61b3d1c44f8229491350b1 ekf2: publish indicated airspeed in control state topic
		27b894540ed9f4a87e02f1958a396664b3c7d6bd put airspeed fusion logic but don't actually call it yet
		1b7115dec9d91d4b9868b640cb2fc389b3f23b5f increased airspeed fusion rate to 12.5Hz
		0fb1e0578ba0b5dc84067426fdb45696eed6554b added function for fusing airspeed
		924b7efaa2c4ac987165f6a7da745ad12cdd4744 Airspeed: Use shorter perf names
		fc061ea94da198318502a0c4847b19b01a939728 try meas airspeed on I2C bus 2 on fmu rev 3
		2a2dca84bfddef0a5194b85541a6579a8acf2e6d Navigator: Do not interpret DO_SET_SPEED as 3D location, reset speed on negative value.
		36a8f3f45a5085fd7de16fa23f2df4c2389c5f02 Commander: Ignore speed commands
		f73148e98daa508932497f0c2f800aeb2d7020e3 mc pos control: Support do change speed
		7871ab0faef2b9142d1595b943257a2dc2257ffe Fixed wing: support do change speed
		697096511cf25d532cfa8554727c9aa3cc541239 Enable change speed command
		2549505e7b5d5f184443dd3b97379dcde0f7c879 Navigator: Add support to read cruising speed off a mission item
		cc5afdd6b55f5d6b63e27e33dca110e4d8a40b7a Add field for desired cruising speed
		80f3fefcc342e54a8b99d21feecd8c45db341e42 FW adjust throttle to airspeed mapping for ALTCTL
		eb11c9173326961bfec1095db802f151d2c035de Fix airspeed check in simulation
		6eb2e62306e4b55fd78444f26c15ae8e9963d416 temporarily use indicated airspeed for transitions so we're consistent with tecs until we move tecs to true airspeed
		0ccf0ce7472809a2784a9319a0ae25f6377ff612 only run FW posctl in FW mode and ramp up desired airspeed for tecs after transition
		967b404de8fe6d7e434af5a98f8949076fc50242 only run FW posctl in FW mode and ramp up desired airspeed for tecs after transition
		345246953b5c4d68097501eb0a4145715b4647f3 Airspeed pre-flight check: do not arm if sensor data is stuck or bus errors are high
		2aad0c079e902c0a95f2594fffb0f90a2c4d4dc3 airspeed: Populate confidence field
		3f9fc625f90c8fce507e3794cb18e779a951530d Airspeed: Add confidence estimate
		678d6f45cc185afa4ca0c8dc7196d5dc674063f9 Merge pull request #52 from bugobliterator/pr-airspeed-sample-fix
		7455a833d02a82bd96b037b73a6845f268c680fe MC: Split yaw speed limiting between manual and velocity control modes
		bbc03731c78384284a17dd5c71e818459e8e8487 initial implementation of 5 virtual sensors for Bat V,I, Baro alt, Fuel and GPS speed. Voltage and current scaling can be set in OpenTX. Fuel is in percent. Alt in meters. Need to look at what OpenTX wants for speed.
		461451147443356aaca7ad0473e41991607a9092 use set takeoff speed
		cbde246f0a02afb771cccc5e61faed5f7115e22a FMUv4: Remove non-existent airspeed sensing channel
		4ba7408ba0e47a92783086cc1bf4df5035c76235 Speed up Vagrant
		c0070a19a85a2534548e470dcedc26613e1eccd3 VFR_HUD should be indicated airspeed
		27e1aaeea5b4a464f74c51e9418fee8afd50d95e control state: indicate if airspeed is not valid
		2c07668b2fd320bb304cfb83d5b1322253967e20 Merge pull request #3268 from wingtra/airspeed_indicated_q_est
		b83170b7c3e062e377878831aa29173a2467303a use indicated airspeed instead of tas
		7de36b0264e57b2f1574e4199752cf6efc68b00c Merge pull request #3267 from PX4/control_state_airspeed_fix
		e5b2c652e22d174ea4f3b2f3ddd5c5877e359a33 channel airspeed meas over control state for q estimator
		b42bcc48bf1b1453f7d2a67e9c865c38fc3b7027 Merge pull request #3263 from dagar/true_airspeed
		111287f6fbf83b7c6b5bcf334f5e7b20ef6ef4d3 Attitude EKF: Do not limit sensor speed
		719440fe4d01970a574aebcf6f197f14867ef65e Merge pull request #3231 from PX4/airspeed_fix
		333d6ea12f59064d3a45dfc235d76609019a33f2 ekf: use airspeed directly, the other thing was just wrong
		120fd9d5225e1e09a19dc51c0f0ccc27b4a98766 use control state topic for attitude and airspeed
		f3e0d91f24ed30b32647a10b30b82f1bda9b29f5 added airspeed scale parameter for takeoff and landing
		b16e6249e4189e077ce9d82973897a7698842181 more correct groundspeed scaling for wheel controller
		9c70eb0b63e1079f1fd0fcf8714cbd2fd138baed reduce wheel control speed scaling
		234a200e6081bc19c0489a5bd266ed4d00cee917 renamed heading controller to wheel controller, added groundspeed dependency and separate parameters
		515d81b8d65dbab25aadf7543893621c918c9a82 Land detector: Move back to more agile raw airspeed
		092a51426f3cde2e5a04e204a3f3adef82cefeeb Build fix and airspeed console cal
		0509a5a9ea64568faee95bd3763d990a12906611 Enforce airspeed check for VTOLs
		2b50297c2e4b0dd93eb7a883704aa0e56a672db3 vtol: allow switch to fw mode without airspeed reading to facilitate bench testing
		4c47fa70a8c0179f976665bae5f3d6f9b1c1b1b4 Airspeed: No module file
		7c0407d0ef4d6569be0cc1d806841c7b7356c92f ETS airspeed: Fixed code style
		e2e83cd578e51572202d9e1b218e592438e90b70 Airspeed: Fixed code style
		9c26e71ef6014bb983556778899c912f472083c4 Added robust airspeed measurement
		ce70803d250435ae1fc6f103066759b0c49a576b publish control state from ekf - missing:airspeed
		9f90b877456648f0f6f742d50c1b730d8ec2e152 implemented driver for simulated airspeed
		0fe272c9b3fcac06a9f30f9ab19fd94ad9d969c8 support simulated airspeed
		b2bef75bb4e6ef7ac04540883a9c973874f1a0b2 start simulated airspeed sensor driver for fixed wing SITL
		bfef24bf727f72e0f82050276777e000930d3c39 Add airspeed boot workaround. From @kd0aij
		135543f03f95f2860640d4145c01ebfe0480af47 Airspeed MEAS: fix code style
		bac89be4b98869dce6899db2b18da4da52da471b Airspeed ETS: fix code style
		dcf7b81f8321555a9e0c209cfaf59726dea154f1 Airspeed: fix code style
		90e4fa8a33f234bfdf8e5294203f2537e416751f TECS: Weight down speed gain
		006dfbb14f658b23c0a760229bac05e861db48dd Commander: Speed up airspeed calibration
		e1572d3942538994fc65a4ba66cdb0ac8f46c5ad Moved ADC channel defines for battery voltage, battery current, and airspeed voltage to board_config.h. This allows better portabilit of code from one board to another, since it removes the hardcoded #ifdef sections from the Px4 sensors code.
		289ad91bcc2e49c33ae338152d7af19a13c4b64d Fixed wing land detector: Filter GPS speeds more since they are unreliable, leave airspeed filter where it was
		f619c1390e682da13dcda225ec8845c8c317d0f3 Merge pull request #2366 from PX4/ekf_airspeed
		e76bdc3cace535108aa90ca89eadfbaef1f13b01 EKF: Use unfiltered airspeed if airspeed is large enough - rely for better stability on the filtered speed for the threshold. Lower the threshold to 5 m/s to ensure airspeed fusion even on small wings
		0916e6fc199fee2acbefa924b55082eb483ef3bb sensors app: Populate unfiltered airspeed field
		7deeda726cbeff7259dc671244990b8532146b99 airspeed topic: Add unfiltered airspeed
		dc7471f430ff6edf5a2b132f8d6657b43d0a62c8 Merge pull request #2296 from PX4/attitude_loop_speed
		d40f94bf26a89c349f5d7633434d3721b4720170 fixed wing posctrl: - lock desired yaw once yaw speed is small
		9af8ba49ac6a8c43fb9a782c3bb0a2d91ea75e10 HIL fix: Also publish filtered airspeed
		44cf402c6f35de64381ad67f5560f52daae51777 FX79: Set better default values for airspeed and loiter radius
		d7547d388fdc60c74b838987a99f81d19ab1a8c5 Remove auto-generated airspeed topic
		aa531aec642f777dd5ea1c38c02f1938e8834c6f airspeed driver: Update topic names
		f7c9e918b1fb933dd431076b53444c1d004099d9 Update airspeed topic to use message generation
		be3551136ab5b81408d28ecadaf21a6d217bc279 Airspeed sim: Use proper constant names
		5c535845ab272fa6f586d319e56294a2c766bac1 Airspeedsim: Add ringbuffer namespace
		e279e8bb2a87e56d5356fc255d800516c8094cc5 Fix param changed count logic, speed up logic for unused params
		26954ece2c51ce54452df519af09678e15bbe704 Merge pull request #2187 from PX4/fixconstrainairspeed
		8a891591a8eee665fe31f5ff4a1d7dfe47ff00a5 make constrain airspeed actually constrain the airspeed
		97b8e7a20e1bf64b7677911e6bbab300ff471358 mavlink FTP: Speed up transfers by longer bursts
		5557ecf3d71fa22eb790fd261a1702d2153e7e72 POSIX: Added airspeed simulator
		668e634bc272b22642074a9c496c41a54ff7022f Merge pull request #2095 from UAVenture/firefly_airspeed
		868b9b33ed6d7f521d20d28429cd8c7d57311409 Make sure we log the airspeed check to the console as well.
		8334073bb99e3da7a5bfdfc24f540f0d0e14a361 USB: Crank up bus speed a bit
		de3888bed75347eb8aefdc6cb7dbeeedff749988 Merge pull request #1991 from philipoe/PR/AirspeedArmCheck
		32012e8aac641ee5a10eec14c79346c148bcce90 fixed elevator wobbling at low airspeed. Removed not applicable if conditions.
		5f326650fd2b83adc86cce6ca5ced4371bd16a60 added max values for airspeed
		d6962de4452a365701a0302a15d448fad68e6092 change FW airspeed defaults
		f0ad98c92c3fa063004f241d590bb96f6be16895 RGB led: Code style and comment on bus speed
		c0d246e8e4130c3df7d16a97f7c749827be18b29 CDEV::I2C: Enforce one speed per bus
		6e4b95e844e0e24c65ee5166d3d214957e3be9e6 Airspeed: Move to 0-based index
		0901d999924012b482a5379854c24eb9f2c6f345 UAVCAN update (speed optimizations)
		3a05b571690ce675f56184cd5c5168f7699f9a03 log total airspeed for vtol
		2e1ac72b598184ef618beceb10de53606929edf7 Speed up stack dumping by looking for freespace 4 bytes at a time
		e16c4ff76e7eff2da88bcbef5d05dd4ba11e7203 read attitude and attitude speed from imu message
		5682526737e9aca75fa30aea8e8f18e49c0b48a7 NuttX: Update version, addresses clock speed error message. Fixes #1510
		51a7fbeee091c20eb52bafade3e2041e26a785cc added sanity checkto prevent false low airspeed readings during transition
		9bf19c8d1e05c8d182a9989061882065504927d1 merged with caipi_airspeed_scale
		945c8df18bfc25650bd01d9358295f1c2102a61f added scaling of mc pitch control with airspeed
		590489d49859c77ef2e919f2ef45e9dc81e28f9f make sure vtol attitude control module is started with idle speed set for multicopter mode
		4724c050478900a0b0b760877f1613e43c0aa97c airspeed: use _retries=2 for I2C retries once initialised
		9bb0ecf0ca6082355072af190018e0b5298b7e59 Airspeed calibration feedback: Improve wording
		beee7a89ed6e7a7c98ee712ab571c58eb6f3a692 Airspeed: less chatty
		e2c0ac3f700f003061e52fd61fd4770c982605c8 airspeed driver: Be less chatty
		47367aeed526e7ca72e9cb7290e745dc0e6e2061 TECS: Fix bug (underspeed-condition did not have any effect on throttle)
		84908f8f3db5179ffff0d96d15756ab112535482 mc_pos_control: AUTO speed limiting bug fixed
		821c06f7cc58b50afe80442ee2258bf99cbe1fd2 Support speed estimate
		c17c585c3e977688ad5ff64812fd499c0410f2da Merge pull request #1335 from PX4/landingtecsunderspeed
		ab022d51338c30207379048c913715a0b8d601c3 disable underspeed protection when landing also in tecs
		9bda573151ae1b5fa87686ee58596ea14e052941 mc pos control: offboard: set yaw and yawspeed depending on valid flags
		ca06c7b4e793e7ae32a5f9aaa38c353a73f113a3 Merge pull request #1312 from PX4/airspeed_fix
		2f5c0cbd133deb492102ea8515563f471531acce Deal with zero airspeed measurements
		ccbd5c09316d9f07eeda3c3f6bc07c729dab6c82 Merge pull request #1308 from PX4/airspeedfabs
		e09bc02c37d5e36a3c7d3feffca83e9ddfe1ed79 meas_airspeed: don't reset the filter below 0
		a1b4d72d1f8bd3cd25f9fcfd4dfd4c4ec5bcad01 airspeed_calibration: stop talking about Pa and and hashtags (now the correct files)
		6480747c69203f70b4f28d3a357f49e05df89c85 Revert "airspeed_calibration: stop talking about Pa and and hashtags"
		c6fb75f66fa94444d07056f271980e3f05008f94 airspeed_calibration: stop talking about Pa and and hashtags
		40fe9ab969247315e3065d0423034554cf66b885 meas_airspeed: don't take the aboslute value
		bcca3cae748ffea2df51907992e4a3c7ca673fd2 Run full update straight after reset, filter wind speed dynamically
		2c0d192944744086905e622f445a523d6650cdc5 Use the wind speed estimate filtered values
		7eb521b6d4643fbf36d20e923faadca4e8f61dc9 Do not perform retries in airspeed driver - this is too much load for the HRT queue
		024c6d572706b3ae7755b5c022e198d7db7c5d34 Airspeed fix attempt
		020ac409be62e6c459e7aa5cb3181941c9bbfd23 Remove airspeed and altitude raw data from TECS log, as we have these quantities already in the system log
		9d7e3feffcfb34708cda5a726b7900101f41b205 airspeed: Filter slightly more, just a touch to not induce phase delay
		2b55eb605ed2216f9f73f5745de7d7a34c851e1c Make airspeed filter a bit smoother, but do not induce a huge phase delay
		54b9698d6560290e386b8dd2a7b9f0b6f4c5f57a circuit_breakers: added param to disable airspeed check
		2313bf7cd5cbf14ffaec61116cce84b9c0c18653 mTECS: Note better filter defaults to get airspeed response a bit smoother. Damp also ACC response with filter more than currently
		7ca184de45a49ca2bde5733a54843975e193a237 MEAS airspeed: Stricter initialization and constructors
		23dd7e752d4760a13e90ec7ed6cf003e56c4baff airspeed driver: better init
		91bedc5c1c84fa79945f32462dbe3fe30c0ff5e4 airspeed drivers: Start handlers stack fixes and start handler review
		ddc8f1fa5f5b88549af5e4f5f46c751a5f3af3ce Merge pull request #1159 from PX4/airspeed_test_fix
		f3549d775cb049bcde93c3e860c3adbad3763364 Airspeed driver: Use the known sensor offset for raw value as well
		9ce7820e419d2ffa379fb7a3cc168f500623fa3d Make instructions in commander more obvious for airspeed calibration
		db0cc845bad26b2adccb757917c997c3d65b185c Merge branch 'master' of github.com:PX4/Firmware into airspeed_test_fix
		d4a867071a2183069d8902292357133856cd2ffd airspeed: Better calibration messages
		07d92c264c34c66b17d45de870b784c9193fb5a1 Merge branch 'master' of github.com:PX4/Firmware into airspeed_test_fix
		91651bf240e0b2f53936f45d59ffae2c970eac9c Merged commander fixes into airspeed_test_fix
		8e2346dd5a061a7eb7f0398c45a8d5838a77755e Merge branch 'master' into airspeed_test_fix
		65409ad2c8ba10d95cbcfa088951abc40eb46774 Airspeed calibration improvements
		34abf5c40cda538f204d313cc49715b5a938d168 airspeed cal: Fix up logic
		80c522b82156c79ce7591225fb1cf577e6e37afd Merge branch 'airspeed_test_fix' of github.com:PX4/Firmware into airspeed_test_fix
		5efba7dca45867b028a01326934ea968ee908836 Merge branch 'master' of github.com:PX4/Firmware into airspeed_test_fix
		67d23253c3b3ec04bfd9d5f7e09d3d405ceba7c6 airspeed cal build fix
		7bf0e6f3e26ee9e10073293677563f6862758557 Better airspeed feedback
		5a22ef1c28abfeb0076532a847a9178f9dc1361e Merge branch 'master' of github.com:PX4/Firmware into airspeed_test_fix
		0d1ac4235411e8f05f96bcbe51558d92f0d86cf6 airspeed calibration: Update and resolve compile errors
		0332b79cdfb99bc2ad8310163d2d44460d1001e3 Merge branch 'master' of github.com:PX4/Firmware into airspeed_test_fix
		1bf293270d57c91046dc6ee7c377226007b7fa27 Merge pull request #1163 from hxxnrx/px4io_i2c_speed_400khz
		45617e9f4385e80846c571b237e220216192d6ce Airspeed calibration improvement, enforce correct pitot order
		899657613e44f0d4bbdb66644b35420d7381ff99 airspeed cal: Improve user feedback
		21ce6676a18d971c48e252bc3f2fe8188f4898de Merged master into airspeed_test_fix
		25f3f6e7f2dd87a831d25a9348a67ed918407d96 airspeed calibration improvements for analog sensors
		8d081a8b0dd002cda075ee9d8e087fdf54722ccf uORB: Remove voltage field from airspeed
		3461d3d215843681b1537256d26b053e3f2b78e1 Introduce analog scaling parameter for analog airspeed sensor
		3402d65948a03d91badde98ef4afdaf10f049333 Merge branch 'master' into airspeed_test_fix
		c97e08bcf05455e9e9b582fe3216250a988890fb Set IO PX4_I2C_BUS_ONBOARD I2C speed to 400KHz
		3157b06fee99b57fe336f7772b293f8689ff8cdf Generalized the airspeed check
		a049f0841d0a68edf2f1e5d10ba2ab24d15aa472 Merged L3GD20 orientation flag while keeping original bus speed
		c6c33142ceb6bf59b8c9b8e32e94ae5ea7959dbd Using proper math library. Corrected speed variance calculation
		f9946c98a809d18e0a037ee45f39195fd92c62fd mtecs: filter airspeed
		7fa5458bc619df427fc29283ff5ff32b933f2906 mtecs: add D gain for speed outer loop
		eb02c6ce4900a3dfe96592219852b2205c5d691d mtecs: disable underspeed mode in takeoff mode (as the comment says)
		c4cf07b1a943b0c4c1ebb553c0322695128c396f fix stupid error in underspeed detection
		718206bd6d4103d8d2b1ad6a111770f65622029a ubx driver: fix unit of speed and position accuracy estimate
		c945693054a15db03414b0446372c7a457fa743a ets airspeed: Support raw field
		d9a7e528b056556112c74d13a86f30bdab88f635 Multirotor mixer: idle_speed (aka deadband) fixed
		ec409a1337a0f9c73cbe54776b254464e3dcd1d3 EKF / Paul Riseborough: Added guards for mag and airspeed innovations
		671c7a115a7c01ed89266a6631fb3929af84ffcf simple underspeed protection for mtecs
		6306644028604411b57deed675d8370841d18e99 airspeed: Let the status check routine handle the initial state
		709d104de44b1cf7e338f4ae25e8b1fdc336a279 airspeed driver: Do not spam the console on error, report the system change only once
		ceb287504c7460b024ecabbcf278462da9e2aca1 Merge pull request #807 from PX4/trust_airspeed
		ab60b13b6dbcf636b1889d2150d96aff8b26cfc9 fw_att_controller: Forcing actuator scaling to at least minimum speed
		4a0c6600887e900932f6888f1b8948816a1f00b4 Do not make minimum airspeed assumptions, as we can trust our digital sensor a bit. A blocked pitot also most likely will result in more than just 6.5 m/s airspeed and so the check is based on a bunch of weak assumptions
		be6c0d2ece235077f067f4db10689b8ad3d9c5b1 Merge pull request #803 from PX4/airspeed_scaling
		6319ec2036c52f39a6fded6480836fe79e3ba35f Add celsius air temperature field to airspeed
		17082db97e493959933073f5c02177bf53256a88 Merge branch 'master' into airspeed_scaling
		188ec9896497e0bc907e164a3936b86cd742baac Merge branch 'airspeed_scaling' of github.com:PX4/Firmware into airspeed_scaling
		fc39af08a1d6673aa727a84b17afd6c4485dff19 airspeed: Prevent the filter from overshooting into the negative airspeed range
		78d50370ad12cc0b5762f4d596301cb8210cae21 Merge branch 'master' of github.com:PX4/Firmware into airspeed_scaling
		62c188408f794698ae804875d077e4f7ef8ac612 Merge branch 'airspeed_scaling' of github.com:PX4/Firmware into testtest
		3da219c3db638e0a57d18e892575df13d8c11f47 Update airspeed calibration routine to account for new signedness options
		00c82f0836388ffa1e1c4a5827eefe28c0521df8 Merged airspeed changes
		a0ceeee9ef9988fa470524462e3097e52c63ed8f Merge branch 'airspeed_filter_fixes' into paul_estimator_numeric
		42bba678939a58e59282d4c63dbdef53f962e0ed Move changes regarding the filtered airspeed consistently across sensors, use actual air temperature instead of board temperature
		d1e2e855a3c4b7ba07b91988238e09fc67d2effa Merged airspeed sensor use
		e5b22810994e8eeda6819041eb02b9f30b258558 Merged airspeed filtering from Thomas Gubler
		398da6a4d6aaba6dc66cb11746b35b51a5294c2b Merge pull request #719 from PX4/hotfix_fw_airspeed
		be349b989a7a716a4e8d5ff4143f79124d7abc76 sensors: use filtered diff pressure to calculate airspeed
		0784ef918925a546e0e4294571859150f0789561 add low pass filter to meas airspeed driver including logging of filtered value
		b6ea38b91a3d161ce01ab3683b0097f45c4e4de3 sensors app: add timestamp in airspeed message
		d9d0e60bd574b135d98bdaa48c4b32056f815217 fw att ctrl: airspeed check: remove unnecessary cast
		a977ff2b6295bd4bac614a854ecc35e1b9b2d75c fw att control: add timestamp dependency in airspeed check
		8267bdf4a5aa857db0f970da750d782f1d8ec369 fw_att_control: airspeed is now used correctly
		75c6706278119e50ce56ecbb1620025a9b9b936d l1_pos_control: set gndspeed_undershoot to 0 in loiter
		387bfad1cacc2f9929e7590130ca93f27c688655 Fixed status printing for airspeed sensor
		0f7483c804226d5557bd4cfd2d46df1533e91c44 Merge pull request #670 from PX4/airspeed_path_fix
		28536682aa664b5dae74b96688cc66b919fccffe Fix airspeed sensor
		e7e3e132adcbc755cd6cc2b97f6c8c827a9140bf FMUv2: push SPI2 GPIO speed up to 50MHz as well
		2dc3cf5e43154a516505d768885e734a5ab25e14 Remove unneeded header and commented out dead code from MEAS airspeed driver
		65118f0c2ef6e4305259a35751c8cb92d751b671 Disable debug in the airspeed sensor driver - prevents console spam if it fails (and on probing during startup)
		ff59aa9a0f856826682eb5099b1ec2525c5f7ba6 mtd: use new MTDIOC_SETSPEED ioctl
		d72c82f66bf6dac8e6d10bf1024641908d3b854c Airspeed does not publish if disabled
		2ed315480e4582c9f223b88e1fee39303fbc9248 fakegps: default to 0 m/s speed
		4fcbe806cef61aa3b8a749602b65da0e5c8d48a4 Cleaned up init config and picked a safe bet on FRAM clock speed
		1f564a95ee89278b3e4eea6c2d4ded378b71542c meas_airspeed: avoid trivial dependency on math lib
		aed7133649276f48e622b544a73d5c64de758450 Merge pull request #552 from PX4/spi_speedup
		f4ac204f4650dedcde52aa9ec001fafb5e7c5284 Cranking up bus speeds for all sensors to achievable 10.4 MHz, will cut the bus lock time to half
		7e309414758d2c526da7ef3bcab7bf75779f6950 ms5611: change bus speed to 5MHz
		ea33a19c8f5b109fd9ba35603b0af56dddef3708 lsm303d: show regs at both high and low bus speed on error
		97af3d22040e67520a835102684a1b2a9575aaaa mpu6000: change bus speed based on registers being accessed
		bc8cfc8d9d29650cc2ec7627cf5cedae0b5ed47d Fix indendation in airspeed driver (no functional change)
		b0bb5a34508c72efbbfc2ec622a2cd8a95e9df1d ms5611: change bus speed to 5MHz
		af47a3d795c01efbaabd60d6a15d48337187d35b mpu6000: change bus speed based on registers being accessed
		3c6f01bea8a65e2c347d1b893b3fe0d152bff69c tecs: speedrate: use p loop instead of pre calculated speed rate for now
		8c3e67993e2aa5e434ad1273889ce8f321fb1908 position_estimator_inav: don’t use GPS vertical speed
		37ef10ceead77876108847e31f56ae68015f5784 groundspeed undershoot: take into account altitude difference
		f337d62f2da3c4765acc8b88a4cef3381a89c6e7 fw attitude: fix handling of invalid airspeed
		a1398c991ede8269d27f5798ea137a43846e7c9f Merge pull request #525 from thomasgubler/airspeed_meas_calibration
		ae9fae5aae2aacbdb97aab9a858dccbe39e4d40a fix MEAS airspeed and airspeed calibration
		22ef0c77352e9a60cecc51fc219dbad4b9bd9d0d fix MEAS airspeed and airspeed calibration
		a1b80ec3f356aa19544eaa318bc188d57877f16f fw: att fix initialization and add parameter to disable coordinated turns at low speed
		64c2165e8be17a8309594a0aeacec7f3aedee4c0 Merge pull request #507 from thomasgubler/airspeed_poll
		ef7a425a45397fed510920b98a4ad08e62170f4c fix vehicle_airspeed_poll logic: _tecs.enable_airspeed was not called before on valid airspeed
		2b2a85b75fb49da91055fe2dba9bbdc6695d8c83 Merge pull request #506 from thomasgubler/tecs_airspeedmax_param_fix
		18cfc383e82d722a45f924a2df0fd2943213318f Merge branch 'tecs_airspeedmax_param_fix' into fw_autoland_att_tecs
		3eac9ce1596f90acf2e86f807b1b4efd3904a80b fix usage of wrong value for max airspeed parameter
		b131453443032e1f101ea54254908cf608b71ec1 Merge pull request #482 from thomasgubler/airspeed
		8cffd2b8a33ccb4d556a181d5a6e55111c1b1f53 fix scaling (unit) of airspeed in HIL
		252fc30ca7330dac224e087c2f91531c1d19842e Start digital airspeed sensors as default
		36b7b7bc5f078f373f67cdce3f5c7855c0dcd58b airspeed: convert to using RingBuffer class
		5ee40da720207acde6976d33e721e6bb109617ee airspeed: convert to using RingBuffer class
		61936412f3ccf9aff5a12d47b8c5fe34ff1a04fb Speeded up IO startup, needs review
		b7ee1d34294b536c6a92c8e72455f24684a5db4f Prevented an analog airspeed corner case from happening
		76a9e34e08573ff67ad34eb0251e3a7bdefd0406 I2C airspeed driver needs 2 retries
		935ed2fe49370e5eafe3b5445eda2c5714162216 meas_airspeed: don't use stale/bad data in airspeed reading
		9c58d2c5c6ef96f9ece7f62d5f02d01d8b1e316e airspeed: retry initial I2C probe 4 times
		28fa96e2db8fcf91fa8bb5cb0095b08306985402 Made sure airspeed tests reset the sensors to default state
		901a9c3e35456445465e7008d3c69b0bd3481e9e Hotfix: MEAS Airspeed sensor fixes from Sarthak Kaingade
		5ddbe24d8e5383a19f51957463211a4d8922d366 Fixed code style for meas_airspeed.cpp
		6cf24ac106688d70bdeda9d13fa252246f599b5a Increased comm buf size to better deal with higher-speed MAVLink transfers
		dad76c56c63a358ec2c4ea2248ef617843b48bab ets_airspeed: cope with zero value from ETS airspeed sensor
		382c637fab66291a28b18f7481aad3b866de6639 Fixed stack sizes for airspeed drivers
		edcd25b5ed15502b32c9dadc1fbbbfa552f0b74f Airspeed sensor driver operational, needs cleanup / testing
		17338ca61aa8a58c92ae621de94240ddd22f28a2 Removed unneccesary casts in airspeed calculation to double precision
		08ddbbc23e5ee40c95cc838c08e946c7ac063698 WIP on MEAS bringup, ETS airspeed sensors should be operational
		02d918b46d20d096e54379ea30762be55f8a3da9 Removed airspeed
		290ca1f9bf973a9ef957cb413930f7aac06054e4 Reworked airspeed driver to keep most of it abstract
		dc600e7d65df3d91fc1dabac33b6e264ef9185df First stab at IOCTL driven offset handling (in PA) for all airspeed sensors. Untested
		7cf121472e7ba3d83084083792b0f159f238a8ef Merge pull request #325 from sjwilks/airspeed
		2b41e1a23be3d18e1eac6b906eae6bc030861a89 Merge remote-tracking branch 'upstream/master' into airspeed
		17f9c7d15ccb6301e2be3eaa8cde8b3f710ce085 Crank up the test speed for 'px4io iftest 1'
		3163d7ac0908dfee0978992137500f11f8a42c43 Set the serial port speed before trying to talk to IO
		c240e843aa2ba88fa0c333dd8f099b37f1e1ca13 Merge pull request #305 from sjwilks/sdlog-airspeed
		f1419d4f5f5e7856464e277c7e11e6b58539ca99 Merge pull request #307 from sjwilks/ets-airspeed-fix
		9e26e8de79b7a4d81e88321f5c60a622f1bb33fe Merge pull request #306 from sjwilks/hott-airspeed
		dadac932da6fe2e45cfc6ed135beed9e6adff1b0 Report airspeed over HoTT telemetry
		12ac41802e663e5d9328c294df4117269764ef2a Log airspeed.
		eab8f9b28608f7f91641442e833b2324710147d9 changed control index for speed controller output from 5 to 4
		614bbb15109236c353c02b1d2c2494bc442a699f Merged ETS airspeed driver
		5b60991c63b0c6b87632369fde73236263670448 Style fix: ETS_AIRSPEED > ETSAirspeed
		48f815860b5900f3770486d88aea9084c75441e0 Debugging, cleanup and added airspeed to HoTT telemetry.
		df6976c8d640b395220d46f5b1fd7ecfc8ae3e04 Split diff pressure and airspeed.
		9dbd2695d3b476e8ed0a2001b027329e8600bd29 Hotfix missing yaw deadzone default (leads to continuous turns since zero speed is never commanded)
		a9b933b7e6652ba7d710ffe356a1843329ad9520 Merge pull request #206 from thomasgubler/airspeed
		6f1d7dc7de3609f73367794acc8d625c1ca27d03 commander app sets an airspeed_valid flag in the vehicle status
		c0a852dab48e55aa12c995adc6dc0c32aa9a7ac3 airspeed (pitot) offset calibration
		2707d2c1dde65dfb9ba48258994badb4b57f9627 more fixes for the airspeed readout
		2ebcd0fdcc4b743c3a8a32bae0852e9536bf3a6b Switch to optimising some things for size rather than speed.
		2c2c65d446f991b273ee1f275fd2bc8440f74844 corrected some wrong units (used in airspeed calculation)
		a0780a20b5e10eafa1ddf7e16bce788b94514bba Fixed default airspeed for fixed wing control app
		328af90c9e829229e9ad978fbf752c0c8c656623 Merge pull request #179 from PX4/airspeed
		4baa1821cbf36f6b22636eb79325c9656332fb6b Merge branch 'master' of github.com:PX4/Firmware into airspeed
		2ebb1812f1eea47f06e79650242416493ce279b9 Implemented airspeed measurement. Untested
		edb3871913d4fa7d6ef0f01827a194d6362c3c71 Remove some dependencies of distclean on clean.  This should not be necessary in higher level makefiles and should speed up make distclean
		269bd9f4038189716bd630031c90e98b421e5a79 Force the fade speed to something sensible. Deal better with failed probes.
		7f22811afb3078b1f86b2d462d13e0d06e3a5c88 Fix <termios.h> for c++ use (cannot mark speed const)
		520f335b557fdcfbbcdebf967ee02d71c574b353 fix for ground speed minimum, untested
		129e6d73debca5653911867e9db54990c02591bb Changed yaw position control to yaw speed control for multirotors, tested with ardrone
		2652b16d37f2221dc9dabfa1a278651c2931e5ce Distinction between yaw position and yaw speed control, just messsed around in the code, untested
		aeea27d16a6e7d92f7caf1c6a272a5f4bfa9a721 Increased interface slightly to better match 200 Hz, adjusted led flash speed
		f16ae329fdcd533adc29e035e2184918b3862612 Add a versin of memset() optimized for speed
		860e5f0524a79a3fc7c776d925d1e73066b7f78d The termios c_speed field cannot be 'const'
		b090298b121d8a5dfa02cb06b2ab27ecc3fa0545 Minor cleanups, added more error verbosity, XXX parameters get now read it at maximum sensors speed, needs to be waiting on a param change notice (but not on the vehicle status topic, as before.
		d7280d43821c750e6d8aa35ac6f26f811cc6890b Combine cfset[o|i]speed to cfsetspeed; combine cfget[o|i]speed for cfgetspeed
		ac6f7a722bd9bdb35e738b7fbbd1cd32d68b2373 Ooops.. c_speed is now read-only
		1e15a6d1cff9fe105d094316f06a01e0fc7e4465 Baud definitions (B9600 for example) are again encoded; Now supports the BOTHER settings which allows specifying the baud via c_ispeed and c_ospeed termios fields
Results: x/629

unneeded		15
		9fe2f84db5f9f918a9d961890e448c700a242d97 CUAV X7 Pro: Remove unneeded drivers.
		6c16a29d26b2c79d63f1459be361c8972399d9ce mavlink: remove unneeded TIMESYNC stream from MAVLINK_MODE_EXTVISION
		aea139bc1bc2bf243cfe9b9a094a894375a7ebad Correct the LeddarOne FOV and deprecate the unneeded _distance_sensor_topic after migrating to PX4RangeFinder.
		d4fedca1ee06e8ca2d180305b0a28c71f9d04d5c Rename _accel_horz_lp -> _xy_accel_filtered to standardize naming, use time literal, and delete unneeded #includes in the FixedwingLandDetector class.
		2a3b98a463b0690b58a0cd98cbcd0bb3f684c0a2 Deprecate unneeded #includes from the camera_capture driver.
		d1e46737a3060ada016363f26375285747fe8764 Organize, alphabetize, and deprecate unneeded #includes from the barometer drivers.
		8e4296d00018da181eafa3705c4e9b17f7319d03 parameters: remove unneeded usleep
		2e732b9c0b917e549c2e33bf574e86094c1189c3 removed unneeded file, some more clean up
		0bee156e8f0e743e22b1916a8e9b8f580994a649 remove unneeded condition verfication for the package
		47094aa1f843e109a34b5234376c38916e52ea29 cmake configs: remove unneeded sitl files
		9712f6b02a34e75d7ab1416b6fff0fcfb2fe7b62 mixers: remove unneeded README
		97fe5f928a32ae8463f4a5e5ff92a7f5803abddc mavlink_orb_subscription: remove unneeded checks
		28d70f5f793b8eac05e9f358bb6169a9cb30465c logger: remove unneeded topics from the default set
		d4faaff8542f4e317af38f6e3183a9ed7cbd5a68 logger: remove some unneeded SITL topics
		2577eb7527bc1d6ed05da3fa1f751da4ad81a451 sensors: adc_poll: remove unneeded argument
		051822eee1329558bf565f8b37418cc3cfeb754b lpe: remove unneeded subscriber to manual_control_setpoint
		7a409cf843592265719caababb23b44a8e778de9 vdev: remove unneeded devList & topicList methods
		c4cdaa48e01e00886deb9d4d7932f24937ed5d72 dataman, mission_feasibility_checker: remove unneeded uorb includes
		89a8c656f2d6d034e9a772e1d61a7e8a609c1289 Unneeded includes
		62c1a23ea3a600c078ea072827a52c76ff221783 Tools/px4airframes: refactor & remove some unneeded code
		644d237ce6de6ad55bd12d69d41bd635f5f93ec8 posix-configs scripts: remove unneeded 'sleep 1'
		32995a5bc17500dd0915cf7dd55d4362674cf4c9 state_machine_helper: remove unneeded code to disable sensor publication
		cf21d8f55449a6d03f487429efb356e8ea179f94 cmake: remove unneeded file build_git_version.h.in
		78f19fccce06474240efc29f8be074d7e4310773 replay: remove unneeded include <logger/logger.h>
		b4ecc5a8d961d31ef7eb66b8f5ea097568e914f0 sensor_combined cleanup: remove many unneeded fields
		872b08f677f497cd9a30da15409e5225b1e5071f commander: remove unneeded include
		8d491077cef680e5e470e71a69ac110fbbda57b0 adc: removed unneeded printf
		51defb9de291422bca29570da71a9c5eb24c8a32 px4.config: remove unneeded commands
		ff5a481c34ce4d5af28cde627a5ca30a286c0bba Remove unneeded EKF2 configs
		9d0c5469a066e51ca699470f169e2073aa181bac gps: remove unneeded comment
		9da2eac3d33c4639fca92b8700db7e4285f4606e logger: remove unneeded start parameters (-x & -a)
		7ef718912ac6be956c6bb684518e91cfbb2d0891 drv_gps.h: cleanup the file, remove unneeded stuff
		3cfb6ba4a7bfcf2d491b20f85032ea3324c1fe2b Do not send unneeded NSH command any more
		8cc37db5950c329edc39f7aa8ecf4d55da8762d9 Removing unneeded debug statements.
		39daea103be549681161c6c9396a757b4dddcc5c Removing unneeded debug statements.
		57ce3cfd0107279b91bde03ac00911ba7ec43a2f FMUv2: Remove unneeded code
		f8ccac69bc4c6dd18c15e6edbb14501f2cd7444f FMUv1: Remove unneeded code
		4e6bb353924728c7df5f9d0ae357622f33f2bb91 sensors: Remove unneeded orb_set_interval() call
		a690fd12e0babdd09a3ce784fb88827d94a247bb Removed unneeded dep from makefile.
		a4e06654ff3d80d016c6352870bc105ddc8fa4f7 Eigen: Remove unneeded config option
		fbc4ca61aca54176deee6082f35ba60558571047 ll40ls: removed unneeded comments
		ba10e18ffb418d223931809402e5487bc6b1dc0d Remove unneeded cast in GPS driver
		2979d146422908e108cecfe37094c191521810ed remove unneeded include
		8dbb1fc8d443b1f8e2e454d4b82051fa63a48398 remove unneeded include
		67a35eb0b509b2394f82773c460a6492471efd37 remove unneeded files
		57569482ad5739bb4471826014818c92bdb33c6d remove unneeded friend
		632a0866ef16723dd6e1f0a2f7c575706b9e10cc remove unneeded functionality in template
		eab9ddb21273234fce7c610f664a35d2dae64a55 ROMFS: Set unneeded string during startup
		0aaabaee0974aaca354e95f403cca3317fd1a83e VTOL: Remove unneeded headers
		d4a5f345aabc83506b05277b9dcf71e24700c70d Remove unneeded apps from build
		780451dd65db72aa28b75ddad2effbbba8db8626 Remove unneeded file
		760e72cc721c6a2b90515d37eba705c30be4928e Remove unnecessary commands, unneeded output / resets
		ae4339ce1e3046e44387f9c9e7a66827b859a653 Update MAVLink version, remove unneeded INT frames
		76f7960d77046c33a771be49b57e32c957e7a2ef Mavlink text feedback: Remove now unneeded audio tag for critical messages, make overall printing more efficient. Remove buffers where no buffers are needed.
		055e45935534b409cd3ed68c837399461e448b3e Remove unneeded headers
		783a2403969032e8c0119196cb94c092847965d1 Function naming and remove unneeded sprintf
		b1539d8a74a1874abcb5e64f1813bd6ba9f0353f Removed further unneeded commands and other things eating space
		2dc3cf5e43154a516505d768885e734a5ab25e14 Remove unneeded header and commented out dead code from MEAS airspeed driver
		a4ecdc95828484370e0e399d2f3c8b0e28f5c585 Removed unneeded flush
		35369471db820ba79e9803d4a48ea74ad6843e86 working on better status reporting, removed unneeded fake PWM generation from FMU
		9f15f38e5705d73e1dfdf381c8d3b458a8a1557b Merged, removed unneeded line
		9f35de51a60fcbe207974be43648aa523926f115 Removed unneeded header
Results: x/62

timeout			18
		f3a904c1096665a3baa157ebcf77e10bea2a1c47 Jenkins: HIL increase timeout
		c39a21aa54d52338459e37dcc12dced8084fb72a ekf2: selector remove special timeout condition
		682db4b8ac8cbf326cc4e957f676bcfe2eac9312 dshot: timeout if commands are not processed
		c35293107de41e1f2ee41901d2f574d28f22a34f tailsitter.cpp:If transition timeout,abort transition
		a5a457d7440c41544c86ff628aa40ad6b19611be sensors: relax default data_validator timeout 20->40ms
		c6dd03a8aaba78d29bd8ac4a8e78a848a1dae189 Tools/HIL/run_nsh_cmd.py - raise timeout slightly
		375b014444f5ff9cbd94f28a391ebc522ab09840 protocol_splitter: reduce poll timeout from 100ms to 10ms
		e33d2141ec1eb86bbcf61300b6887d1ce94b510c px4io: Changing the timeout time description (NFC)
		847b3b5b64538e6d3c27fdcde50adee6f7510637 Tools/HIL/nsh_param_set.py bump timeout slightly
		9b7170551c2b2b23ae3bc587c365ecbef8160a84 ModuleBase: allow configurable timeout for wait_until_running()
		ac2b38603c2cd361741cdeabb49ad3d9cbc6c535 microRTPS: client: add missing "-p" option for the UART poll timeout and use microsecs for the send/rcv thread sleeps
		d9e31d67aa0d742e709616c349f3fc958598c9e2 gps: Updated timeout time for the rover with moving base
		541697d193a65f75eda8d6d593a3460fe41e924d NuttX Backports Fixing SDIO/SDMMC Data Timeouts
		29730e30fa45e703b296c188405b7173b1a55e49 ekf2: don't timeout in HITL mode
		f16913c175c6c9ed192f7246ad62f535ad472631 mavsdk_tests: fix timeout at 1x speed
		8b3aa46c01c78852e6dbc9bca398abec93116426 [UAVCANv1] Publisher default timeout, has to be tuned further for all publishers
		52a29ac6cfbcc22bb3b4653648ba31dbb5dbc335 uavcan_stm32h7:can driver add proper timeouts
		ab69681744a51ecf77620cc1ecbfc3bb139bcc56 Add parameter for terrain timeout
		2f39651f77ff6e37adf4a6c44ac2b47455578a1c ManualControl: use current sample for timeout check
		b79553862e220a20db129298f85511697f343306 mavsdk_tests: remove timeout for mission upload
		40a452dcd2f470541d923ff8a9556fc9a40916ca ekf2: selector improve timeout handling and reporting
		c3172a91d906a9e052944dc7d4206500b18fc499 ekf2: try reselecting distance_sensor on timeout
		c524e61b973f6de96fe93edb2a3aee90c5db488f airspeed_selector: fix timeout check
		3cc53f551d724c215302fe9a76671eeb5e7d6ab4 MAVSDK tests: Use full system timeout off Depending on loop iterations for timeouts is not accurate, as usleep behavior depends on the system load and asking for a 0 ms sleep can potentially return immediately.
		fb1f360724476c65115dc78ae3118f27accbbe91 mavsdk_tests: consistent 180s disarm timeout
		b491929ad68932d87506f8fcf99e2e933b88e04b Jenkins: HIL tests only finish on PASSED, FAILED, or timeout
		6579544fca2ecce4d56644c116372841c36e8e0c arm_auth: use ack reception timestamp to compute authorization timeout
		25c537bae983d639fa0336f0845a2ad8c5092c2c commander: don't impose additional timeouts in sensor checks
		2ccf664e9507513b079ea706387f6e0bf8b4f65b commander: disarm from safety relax land detector timeout
		3135b94980e509c664cc0c6bfa6db19cec460baf mavsdk_tests: use PX4 time for timeouts
		1eaceb17dc538e930253e87ffcbdb1dd37f19233 mavsdk_tests: adjust timeouts by lockstep speed up
		a3d1c94aa4b648c2d2cde70646263cbb0a524d39 logger: reduce poll timeout to 20ms
		9b2527549bf61a68cd94c0cdce51628fdc2bc788 mavsdk_tests: relax timeout for offboard goto
		ae219c3272364a4742d4bcc15cdf8f2da81ae670 esc_battery: fix timeout check
		be9f125c3d618d269c3488849e2998faba1f11e5 mavsdk_tests: raise timeout for czspawn
		9c04f66f0610577c0139997b9ff8b5bdb356665e mavsdk_tests: raise overall timeouts
		0edc2aa334378fdd883461706a38ea6b52c53876 mavsdk_tests: don't stall on timeout
		9d124c2b1ad0f29e93ae62fa9fb04a9bf5166758 mavsdk_tests: a timeout of 5min should be enough
		93be6ea49a22b08a4bc42010a7c537640eae09fc EKF: dont print wrong reset message on baro timeout
		874c6f385b2ab4ee23e33d13cbe42584fff8f399 commander: unify offboard timeouts
		55372d7cbeff7821c99a10428cdf2a1f0178f9fc Parameterize timeout for radio status
		625429d3b7cce524061b7d632a32f25e9492a9b8 fmurt1062-v1:Support configurations to fine tune LPI2C Timeouts.
		635ceccfdb9cf6bdd56ccfed5acb66d947959d50 land_detector: relax data timeouts uniformly
		dde7530df6681785e8c283315b0666d59e16e8f3 mavsdk_tests: properly handle timeout
		5f670754813932eac63f86122245cc5f60abca68 mavsdk_tests: raise timeout for realtime sim speed
		b943bd72ab20ecab155976d74986926d1c0349ea commander: Added a parameter to control the timeout period for disarming after the kill switch is engaged. (#13325)
		b1d38ee050c446a04b23b1039810b7cf6b03e1fd Navigator: VTOL: fix  mission yawing timeout (MIS_YAW_TMT)
		aae16cc5943f1ff8128f67f1d18b3407114809d7 uavcan esc: use time literals for timeout checks.
		d06c679252b7c63cf966198bda4f4353b269dcdb uavcan esc: added timeout checks to escs.
		43d006aff26e32bbd442649de3cb627be710facc mavlink command sender: give channels more time to request command - if a channel receives an ack for a command, do not immediately remove the command item from the send queue but wait until the next ack timeout occurs. This gives other mavlink channels time to try to put identical commands into the send queue.
		807cfc8aac30d57093f54f633aea1b813663d00b mavlink: fix race condition in mavlink_command_sender - if we receive an ack for a command through a specific mavlink channel then do not drop the corresponding command in the queue if this specific mavlink channel did not issue the command. If we don't do this we can end up in a situation where we associate an ack coming through a specific mavlink channel to a command in the queue which was not requested by this mavlink channel. Moreover, the actual command for which the ack was meant remains in the queue and eventually triggers a timeout.
		ffe505b76bdfa166c14abb6af13e1650aff465a3 Fixed timeout error handling
		71067a7e2de13c7860c18633b012b686840fc1a2 Fixed timeout handling
		776b1a28dec462041aedf7fef9d332bf030d589f IO mixer - cleanup FMU timeout check (comments and indentation)
		011aef54640e52b2feb4d6326cd7fd55cdead73e px4_poll posix: fix wrap-around for large timeouts
		3f691891c48f4e87ae038a485a5f0de39039f0f7 EKF: control: stop vision yaw fusion on timeout
		be8ad46fc966f526be3d164df9ecb257fc0ea06f px_uploader.py: write timeout workaround
		7a8002fdabacffbd2db9388e2df2d99f63b61871 Commander: increased hardcoded timeout time for avoidance to start.
		14415b29c16b962e27cf0d1950495a81496d5c69 Removed hardcoded onboard controller timeouts thresholds.
		13634e6757284ce49c049e49fa854776bba66aad Jenkins compile mac: double timeout (#11416)
		2e3fa30c83dc65b4d00992d15411b07c3819ab86 sitl_gazebo: update to revision that doesn't abort on timeout (#11196)
		1b685de70dad358a56b25e7bb9d106d6fbe503f4 simulator: raise timeout
		1165739a561bb234d51a4e32a69c1aa50e32305b sensors: check other gyros on timeout
		9b7857315c0b6a3c7936733e7ecc926ebe117822 sensors: handle timeout
		342c3ab202b62ef0d0ea45e6c98535934ac2674a EKF: Fix timeout parameter documentation and name
		7e12815f81275df8596c176c467643a6db01c424 Mavlink add RADIO_STATUS timeout and reset
		0c6bffb66a063b428959f1379e03f9c2f081b3b2 commander: make auto disarm timeout float
		0626527d2cb8b006c640187b03f6dc244053567d EKF2 estimator_status fill n_states and use correct type for health_flags and timeout_flags
		628079719f9afdc54b8cdc54a05df3eebaf5401d EKF: Fix inconsistency in timeout for terrain validity
		58c8c50174516759e83a0123bfc620b44ac225ac frsky_telemetry: add scanning timeout parameter, and set it to 15s
		9d1fa8cee2238199694e6b5a38d2a34ea3d4626d esc_calibration: adjust timeout when waiting for user to connect battery to 20 seconds
		26dcf05d80ff98f72c79099901d84bd3986b9291 keep ev timeout sign always positive
		477a42e6f67d88b382dd535a6d5bfb0e887055cb ekf2: Enable adjustment of nav validity timeout
		89ad46dd15c44ccb19866e54c088f2296a58b549 commander delete unused DIFFPRESS_TIMEOUT
		99c9e09624427e4ab0dd1a6b20e393919bb3d8c8 vmount mavlink input: continue to poll for vehicle_command until reaching the timeout
		f9e7c6671823095db9f77a3eb9dfad0e1e14a3c4 thread for offboard publishers, add asserts for topics to come up (simulation ready) and set mode and arming, use home_position topic as better indicator of when the simulation is ready, add more feedback to rosinfo, make timeouts meaningful (in seconds), add land and extended state values
		cf55901ac9c1f6bc66ff0f5f2a3e018d819f6be2 Calibration timeout: Triple to 90 seconds as the user can now cancel the routine
		5a17f6b2d576e19cbc22f463b08d572667de7b08 lpe: update _sensorTimeout init on constructor
		e6efb5ec0a7a857aa16f614eca65e96561059ec8 lpe: update _sensorTimeout and _sensorFault to handle support of more sensors
		9e312e8dba385be00fecff315d595077642db4f3 Uploader: Do not show timeout for larger binaries when everything is still as expected.
		2193afd0a009008a5331a86db2e76a359c2d291e fix fmu: lower polling timeout to 5ms when running as task
		fbebec5d0f0709a8e10cd7d71120ee6279844ddb navigator log RTL messages and don't print global timeout
		341bd6e8360f38336e4b1bba4031deb30560f5a9 commander: add timeout test for global position data
		040639837eaa4f1fb9180039eca88ce04cd53ed5 EKF: Use common timeout test for reporting deadreckoning
		fb42db41d26ff89da7ab5160adb117a278dda546 spektrum_rc: raise poll timeout to 50ms/20Hz
		c91f827072b1c128d357af81c72581c3f63958e2 sensors app: Always run validator so it gets updated and can detect timeouts
		e9737d6f7a78d2f0ccc2e0dba2344647a813c01c Preflight checks: made sure pre-flight check results are always reported first thing on the console and always on new or re-established telemetry links AFTER waiting for the hotplug timeout (leads to double publishing on the console when a new link is established, but this is the best compromise between fixing and completely restructuring)
		b870f92e1cf0eb0999dc17c2fd12def4b8bb717b DataValidator: use 32bit timeout instead of 64bit, saves memory
		c5f750dcca156ce84d1156ba66f7d25b797c3f45 ekf reset: more granular reset / timeout strategy for gps fusion
		c4eb65862f307de4b679e24f44fab0c565d7c2a3 Reduce esc calibration pwm timeout (#5011)
		056f73f5d279435a6bb2f77174bb8bfa1e556416 Changed LPE distance sensor timeout logic. (#4996)
		de675845afe69e5d1e622382cd5db6ed645bc90c Fix navigator timeout logic
		ced83762689d900a448074b65b25e2344a17f1e9 added offboard lost actions with additional timeout
		87e5499ad2fea2329a9a40ddfcfe49b2b454687d stop spamming console with timeout warnings
		afefa4d2a0abf51bc9766e070d99c7b324649de9 gps: use a max poll timeout of 50ms to check for orb msgs more often
		a7417657c36f4af4f9a30dd7b6ab60eb392b2bcd EKF: ensure fusion timeout counters are reset when required
		9259406a2981083e08d6497376251eb0aa7c5e81 generate_listener.py: add a timeout of 2 seconds
		3981f06d4239155e65751de6f0bcb4ba7c8d295a Reject arming timeout
		e5dfda6d46464d8d1331bb1337c6d90cde22db47 uart_esc: remove timeout printf
		f5e0c72ea0b3487b2385f5f7c269b54e14400b31 FixedwingLandDetector: timeout fixes
		2f69afb738aba6f542aa71e20b5437063a1f76f5 Temporarily quiet a noisy timeout warning on pixracer board.
		9e77f554d222308c37cecf15b17c738695825ba1 px4_qurt_tasks: fix timeout calculation
		570fb97163e4a9c798c9f5d9db2109d874903879 updated timeout logic to work only on waypoints with forced headings, updated param docs accordingly
		bb4decfa8b6cbf03ee4408ec6554f72565277de7 implemented basic heading timeout for waypoint acceptance, added parameter for yaw error on waypoint heading acceptance, set yaw timeout for vtol default
		2fa73802464ed7e3ff6ef9a2efdde3ec0c50f72c Front transition timeout
		a402b3beeb51f56d6bde5f6f92a65a1e7a28b020 change frsky_telemetry default port to USART8 for pixracer add a 50msec timeout to poll calls in sPort_telemetry to prevent hangs
		66bc96f4b3dd50ac35693ca8401767f825c163dd S.BUS: Adjust timeout interval
		4b319d2fc6044cfc245f8431a81bc8f19399e148 PWM out sim: Fix corner cases in startup and timeout handling
		4fa0123652a3f99009aea1ca1f71b1f7436131cb Navigator: Only indicate timeout if we really time out
		d97ead81aa249ba82f518e6f7c59bd50e5f0d5d3 set talt timeout to 10sec
		11c6ee2b5a9115b0b0e6727bd6f2df574ad447f3 make terrain estimate invalid after range sensor timeout
		635bfb6a7b4df37add20af8f5582b23ed992e03d CAN driver RX queue reduced to 21 frames per interface; poll() timeout set to 3 ms
		7d2ba975115baf9a901d23e8baab83e4ec5e8a47 Fixed poll timeout bug
		293bd026d0197f87896b3941651340cfcc10a4ca EKF: Set mag timeout
		46f7404078c7e6cc1ef0f51ce3ea40a1a7ebd3e3 Q estimator: Set mag timeout
		dee7f1d956460b8391713aeeccf9aff773af0a9c Data validator: Add option to configure timeout
		425d4316d1bb18b930aa324e50754673c26927f6 Data validator: Increase timeout interval
		1198a79a71286098aa1f7ed6f0b1617086ab128d Data validation: Initial concept of RMS + timeout based data validators and validation groups of N sensors
		a1fd088e8f29d6803404ab6b1e12c525cdb95c79 MAVLink app: Rely on booted state, not on timeout for parameters. This fixes any param timing issues for good.
		8f4b9c02f0f68ddc69b11c5045dac672ccb886b3 EKF: Fix for the GPS timeout logic
		fe357a9a667e5076fccbdb28ee9bcae55c18f5b1 Separate timeouts for battery and high pwm
		cd67609da5755dae6cd81e60bb611e498ff2d180 PreflightCheck: Reduce GPS timeout to 2 sec
		897827832029c3d2c9775ec0e7de919a8c1b62c2 EKF combined att + pos estimator: Robustify against mag 0 vectors and timeouts
		a098ca4ec68b8737243d8e7aab5bdb2db4d842a1 Move autosave into the 1-second timeout check.
		ee6da71efaad4ef9935803494201a47ace6d8e2a Commander: Timeout position estimates if we receive none for 1 full second
		c1e13e5afba251723cec51539ae08840d1fe3b29 AttPosEKF: Fix GPS loss timeout not resetting properly
		11469ad9b5e54167604f4b46dd0b826ba4f1889b px_uploader: Small fix to properly display timeouts
		552ff809693d340ba6f5fed6837b99effe8bf2c3 Fix NSH timeout logic
		be269520382adbd4bea59c439599897a53109ad7 px4 nodehandle: nuttx: call spin once also after timeout
		676cb91a1d973313e15597280121c52cc2d84e43 Hotfix for PX4IO comms: Raise timeout to 10 ms.
		d18f3ee70d5fbeb150c6b37ccafa4f622494ec19 make rc loss timeout a param
		1d9c99956f3f84e4350734f1eef41df4c03411f8 make rc loss timeout a param
		03d30acec504dd9393d0254ac01f2c594f78c40c Merge pull request #1320 from PX4/i2c_timeout
		3dc1d868d1f9e4ef27c366d80be129c67da42920 Merge branch 'master' of github.com:PX4/Firmware into i2c_timeout
		9825ed8f3cd037b8fd131a911ba350a29203ef0c Attempt at fixing programming timeouts
		de7d9c5b95a75f01f5731c79a07156a9bf37684b Merge pull request #1293 from PX4/timeout_fix
		75dfb0d84d73e56d624c062ba3f35b88505a2f93 Merge pull request #1236 from PX4/real_life_timeouts
		3257cd9151597d0ed0121ae0cb94ce7a3cae0c5c Merge branch 'master' into real_life_timeouts
		a35814d15b1317f73f325e98f0500f5fd1233583 dl loss: correct timeout, add hysteresis also for regain
		dcf114aa65273d5d5ce522565fc364fc347ba3fe data link loss timeout as param
		d4eae37e478860a59e21f3caceb3d8fc28f9fa7c Commander: Only consider latest active data link heartbeat for timeout.
		3195eb100516b7a4aabadd3e2640434678dbc7ad estimator: Remove bogus timeout flag, do not reset states not in need of a reset. Do not alter baro offset or GPS positions.
		3015f2e7af94e684c666689aa70c602f79810218 mavlink: retry timeout moved to define
		33067373614e50e3be068d30f3ad3b718d16df5f mavlink: send MISSION_REQUEST after short timeout when receiving mission, remove all "target id mismatch" warnings
		22aaae197b443cc7248588ebdf6aeffe078e0a43 Merge branch 'rc_timeout' into mpc_rc
		db474072a7ada907d62ac994d961ac10d90d92a6 Merge branch 'rc_timeout' into mpc_rc
		d6e6ee34401d79d428c025458940bbbf42f62236 Merge branch 'rc_timeout' of https://github.com/TickTock-/Firmware into rc_merged
		e4a4430f9f0be24c661e507f6e959a571937934c Merge branch 'master' into rc_timeout
		ca77c380b5ce9094d58b23ac73f3b0c1cec3d046 sensors: Keep looping in sensors app even if gyros do not update any more. There are lots of other reasons we might want to keep clocking the system. This resolves the RC timeout dependency in HIL.
		88149311ea687b62ba28e036e7de09ed2763f2bc Merge branch 'rc_timeout' into mpc_rc
		b6e00431dc184997cf63489d15c7bd3c0712b597 Merge branch 'master' into rc_timeout
		aa9ce7cd24791e3e0fe9d1066a29a080cf85c2e8 Merge branch 'master' into rc_timeout
		605d7277d8941430589b50ed26d145136c9ab117 Merge branch 'master' into rc_timeout
		0b45e01db9deb5b6fdb07920403e270bc1b32b63 Merge branch 'failsafe_sbus_cleanup' into rc_timeout
		2aa9e3bd780ca0d7c97d72c8f3a6973e32ed2cb3 Merge pull request #796 from PX4/rc_timeout_fix
		88cf841f00b499792780195de63018b3bd49f683 Bump RC timeout for all cases to half a second
		b1d39e65a61ec17d2da30ad37068758ab23d3ba3 commander: position timeout increased to 30ms
		92a6c7d7344ae0a463e0c04c3b5bc6cf8f4ddc53 Set timeouts back to short, now that we have multiple tries in the uploader. This ensures we try often enough in the 200 ms IO bootloader wait phase to hit it.
		4124417934932907d4663d23e44ab2f436064b58 position_estimator_inav: GPS topic timeout detection fixed, messages about GPS signal state in mavlink added
		57769ec4371df6ceabacf11aa130c4e8f4eb0240 Reducing timeout to 0.5 seconds
		1f800edc7676a6ea13127746ce38787a1e98b935 Still threshold increased to 0.1m/s^2, and orientation error threshold to 5m/s^2. Timeout increased to 30s.
		686139c7d8229365fd3b8f4bd6cdaab0d2f06b8b HACK: don't call the card-changed callback with interrupts disabled, as it means that timeouts don't work.
		e7df439ea1f99f26969b6b741a239c722599f194 Hotfix: Extend GPS lost timeout by a small delta to prevent timeout aliasing, GPS app does not report any more losses
		cc628fbc27794fee52e3a6f33d091758ca1cb51a Add missing mixer ok check in override mode, clear FMU lost alarm when setting FMU_OK flag, print AP RX timeout in production mode as well
		4216982d54a858cb8ad8dbf68d2b7499348cd5e2 Made timeouts configurable, untested
		d36eb8a3fcce358409a7205bbd75576a447ac7b4 Sped up MTK configuration but the detection time can still be improved: timeouts/usleeps
		f14c90c2220fffc51bc6e6e89bac6f9e726ff505 Some timeout needed to be raised for now to make ubx with baudrate 9600 working
		bc35bb23dd8cb035c080f8ef8b4cd7a30d5184c2 HOTFIX: disable interrupt-driven I2C mode, configure pessimistic I2C timeout, correct handling of the NAK generation for I2C master reads.
		5c60ed9a9457e3ab0c51584e7e0db59bdbe4fd87 Fix up FMU input timeout handling. Fix the FMU auto OK LED status. Strip out unused fields from the system state structure.
		f81d00594c156c51ab976d3b6d101915377d7afa Made PX4IO FMU timeout based on IOs HRT, updating mixers now on every FMU update and not at fixed rate, this is WIP and currently does not support mixing with RC-only
		74d543cfc9e2d63caf2d10b4a93227608a2c2930 Made u-blox timeouts more forgiving
		b871d28c6df1ff9ed7c640d5d0147083e91cac5e Avoid trying to adjust the port timeout once it's open; Windows apparently doesn't like this.
		a9c4fabda6cccb15912348ac5061827a6cb38304 Change the EEPROM read/write timeout behavior so that we can get actual errors rather than just hanging forever.
		be85f895a0fbb90aa3b0628c8173574375ac1c07 Use a much shorter timeout for normal communication, and stretch it only when we are waiting for erase.
		702c78383eb73b12503cd51ec80a22f6185e9de8 Add a timeout to the STMPE11 touchscreen driver to catch missing pen up events
Results: x/175
