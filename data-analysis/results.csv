project,commit,hash,message,antipattern,keyword

"Android app manager
"," #1
",[980febbe5e1af05a21c9f08a8133e8b2804f2265](https://github.com/ros-android/android_app_manager/commit/980febbe5e1af05a21c9f08a8133e8b2804f2265),Increase wifi timeout.,"Smith:Where_Was_I
New:Hard-coded-timing",increase

"Android app manager
"," #2
",[feaf968ca40f8869989d7fa899a3dca678fb741c](https://github.com/ros-android/android_app_manager/commit/feaf968ca40f8869989d7fa899a3dca678fb741c),Fix a variety of potential hang-ups with the starting application dialog,X,hang

"arduino-esp32
"," #1
",[d1025b6b5d98686abdf9d8c450f07da27e3b6012](https://github.com/espressif/arduino-esp32/commit/d1025b6b5d98686abdf9d8c450f07da27e3b6012),"Update esp32-hal-i2c.c

wait for data to be latched and increase timeout in attempt to fix clock stretch issues

Connected issues:

http://esp32.com/viewtopic.php?f=19&t=632&p=2832#p2801

https://github.com/espressif/arduino-esp32/issues/81

https://github.com/espressif/arduino-esp32/issues/53

https://github.com/espressif/arduino-esp32/issues/11","New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"arduino-esp32
"," #2
",[51a4432ca8e71be202358ceb068f3047bb8ad762](https://github.com/espressif/arduino-esp32/commit/51a4432ca8e71be202358ceb068f3047bb8ad762),"HTTPClient Port (#347)

* Fix possible infinite loop in the example



* Remove workaround of sockets always return -76



Remove workaround of sockets always return -76 (because it's fixed on IDF now)

Remove delay during handshake (improving stability)



* Remove unusable mbedtls_net of context creation



* Fix bad destructor



* Compatibility with WiFiClient for HTTPClient



* Initial port from ESP8266



Changed SHA1 fingerprint by Root CA verification

Changed log system



* Remove deprecated function",X,infinite

"arduino-esp32
"," #3
",[dcdf8132d6b8aaf146ad16f5e5c60a93c887ad6b](https://github.com/espressif/arduino-esp32/commit/dcdf8132d6b8aaf146ad16f5e5c60a93c887ad6b),"Increase partition size to 1.25MB so BT and WiFi can fit

Fixes: https://github.com/espressif/arduino-esp32/issues/339",New:Hard-coded-fine-tuning,increase

"arduino-esp32
"," #4
",[4495659ac53bcdc4f8e59d6918b3e472903d63a7](https://github.com/espressif/arduino-esp32/commit/4495659ac53bcdc4f8e59d6918b3e472903d63a7),Increase the memory for loop task,New:Hard-coded-fine-tuning,memory

"arduino-esp32
"," #5
",[e3a5ae439bb94ae13bd970d9484d4665e1df4972](https://github.com/espressif/arduino-esp32/commit/e3a5ae439bb94ae13bd970d9484d4665e1df4972),"clean up faster (fixes #828) (#1087)

flush tcp buffer instead of reading it byte by byte.",X,faster

"arduino-esp32
"," #6
",[a59eafbc9dfa3ce818c110f996eebf68d755be24](https://github.com/espressif/arduino-esp32/commit/a59eafbc9dfa3ce818c110f996eebf68d755be24),"Update IDF to aaf1239 (#1539)

* fix sdmmc config



* Fix warnings in EEPROM



from @Curclamas



* remove leftover TAG in EEPROM



* Initial add of @stickbreaker i2c



* Add log_n



* fix warnings when log is off



* i2c code clean up and reorganization



* add flags to interrupt allocator



* fix sdmmc config



* Fix warnings in EEPROM



from @Curclamas



* remove leftover TAG in EEPROM



* fix errors with latest IDF



* fix debug optimization (#1365)



incorrect optimization for debugging tick markers.



* Fix some missing BT header



* Change BTSerial log calls



* Update BLE lib



* Arduino-ESP32 release management scripted (#1515)



* Calculate an absolute path for a custom partitions table (#1452)



* * Arduino-ESP32 release management scripted

(ready-to-merge)



* * secure env for espressif/arduino-esp32



* * build tests enabled

* gitter webhook enabled



* * gitter room link fixed

* better comment



* * filepaths fixed



* BT Serial adjustments



* * don't run sketch builds & tests for tagged builds



* Return false from WiFi.hostByName() if hostname is not resolved



* Free BT Memory when BT is not used



* WIFI_MODE_NULL is not supported anymore



* Select some key examples to build with PlatformIO to save some time



* Update BLE lib



* Fixed BLE lib



* Major WiFi overhaul



- auto reconnect on connection loss now works

- moved to event groups

- some code clean up and procedure optimizations

- new methods to get a more elaborate system ststus



* Add cmake tests to travis



* Add initial AsyncUDP



* Add NetBIOS lib and fix CMake includes



* Add Initial WebServer



* Fix WebServer and examples



* travis not quiting on build fail



* Try different travis build



* Update IDF to aaf1239



* Fix WPS Example



* fix script permission and add some fail tests to sketch builder



* Add missing space in WiFiClient::write(Stream &stream)",X,memory

"arduino-esp32
"," #7
",[28a410dd503c2ae0f5bb82d471097b9abafe2e90](https://github.com/espressif/arduino-esp32/commit/28a410dd503c2ae0f5bb82d471097b9abafe2e90),"Spurious Interrupts Temporary fix 20180711 (#1625)

the 'eject' ERROR is and indication of an interrupt triggering without an source.  I am working to eliminate these serviceable interrupt.  This update increase stability on a HelTek Wifi Lora 32 board. with a SSD1306 OLED.  This update fixes a glaring error in the interrupt allocation code, the Interrupt mask was wrong.  I also dynamically adjust the FiFo thresholds based on Bus clockrate. The change to FiFo thresholds has reduced the number for 'eject' events.  I also change 'eject' from and ERROR to DEBUG.  An 'eject' event does not compromise i2c transmissions. It happens after a transaction has completed.



Chuck.",General:Hard-coding,increase

"arduino-esp32
"," #8
",[8d7fb58672c3e506660268de4a69759a36d1cceb](https://github.com/espressif/arduino-esp32/commit/8d7fb58672c3e506660268de4a69759a36d1cceb),"Fix for spurious interrupts during I2C communications (#1665)

This version no longer needs an interrupt for each byte transferred. It only needs interrupts for START, STOP, FIFO empty/Full or error conditions.  This dramatically reduces the interrupt overhead.  I think the prior version was causing an interrupt overload condition where the ISR was not able to process every interrupt as they happened.",Smith:General:Unnecessary_Processing,overhead

"arduino-esp32
"," #9
",[328523f5e3289de193e04aaf4bf13f9672078fd6](https://github.com/espressif/arduino-esp32/commit/328523f5e3289de193e04aaf4bf13f9672078fd6),"Memory leak (#1672)

When a package of size 0 arrives, ""buf"" is created, but never released. (Sorry, that was my mistake in the last patch)",General:C:not_deallocating,memory

"arduino-esp32
"," #10
",[80c110ece70b179ddfe686e8ee45b6c808779454](https://github.com/espressif/arduino-esp32/commit/80c110ece70b179ddfe686e8ee45b6c808779454),Add more methods to access memory properties,X,memory

"arduino-esp32
"," #11
",[a0f0bd930cfd2d607bf3d3288f46e2d265dd2e11](https://github.com/espressif/arduino-esp32/commit/a0f0bd930cfd2d607bf3d3288f46e2d265dd2e11),"Fix BTserial memory leaks (#1801)

- Delete queue at end

- Close BT connection before end

- DeInit SPP",General:C:not_deallocating,memory

"arduino-esp32
"," #12
",[b37f4069e481b9c8ce0d18a107eb9a99374f82a5](https://github.com/espressif/arduino-esp32/commit/b37f4069e481b9c8ce0d18a107eb9a99374f82a5),"Increase _network_event_task priority (#2184)

Fixes https://github.com/espressif/arduino-esp32/issues/1595","General:Hard-coding
New:Fixed_Communication_Rate",increase

"arduino-esp32
"," #13
",[c827bb4177702ce202ca3c966f3ce7564444df5b](https://github.com/espressif/arduino-esp32/commit/c827bb4177702ce202ca3c966f3ce7564444df5b),"CPU and APB Frequency support (#2220)

* Add support to HAL for APB frequencies different than 80MHz



* Add support for CPU frequencies in the IDE board menu



* Switch to fast set_config



* Add method to uart so debug can be reassigned after apb frequency switch



* Return real APB frequency",X,fast

"arduino-esp32
"," #14
",[229d9b7366deee0d8a90fb69c19119f7287c9d1d](https://github.com/espressif/arduino-esp32/commit/229d9b7366deee0d8a90fb69c19119f7287c9d1d),"[WiFiClientSecure] Shows only free internal heap on logs (#2252)

* Shows only free internal heap on logs



Since Mbedtls is running only on internal heap, show internal + PSRAM available memory on logs can confuse the users



* Clarify logs",X,memory

"arduino-esp32
"," #15
",[9a7946e6859130146e56231c27a4aa177d9175a1](https://github.com/espressif/arduino-esp32/commit/9a7946e6859130146e56231c27a4aa177d9175a1),"I2C fix READ of zero bytes hardware hang (#2301)

The i2c peripheral will hang if a READ request is issued with a zero data length.  The peripheral

drops into a continuous timeout interrupt response.  The STOP command can not be set out to the I2C

bus. The SLAVE device correctly ACK'd the address byte, with READ bit set, it has control of the SDA

 pin.  The ESP32 send out the next SCL HIGH pulse but, since the SLAVE is in READ Mode, and the First

bit it is sending happened to be a ZERO, the ESP32 cannot send the STOP.  When it releases SDA during

the SCL HIGH, the pin does not change state.  The pin stays low because the SLAVE is outputing a LOW!

The ESP32 drops into a perminent WAIT state waiting for SDA to go HIGH (the STOP).



**esp32-hal-i2c.c**

* add databuff length checks to `i2cRead()` and `i2cWrite()`",X,hang

"arduino-esp32
"," #16
",[a87b2ec69054ce43a48bd042599b4185267ebc1d](https://github.com/espressif/arduino-esp32/commit/a87b2ec69054ce43a48bd042599b4185267ebc1d),"Fix AsyncUDP receive memory leak (#2607)

If _handler is set, pbuf_free is not called. ~AsyncUDPPacket() calls pbuf_free once but only after calling pbuf_ref in it's constructor. The refcount never reaches zero and the memory allocated for pbuf is never released.",General:C:not_deallocating,memory

"arduino-esp32
"," #17
",[619568db5bcc219091c653a5ced5e378b3a5643b](https://github.com/espressif/arduino-esp32/commit/619568db5bcc219091c653a5ced5e378b3a5643b),"Converted EEPROM library to use nvs instead of partition.   (#2678)

* Converted EEPROM library to use nvs instead of partition.  Removed eeprom partition from all partition table CSV files.

* Changed variable names, added some comments, formatting as per me-no-dev's requests

* Checks for memory on malloc

* Moved include nvs.h from header to code

* Reworked the extra example to make it more clear how to actually use the library and persist data",X,memory

"arduino-esp32
"," #18
",[ab309e40d5f7a593f36f456976973ed7589a1f04](https://github.com/espressif/arduino-esp32/commit/ab309e40d5f7a593f36f456976973ed7589a1f04),"Copy ESP8266 String w/SSO to ESP32 repo (#2715)

I redid the ESP8266 WString library to enable small string optimization

(SSO) a while back, and think it would be helpful even on the ESP32 with

its higher memory complement.



SSO avoids lots of tiny mallocs() on the heap which cause fragmentation

by using the memory in the class object itself to store the actual

string and only mallocing() for buffers that are larger than what can

fit in thie class object.  Modern C++ std::string implementations have

this optimization as well, but since we're using Arduino strings we had

to roll our own.",X,memory

"arduino-esp32
"," #19
",[e1548e9b7e0b6e519a7f59052817152bfb16ab59](https://github.com/espressif/arduino-esp32/commit/e1548e9b7e0b6e519a7f59052817152bfb16ab59),Fix hang on client disconnect during upload (#2914),X,hang

"arduino-esp32
"," #20
",[390da0d09080ac6689a6337f0085f4cd2dc3ffb9](https://github.com/espressif/arduino-esp32/commit/390da0d09080ac6689a6337f0085f4cd2dc3ffb9),bump CONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM to improve RX performance (#3119),New:Hard-coded-fine-tuning,performance

"arduino-esp32
"," #21
",[b3ba80d57036aa57469653d23cab7cc9029d2ff2](https://github.com/espressif/arduino-esp32/commit/b3ba80d57036aa57469653d23cab7cc9029d2ff2),"nvs_handle is an int, was assigning NULL.  Also cleaned up end to ensure no memory leak. (#3246)",X,memory

"arduino-esp32
"," #22
",[5bff89f0be51da3a6306a342e75517f861ba61c9](https://github.com/espressif/arduino-esp32/commit/5bff89f0be51da3a6306a342e75517f861ba61c9),Fixed issue-3153 - Allocating enough memory to construct the entire UUID as a String. (#3297),New:Hard-coded-fine-tuning,memory

"arduino-esp32
"," #23
",[38c4c0610846b7193e908b474e2c8db06ae981ba](https://github.com/espressif/arduino-esp32/commit/38c4c0610846b7193e908b474e2c8db06ae981ba),"Support for Master mode, Pin and SSP (#3219)

* 20190916 - initial: support for Master mode, Pin and SSP



* 20190916 - initial: Add example app for Master mode



* 20190916 - initial: Force another build



* 20190916 - connect would use resolved address as preference and remove now redundant _remote_address



* 20190916 - rework set/reset/default pin logic



* 20190916 - cleanup: remove static vars, add/use constants, fix typos



* 20190916 - fix build issues and implement geoup events for status verification.



* 20190916 - remove extra lines,misc



* 20190916 - rework ESP_BT_GAP_DISC_RES_EVT, added SPP_DISCONNECTED bit for disconnect event. + timeout for disconnect()



* 20190916 - Small log change to improve log sequencing



* 20190916 - remove static from local vars



* 20190916 - Limited scope and duration for the scan, log device address during scan in info mode as it is very difficult to find out sometimes. Fixed get_name_from_eir() not resetting the name when called.



* 20190916 - break property for loop during scan when name matches.



* 20190916 - misc



* 20190916 - SPP_DISCONNECT state updates



* 20190916 - formatting, remove some strange syntax from initiator code



* 20190916 - Add comments to the example about connect(...) usage and timeouts



* 20190916 - fix disconnect() without timeout



* 20190916 - Add example comment to view BT address and name during connect(name)



* 20190916 - wording in example comments



* 20190916 - rework connect() and disconnect() methods to help with concurrency and more authoritative status returned back to caller. Automatic disconnect in connect() methods



* 20190916 - optimize code



* 20190916 - optimize code - more



* 20190916 - add timeout for pin set



* 20190916 - change scan mode to ESP_BT_SCAN_MODE_CONNECTABLE_DISCOVERABLE



* 20190916 - update example code slightly



* 20190916 - increase READY_TIMEOUT to 10 secs



* 20190916 - typo in example and move waitForConnect() to static area



* 20190916 - update example comments



* 20190916 - update example comments



* 20190916 - update example comments



* 20190916 - add new example to remove paired devices from ESP32



* 20190916 - correct typo in example



* 20190916 - update example comment, add remove_bond_device() method for convenience.



* 20190916 - reword example comment.



* 20190916 - rename remove_bond_device()



* 20190916 - rename removePairedDevice() to unpairDevice()



* 20190916 - code review changes



* 20190916 - fix return value in setup() od example",X,increase

"arduino-esp32
"," #24
",[cec3fca4ad4a39feb463f9298ab3238819732d50](https://github.com/espressif/arduino-esp32/commit/cec3fca4ad4a39feb463f9298ab3238819732d50),"Fix BluetoothSerial crash when restart (#3471)

* Update esp32-hal-bt.c



BluetoothSerial crash when restart:  this is because the BT controller remains in state  ESP_BT_CONTROLLER_STATUS_INITED instead of state  ESP_BT_CONTROLLER_STATUS_IDLE after the end() method.

in file esp_bt.h it is specified



> @brief Enable BT controller.

>                Due to a known issue, you cannot call esp_bt_controller_enable() a second time

>                 to change the controller mode dynamically. To change controller mode, call

>                esp_bt_controller_disable() and then call esp_bt_controller_enable() with the new mode.



after **esp_bt_controller_disable()** the controller remains in state INITED so we do call the **esp_bt_controller_deinit()** function to put the controller into state IDLE.



i have modified the **esp32-hal-bt.c** file

line 57 and next

(i have insert the esp_bt_controller_deinit() function so the controller go into Idle state)

```c++

bool btStop(){

    if(esp_bt_controller_get_status() == ESP_BT_CONTROLLER_STATUS_IDLE){

		log_i(""bt stopped"");

        return true;

    }

    if(esp_bt_controller_get_status() == ESP_BT_CONTROLLER_STATUS_ENABLED){

		log_i(""bt enabled"");

        if (esp_bt_controller_disable()) {

            log_e(""BT Disable failed"");

            return false;

        }

        while(esp_bt_controller_get_status() == ESP_BT_CONTROLLER_STATUS_ENABLED);

    }

    if(esp_bt_controller_get_status() == ESP_BT_CONTROLLER_STATUS_INITED){

		log_i(""inited"");

		if (esp_bt_controller_deinit()) {

			log_e(""BT deint failed"");

			return false;

		}

		while (esp_bt_controller_get_status() == ESP_BT_CONTROLLER_STATUS_INITED);

        return true;

    }

    log_e(""BT Stop failed"");

    return false;

}

```



* Update esp32-hal-bt.c



remove while to avoid infinite loop",Smith:Where_Was_I,infinite

"arduino-esp32
"," #25
",[9ad860758cedfa5d2fa7d7c7ba0870e91f7d5fec](https://github.com/espressif/arduino-esp32/commit/9ad860758cedfa5d2fa7d7c7ba0870e91f7d5fec),"Fix Memory leak in addApbChangeCallback()  (#3560)

* `ledcWriteTone()` added a `apbcallback()` evertime the tone value was non zero.

* `addApbChangeCallback()` did not detect duplicate callbacks.

* changed the apbcallback list to a double link to support roll forward, roll back execution.  This made the sequences of clock change callback start with the newest registered -> to oldest on the `before` then oldest -> newest after the clock change.  This made the UART debug log output have minimal gibberish during the clock change.

* change how the UART callback handled the MUTEX because if any `apbchangeCallback()` executed a `log_x()` a deadlock would occur.



This fixes #3555",General:C:not_deallocating,memory

"arduino-esp32
"," #26
",[89351e3ade9a62edd891e363de08c124395dc0ad](https://github.com/espressif/arduino-esp32/commit/89351e3ade9a62edd891e363de08c124395dc0ad),"Update WiFiClient.cpp (#3608)

fixed the connected() function so that it only checks errno if recv returns a value of -1.



""in the even of an error, errno is set to indicate the error"" --manpage



This fixes the ESP32 Webserver when dealing with a modern webserver with a slow SD card.",X,slow

"arduino-esp32
"," #27
",[32d5654aa66f52054d500501decf3f0d281021f6](https://github.com/espressif/arduino-esp32/commit/32d5654aa66f52054d500501decf3f0d281021f6),"Implement rmtLoop to be able to continuously send pulses (#3650)

Number of pulses is limited to the reserved RMT memory for the channel. Very useful for PWM, Servo and other repeatable signals.",X,memory

"arduino-esp32
"," #28
",[80f9f9aeec393ec29b343cee111528f2c026f8c4](https://github.com/espressif/arduino-esp32/commit/80f9f9aeec393ec29b343cee111528f2c026f8c4),"fix removeApbChangeCallback() error in spiStopBus() (#3675)

* fix removeApbChangeCallback() error in spiStopBus()



spiStartBus() was using spiStopBus() to init the hardware, one of spiStopBus() functions is to unregister the runtime CPU clock speed change callback. But, spiStartBus() only wanted to init the hardware.  This patch separates the hardware init into a standalone function spiInitBus() that both spiStartBus() and spiStopBus() call.



* Update esp32-hal-spi.c



capitalization problem",X,runtime

"arduino-esp32
"," #29
",[b2c678877c04428f06ec5f1f59cc4d204bcd05ec](https://github.com/espressif/arduino-esp32/commit/b2c678877c04428f06ec5f1f59cc4d204bcd05ec),"std::shared_ptr Memory Leak (#3680)

* std::shared_ptr Memory Leak



clientSocketHande and _rxBuffer are std::shared_ptr, the stop() call was not correctly releasing them and the operator= had similar problems fix for #3679



* operator= second attempt



* operator= third time",General:C:not_deallocating,memory

"arduino-esp32
"," #30
",[109ba7a3b44cf0d89068aa0ec812271d3bc4acbc](https://github.com/espressif/arduino-esp32/commit/109ba7a3b44cf0d89068aa0ec812271d3bc4acbc),"Revert ""std::shared_ptr Memory Leak (#3680)"" (#3682)

This reverts commit b2c678877c04428f06ec5f1f59cc4d204bcd05ec.",X,memory

"arduino-esp32
"," #31
",[ab23e8a65678d62323e023f4b9069378a3053bd2](https://github.com/espressif/arduino-esp32/commit/ab23e8a65678d62323e023f4b9069378a3053bd2),"Greatly reduces error rate (half, or 0 zero errors, depends on in/out ranges) for round-trip mapping at the same performance. (#3655)

(Based on ""improved_map"" from ESP8266's Servo.cpp)",New:rounded_numbers,performance

"arduino-esp32
"," #32
",[e4b2ce4e8149f4afe823e870378b25ca2049a54b](https://github.com/espressif/arduino-esp32/commit/e4b2ce4e8149f4afe823e870378b25ca2049a54b),"DNS resolving timeout change to prevent stack overlapping (#3731)

Real DNS resolving timeout used by lwip library is 14[s] (7[s] for DNS1 + 7[s] for DNS2). Function WiFiGenericClass::hostByName() has timeout set to lower value (only 4[s]), so callback function may be called after this low timeout and it may overlappe stack memory used now by other function.

Fixes #3722","New:Hard-coded-fine-tuning
New:Hard-coded-timing",memory

"arduino-esp32
"," #33
",[c917ed25049714a6761a8cb5e16a1fb869e88507](https://github.com/espressif/arduino-esp32/commit/c917ed25049714a6761a8cb5e16a1fb869e88507),"shallow clone to make installation faster (#4246)

shallow clone (board and submodules) to make installation faster",X,faster

"arduino-esp32
"," #34
",[dccb4e8608a580cd9d27a29da85fa36c316482e2](https://github.com/espressif/arduino-esp32/commit/dccb4e8608a580cd9d27a29da85fa36c316482e2),"improve & fix BLEScan when wantDuplicates (#3995)

* improve & fix BLEScan when too many BLE devices

- when wantDuplicates, no need to check duplicate and no more insert into vector

- delete advertisedDevice when not insert into vector, fix memory leak

- add showParse when you just want raw advertised data",General:C:not_deallocating,memory

"arduino-esp32
"," #35
",[e4b008e712101f0e0cb3301b4bc80e23fa31dae2](https://github.com/espressif/arduino-esp32/commit/e4b008e712101f0e0cb3301b4bc80e23fa31dae2),"Handle stream timeouts properly, for slow HTTP/HTTPS links (#3752)

This patch fixes update timeouts (error #6) on slow HTTP/HTTPS links.",X,slow

"arduino-esp32
"," #36
",[c6a8da61f78452573df857cb95edb3a5ecd0365f](https://github.com/espressif/arduino-esp32/commit/c6a8da61f78452573df857cb95edb3a5ecd0365f),"Allow faster reuse of socket, to be able to restart WifiServer. (#4306)

See #3960 for more details of the problem and the solution. I only implemented what was proposed in this ticket, as it solves my problem, which was the same as in this ticket. Credits for the code going to @etrinh ;-)



This also is a more consistence behaviour compared to esp8266, where it also is possible to restart the wifiserver immediately on the same port.",X,faster

"arduino-esp32
"," #37
",[7e8993fc838db37f4d47c7836c002f60ff73d39a](https://github.com/espressif/arduino-esp32/commit/7e8993fc838db37f4d47c7836c002f60ff73d39a),"Speed up upload by a factor of 17 (#4787)

* Speed up upload by a factor of 17



Uploads are very slow because of an unnecessary ""client.connected()"" check in _uploadReadByte().



Here is what happens:

client.connected() is called for every byte read.  WiFiClient::connected() calls recv(fd(), &dummy, 0, MSG_DONTWAIT); which takes a relatively long time, so the optimized path of returning a buffered byte via client.read() is effectively nullified.



Removing the one line changed the upload speed for a 2 MB file (discarding the received data) from 22 KB/sec (before) to 367 KB/sec (after).



The change is safe in the face of disconnects because client.read(), when it no longer has buffered data, calls (WiFiClient)  fillBuffer(), which calls recv(), so the disconnection will be detected in due course.



* Move disconnect check into the timeout loop",Smith:General:Unnecessary_Processing,slow

"arduino-esp32
"," #38
",[e831680a41d4c96769cae7277501ce41abe69eee](https://github.com/espressif/arduino-esp32/commit/e831680a41d4c96769cae7277501ce41abe69eee),"Fixed a memory leak in BLE (issue #4753) (#4761)

* Fixed crash on delete after disconnect



* Fixed memory leak when getting characteristics



* Removed guard



Co-authored-by: ushiboy <ushiboy.dev@gmail.com>",General:C:not_deallocating,memory

"arduino-esp32
"," #39
",[8134a42162f11cb01155038a2465848d6b2b84bc](https://github.com/espressif/arduino-esp32/commit/8134a42162f11cb01155038a2465848d6b2b84bc),Fix leak of memory and possible crashes in AsyncUDP,X,memory

"arduino-esp32
"," #40
",[560c0f45f58b907f0d699f65408b87fe54650854](https://github.com/espressif/arduino-esp32/commit/560c0f45f58b907f0d699f65408b87fe54650854),"Fix dropped SSL connection when buffer gets full. (#4820)

mbedTLS requires repeated calls to mbedtls_ssl_write() whenever it returns MBEDTLS_ERR_SSL_WANT_READ or MBEDTLS_ERR_SSL_WANT_WRITE. this happens when the client sends data faster then the server or the connection can handle.",General:C:not_deallocating,faster

"arduino-esp32
"," #41
",[dd834b3372d97193f3e82e923eb2f59d9c6da12d](https://github.com/espressif/arduino-esp32/commit/dd834b3372d97193f3e82e923eb2f59d9c6da12d),"Ensure that String::setLen() is always after any memory operation

Since `String::setLen()` is now modifying the buffer, this change is required to ensure that the proper buffer is changed.",X,memory

"arduino-esp32
"," #42
",[9a0762ad2a3773ccf919631203aa24cd311109a0](https://github.com/espressif/arduino-esp32/commit/9a0762ad2a3773ccf919631203aa24cd311109a0),"[BLE Client] Fix Deadlock when calling writeValue after registerForNotify

Fixes: https://github.com/espressif/arduino-esp32/issues/4952",General:Deadlock,deadlock

"arduino-esp32
"," #43
",[81b7c47203b7558cc634ab2b22f966aa4bbc9ce1](https://github.com/espressif/arduino-esp32/commit/81b7c47203b7558cc634ab2b22f966aa4bbc9ce1),"Serial::end hang (#5047)

workaround for #5043. There is a timing issue with HardwareSerial::end. I'm not sure what is hung, but it should be possible to see this in jtag, as it does cause a reboot if you let it. The delay needs to be before you detach the device!?",New:Hard-coded-timing,hang

"cylon
"," #1
",[6e3d7c66677f84b384d03c1803ac74fe74c4865d](https://github.com/hybridgroup/cylon/commit/6e3d7c66677f84b384d03c1803ac74fe74c4865d),"Add helpers to replace some lodash functionality


## PR
https://github.com/hybridgroup/cylon/pull/271",X,slower

"dronekit-android
"," #1
",[b1d67d71e7b1d637b314d00d8602cdc8cd674fd9](https://github.com/dronekit/dronekit-android/commit/b1d67d71e7b1d637b314d00d8602cdc8cd674fd9),Shrink joystick handle a little to increase move resolution,X,increase

"dronekit-android
"," #2
",[faf8f09a5a9eeaeca02ce59f9ecb842e7c2f0794](https://github.com/dronekit/dronekit-android/commit/faf8f09a5a9eeaeca02ce59f9ecb842e7c2f0794),Removing the need to clear the map in PlanningActivity.,Smith:General:Unnecessary_Processing,performance

"dronekit-android
"," #3
",[e41fec48360cc4720eb08f827c9a25740dc603b5](https://github.com/dronekit/dronekit-android/commit/e41fec48360cc4720eb08f827c9a25740dc603b5),"Changing the way to start a path, now you do it with a fast click.",X,fast

"dronekit-android
"," #4
",[f1ef0aea6f46b65661a4d824560cd567c6be5d2d](https://github.com/dronekit/dronekit-android/commit/f1ef0aea6f46b65661a4d824560cd567c6be5d2d),Fix the problem where you always added two waypoints when doing a fast click.,X,fast

"dronekit-android
"," #5
",[1f605c0e51de179f564b8478f68027f10be102ea](https://github.com/dronekit/dronekit-android/commit/1f605c0e51de179f564b8478f68027f10be102ea),Changing layout to increase the map size,X,increase

"dronekit-android
"," #6
",[eea6fbc8c065daef7394158504f7608f7f2440aa](https://github.com/dronekit/dronekit-android/commit/eea6fbc8c065daef7394158504f7608f7f2440aa),"Increase mission row height, so they are easier to handle",X,Increase

"dronekit-android
"," #7
",[ecf355c7f58be415934fdf05da87762c66991857](https://github.com/dronekit/dronekit-android/commit/ecf355c7f58be415934fdf05da87762c66991857),Zoom: Increase padding around bounded coords to prevent markers being positioned off-screen,X,Increase

"dronekit-android
"," #8
",[6bb4e0460ece576a7ac8a652a3e5bab33de91557](https://github.com/dronekit/dronekit-android/commit/6bb4e0460ece576a7ac8a652a3e5bab33de91557),better text layout in the telemetry. Getting the hang of it.,X,hang

"dronekit-android
"," #9
",[8f8084d3ca4f7bc6a9d584a483a60e14c8163bbb](https://github.com/dronekit/dronekit-android/commit/8f8084d3ca4f7bc6a9d584a483a60e14c8163bbb),better text layout in the telemetry. Getting the hang of it.,X,hang

"dronekit-android
"," #10
",[2c9d9bc08147b0952eba4b6ef28701641a99bb21](https://github.com/dronekit/dronekit-android/commit/2c9d9bc08147b0952eba4b6ef28701641a99bb21),TUNING: Adding code to setup the streaming rate when in the Tuning screen,New:Fixed_Communication_Rate,increases

"dronekit-android
"," #11
",[d022d2b75934df71798424e11b6db13f25ed93ee](https://github.com/dronekit/dronekit-android/commit/d022d2b75934df71798424e11b6db13f25ed93ee),Parameters: sip - ListView / Adapter model for much faster and more resource efficient parameter list,X,faster

"dronekit-android
"," #12
",[f4698eb55964af88f8aa4e31de6646c97349527f](https://github.com/dronekit/dronekit-android/commit/f4698eb55964af88f8aa4e31de6646c97349527f),UI update - increase the size of the drawer in flight screen,X,increase

"dronekit-android
"," #13
",[26cc1ab9febfb0ffa1f69c5af1d2b644c6c977ec](https://github.com/dronekit/dronekit-android/commit/26cc1ab9febfb0ffa1f69c5af1d2b644c6c977ec),Feature: Fast Increment,X,increase

"dronekit-android
"," #14
",[ce5fad7c8d6adef7065fede1f2bc6f2c2532f267](https://github.com/dronekit/dronekit-android/commit/ce5fad7c8d6adef7065fede1f2bc6f2c2532f267),Fast ince: Layout test,X,Fast

"dronekit-android
"," #15
",[ffc8e75d7c692c5977516339bb2575c4a1266d5d](https://github.com/dronekit/dronekit-android/commit/ffc8e75d7c692c5977516339bb2575c4a1266d5d),"Removed UiLanguage as functionality can be achieved by a static method using an application context object. This avoids memory allocation for the creation of the UiLanguage object, and prevent possible leakage of Activity object, as only an application context is needed to make the config update.",General:recreate_objects,memory

"dronekit-android
"," #16
",[05fdbfeff89736a3f16ad52d04383ebc03d23bfe](https://github.com/dronekit/dronekit-android/commit/05fdbfeff89736a3f16ad52d04383ebc03d23bfe),increase features of the map interface.,X,increase

"dronekit-android
"," #17
",[f82ad37e86517611fd5bf5185dc6328158983791](https://github.com/dronekit/dronekit-android/commit/f82ad37e86517611fd5bf5185dc6328158983791),Huge performance gain by using Buffered streams,General:Performance:Unbuffered_Streams,performance

"dronekit-android
"," #18
",[9c057a7b3fabe4777538b9cd965513f1310a2eff](https://github.com/dronekit/dronekit-android/commit/9c057a7b3fabe4777538b9cd965513f1310a2eff),Using ByteBuffers to read the data improves even more the performance.,X,performance

"dronekit-android
"," #19
",[086575e9e07baca5d0439bb49c96a97db6e29efb](https://github.com/dronekit/dronekit-android/commit/086575e9e07baca5d0439bb49c96a97db6e29efb),"Making the Srtm clas just read a single value to increase the performance, instead of an entire array",General:performance:using_massive_arrays_likes,performance

"dronekit-android
"," #20
",[4e87f94f41a4927872c91d7c029d8a72090e8e98](https://github.com/dronekit/dronekit-android/commit/4e87f94f41a4927872c91d7c029d8a72090e8e98),decrease size of follow type selection spinner.,X,decrease

"dronekit-android
"," #21
",[700aa17674e2b6c91272c39a03b5be543d301f4f](https://github.com/dronekit/dronekit-android/commit/700aa17674e2b6c91272c39a03b5be543d301f4f),Fix possible memory leak,X,memory leak

"dronekit-android
"," #22
",[5fa1d5313ecbc6a13ce6b6f69eb057bfdf72e60c](https://github.com/dronekit/dronekit-android/commit/5fa1d5313ecbc6a13ce6b6f69eb057bfdf72e60c),improved calibration code. runs much faster on android devices.,X,faster

"dronekit-android
"," #23
",[cadaf1fb46f9de615df75f17b03b951c9ee0102a](https://github.com/dronekit/dronekit-android/commit/cadaf1fb46f9de615df75f17b03b951c9ee0102a),Dronie: Slow down the drone as it reaches the final dronie mission,X,Slow

"dronekit-android
"," #24
",[aedc7902acf37b63b052f458b034fce6fe42619f](https://github.com/dronekit/dronekit-android/commit/aedc7902acf37b63b052f458b034fce6fe42619f),update the method signature for the 'changeVehicleMode' metho,X,increase

"dronekit-android
"," #25
",[e29a5fde6f5c871ce956ffe6659e8b34f3d8a5b2](https://github.com/dronekit/dronekit-android/commit/e29a5fde6f5c871ce956ffe6659e8b34f3d8a5b2),"increase resolution of latitude, longitude and altitude.",New:rounded_numbers,increase

"dronekit-android
"," #26
",[675898195440663b00e8fef17c25f16e61601326](https://github.com/dronekit/dronekit-android/commit/675898195440663b00e8fef17c25f16e61601326),Increase the number of threads used to retrieve drone properties.,X,Increase

"dronekit-android
"," #27
",[19a5c29337da5d104733dbb1c4be6d8fb8b0c834](https://github.com/dronekit/dronekit-android/commit/19a5c29337da5d104733dbb1c4be6d8fb8b0c834),increase altitude precision.,New:rounded_numbers,increase

"dronekit-android
"," #28
",[8d1c6819f3929093df8bf1b0388e76b047e5b068](https://github.com/dronekit/dronekit-android/commit/8d1c6819f3929093df8bf1b0388e76b047e5b068?w=1),improved performance of the mavlink processing and dispatching of events.,New:Impatient_requester,performance

"dronekit-android
"," #29
",[304d4f13b711dade2d882a4a32183b1b909d00e5](https://github.com/dronekit/dronekit-android/commit/304d4f13b711dade2d882a4a32183b1b909d00e5),increasing travis vm memory allocation.,X,memory

"dronekit-android
"," #30
",[03b9f063861914c243c082e9c9c41d55cd9db2d7](https://github.com/dronekit/dronekit-android/commit/03b9f063861914c243c082e9c9c41d55cd9db2d7),increasing gradle memory allocation.,X,memory

"dronekit-android
"," #31
",[ea3ddf18d4a295e2f6afb7dad0e4994724dc8c9e](https://github.com/dronekit/dronekit-android/commit/ea3ddf18d4a295e2f6afb7dad0e4994724dc8c9e),increasing travis vm memory allocation.,X,memory

"dronekit-android
"," #32
",[0cc25085be89f67bf2ef7d9ed562f6cbb84bb6bf](https://github.com/dronekit/dronekit-android/commit/0cc25085be89f67bf2ef7d9ed562f6cbb84bb6bf),testing with larger memory increase.,X,memory

"dronekit-android
"," #33
",[655b400a1a1732f7d4b79d1606b47eca463f8d62](https://github.com/dronekit/dronekit-android/commit/655b400a1a1732f7d4b79d1606b47eca463f8d62),increase logging for easy debugging.,X,increase

"dronekit-android
"," #34
",[4c954e7d95af483393aa8f1f1f91b35b29a4018b](https://github.com/dronekit/dronekit-android/commit/4c954e7d95af483393aa8f1f1f91b35b29a4018b),increased the size of the memory heap.,X,memory

"dronekit-android
"," #35
",[27b16751ffad6dccda2fb45717e61377fce28f78](https://github.com/dronekit/dronekit-android/commit/27b16751ffad6dccda2fb45717e61377fce28f78),mavlink library update to fix spurious memory allocations.,Network:performance:large_payload_sizes,memory

"dronekit-android
"," #36
",[abef06d707e79d30fcbc0a8053df377035541162](https://github.com/dronekit/dronekit-android/commit/abef06d707e79d30fcbc0a8053df377035541162),Version increase for the hotfix release for release 1.5.0.,X,increase

"dronekit-android
"," #37
",[8f62427612d394a633ade3bb31bc61a5f7c51a09](https://github.com/dronekit/dronekit-android/commit/8f62427612d394a633ade3bb31bc61a5f7c51a09),"Update the connection logic for the ControlTower instance. The new logic reuse any existing services runtime, otherwise it fires its local version.",X,runtime

"dronekit-android
"," #38
",[8aa313d34c658040492f91d8bee8d05fe08e17af](https://github.com/dronekit/dronekit-android/commit/8aa313d34c658040492f91d8bee8d05fe08e17af),Increase max heap size from 2g to 4g,X,Increase

"dronekit-android
"," #39
",[ba936869a5aa894892bf51bc6df581f173e22040](https://github.com/dronekit/dronekit-android/commit/ba936869a5aa894892bf51bc6df581f173e22040),Fix infinite loop when heightStep is 0,X,infinite

"grbl
"," #1
",[b8ba8a4231676eb1bec9b73dd5862f18188c2977](https://github.com/gnea/grbl/commit/b8ba8a4231676eb1bec9b73dd5862f18188c2977),Added runtime configurable global settings with eeprom persitence,X,runtime

"grbl
"," #2
",[e409f10047fb8e3d2265513abb2d8144b00d9b78](https://github.com/gnea/grbl/commit/e409f10047fb8e3d2265513abb2d8144b00d9b78),moved all strings to pgm-memory,X,memory

"grbl
"," #3
",[937c70cb50e0eb0c91f5f1c7ed2d3c470cb30962](https://github.com/gnea/grbl/commit/937c70cb50e0eb0c91f5f1c7ed2d3c470cb30962),Grbl can now take advantage of the extra memory in the 328,"New:Hard-coded-fine-tuning
New:Hard-coded-timing",memory

"grbl
"," #4
",[ef61efbf704af5ca736e87905155fefedea8be83](https://github.com/gnea/grbl/commit/ef61efbf704af5ca736e87905155fefedea8be83),makes sure steppers cruise at exactly nominal rate to eliminate rounding errors. Possibly fixes the problem where some moves have a long tail of slow steps. (Untested),New:rounded_numbers,slow

"grbl
"," #5
",[c02a6e23664511b01f0d7859c4432c79a3050feb](https://github.com/gnea/grbl/commit/c02a6e23664511b01f0d7859c4432c79a3050feb),"possible improvement on the long, slow tail problem",X,slow

"grbl
"," #6
",[1ed2195e11c4aae1797b49fae2ed8c7883d5b3ed](https://github.com/gnea/grbl/commit/1ed2195e11c4aae1797b49fae2ed8c7883d5b3ed),a new (slightly inelegant) stab at eliminating the slow tail problem,X,slow

"grbl
"," #7
",[ea5b8942db2616e93fc0478922010c3bab7c0481](https://github.com/gnea/grbl/commit/ea5b8942db2616e93fc0478922010c3bab7c0481),"Moved comment and block delete handling to be done in protocol.c rather than gcode.c. Prevents these from being held in memory. Also, fixes bug when comments and block delete character are mixed with g-code.",X,memory

"grbl
"," #8
",[a2837943c014590704e57bca8597b9d8654f1b17](https://github.com/gnea/grbl/commit/a2837943c014590704e57bca8597b9d8654f1b17),"Revert ""Moved comment and block delete handling to be done in protocol.c rather than gcode.c. Prevents these from being held in memory. Also, fixes bug when comments and block delete character are mixed with g-code.""

This reverts commit ea5b8942db2616e93fc0478922010c3bab7c0481.",X,memory

"grbl
"," #9
",[896a6b9199395eb9dbfd42134d84ba40a332eb36](https://github.com/gnea/grbl/commit/896a6b9199395eb9dbfd42134d84ba40a332eb36),"Moved comment and block delete handling into protocol.c from gcode.c. Fixes bug when comment and block delete are not isolated. Blank lines ignored.

Comments, block delete characters, and blank lines are no longer passed
to the gcode parser and should free up some memory by ignoring these
characters. Gcode parser now expects clean gcode only. There was a bug
if there were block deletes or comments not in the first character (i.e.
spindle on/off for proofing geode without turning it on, or a NXX
followed by a comment). This should fix it by bypassing the problem.
Left a commented line for easily turning on and off block deletes for a
later feature, if desired.",X,memory

"grbl
"," #10
",[badb638df925924c05b3b5e49880590e53faa759](https://github.com/gnea/grbl/commit/badb638df925924c05b3b5e49880590e53faa759),"Moved comment and block delete handling into protocol.c from gcode.c. Fixes bug when comment and block delete are not isolated. Blank lines ignored.

Comments, block delete characters, and blank lines are no longer passed
to the gcode parser and should free up some memory by ignoring these
characters. Gcode parser now expects clean gcode only. There was a bug
if there were block deletes or comments not in the first character (i.e.
spindle on/off for proofing geode without turning it on, or a NXX
followed by a comment). This should fix it by bypassing the problem.
Left a commented line for easily turning on and off block deletes for a
later feature, if desired.",X,memory

"grbl
"," #11
",[d75ad82e4932aea166c189e4160e197e4710c191](https://github.com/gnea/grbl/commit/d75ad82e4932aea166c189e4160e197e4710c191),"Minor update for memory savings in ring buffer and fleshed out commenting.

No changes in functionality. Path vectors moved from ring buffer to
local planner static variables to save 3*(BUFFER_SIZE - 1) doubles in
memory. Detailed comments. Really need to stop micro-updating. Should be
the last until a planner optimization (ala Jens Geisler) has been
completed.",X,memory

"grbl
"," #12
",[ffcc3470a31411b63aa57d12cc58cc306a1fb660](https://github.com/gnea/grbl/commit/ffcc3470a31411b63aa57d12cc58cc306a1fb660),"Optimized planner re-write. Significantly faster. Full arc support enabled by rotation matrix approach.

- Significant improvements in the planner. Removed or reordered
repetitive and expensive calculations by order of importance:
recalculating unchanged blocks, trig functions [sin(), cos(), tan()],
sqrt(), divides, and multiplications. Blocks long enough for nominal
speed to be guaranteed to be reached ignored by planner. Done by
introducing two uint8_t flags per block. Reduced computational overhead
by an order of magnitude.   - Arc motion generation completely
re-written and optimized. Now runs with acceleration planner. Removed
all but one trig function (atan2) from initialization. Streamlined
computations. Segment target locations generated by vector
transformation and small angle approximation. Arc path correction
implemented for accumulated error of approximation and single precision
calculation of Arduino. Bug fix in message passing.",Smith:General:Unnecessary_Processing,faster

"grbl
"," #13
",[4d03c4febc94eaaaa6906a70c99ebb7c7e4947b1](https://github.com/gnea/grbl/commit/4d03c4febc94eaaaa6906a70c99ebb7c7e4947b1),"Further planner improvements and misc minor bug fixes. Memory savings and increased buffer size.

- Update grbl version and settings version to automatically reset
eeprom. FYI, this will reset your grbl settings. - Saved
3*BLOCK_BUFFER_SIZE doubles in static memory by removing obsolete
variables: speed_x, speed_y, and speed_z. - Increased buffer size
conservatively to 18 from 16. (Probably can do 20). - Removed expensive!
modulo operator from block indexing function. Reduces significant
computational overhead. - Re-organized some sqrt() calls to be more
efficient during time critical planning cases, rather than non-time
critical. - Minor bug fix in planner max junction velocity logic. -
Simplified arc logic and removed need to multiply for CW or CCW
direction.",X,memory

"grbl
"," #14
",[110faae986eef6c4398c166a81c91cbd1d5a3bf4](https://github.com/gnea/grbl/commit/110faae986eef6c4398c166a81c91cbd1d5a3bf4),"More '%' modulo opertor removals and some housecleaning.

- Serial functions contained quite a few modulo operations that would
be executed with high frequency when streaming. AVR processors are very
slow when operating these. In one test on the Arduino forums, it showed
about a 15x slow down compared to a simple if-then statement. -
Clarified some variable names and types and comments.",X,slow

"grbl
"," #15
",[e8a6bfd179a594fd8237f5f9720bb337f758760c](https://github.com/gnea/grbl/commit/e8a6bfd179a594fd8237f5f9720bb337f758760c),"Position reporting, refactored system variables, serial print fixes, updated streaming scripts.

- Added machine position reporting to status queries. This will be
further developed with part positioning/offsets and maintaining
location upon reset.

- System variables refactored into a global struct for better
readability.

- Removed old obsolete Ruby streaming scripts. These were no longer
compatible. Updated Python streaming scripts.

- Fixed printFloat() and other printing functions.

- Decreased planner buffer back to 18 blocks and increased TX serial
buffer to 64 bytes. Need the memory space for future developments.

- Begun adding run-time modes to grbl, where block delete toggle, mm/in
reporting modes, jog modes, etc can be set during runtime. Will be
fleshed out and placed into EEPROM when everything is added.","New:Hard-coded-fine-tuning
New:Hard-coded-timing",memory

"grbl
"," #16
",[79e0fd594b4481fc74eac9c6669fef1a994c6b48](https://github.com/gnea/grbl/commit/79e0fd594b4481fc74eac9c6669fef1a994c6b48),"Added step pulse delay after direction set (Compile-time option only). Updated read me.

Added a compile-time only experimental feature that creates a
user-specified time delay between a step pulse and a direction pin set
(in config.h). This is for users with hardware-specific issues
(opto-couplers) that need more than a few microseconds between events,
which can lead to slowly progressing step drift after many many
direction changes. We suggest to try the hack/fix posted in the Wiki
before using this, as this experimental feature may cause Grbl to take
a performance hit at high step rates and about complex curves.",New:Hard-coded-timing,performance

"grbl
"," #17
",[d30cb906f886e71987ce986effbd1c9368aca479](https://github.com/gnea/grbl/commit/d30cb906f886e71987ce986effbd1c9368aca479),"Updated limit/homing routine. Works, but needs more TLC.

- Added acceleration to the homing routine.

- Homing now accounts for different step rates when moving multiple
axes without exceeding acceleration limits.

- Homing now updates all internal positioning variables to machine zero
after completion.

- ""Poor-man's"" debounce delay added.

- Updated the delay_us() function to perform faster and more accurate
microsecond delays. Previously, the single increments would add
noticeable time drift for larger delays.

- Fix a bug in the stepper.c prescalar calculations that was changed in
the last commit.

- Other minor fixes.",New:Hard-coded-timing,faster

"grbl
"," #18
",[9b4e1089058411b2b2889cdbc45a0c2a737b6320](https://github.com/gnea/grbl/commit/9b4e1089058411b2b2889cdbc45a0c2a737b6320),"(2x) speed increase in printFloat() function. Decimal places setting added.

- printFloat() function execution doubled in speed. This is a precursor
to status reporting, since GUIs may query real-time position rapidly.

- Decimal places added to settings (for now). This may disappear in
future pushes, but here for testing purposes.",X,increase

"grbl
"," #19
",[34f6d2eb4b3e25aec008889451e6fd4276ee055b](https://github.com/gnea/grbl/commit/34f6d2eb4b3e25aec008889451e6fd4276ee055b),"Minor updates, improvements, and bug fixes.

- Allowed status_message function to be called by others. This is to
centralize all feedback into protocol.c.

- Fixed a bug where line number words 'N' were causing the parser to
error out.

- Allowed homing routine feed rates to move slower than the
MINIMUM_STEP_RATE parameter in config.h.

- Homing performs idle lock at the end of the routine.

- Stepper idle lock time will now not disable the steppers when the
value is set at 255. This is accomodate users who prefer to keep their
axes enabled at all times.

- Moved some defines around to where they need to be.",X,slower

"grbl
"," #20
",[df5bb70b2515b8bc05ca7c90abf1b221f63aeafe](https://github.com/gnea/grbl/commit/df5bb70b2515b8bc05ca7c90abf1b221f63aeafe),"Hard limits, homing direction, pull-off limits after homing, status reports in mm or inches, system alarm, and more.

- Thank you statement added for Alden Hart of Synthetos.

- Hard limits option added, which also works with homing by pulling off
the switches to help prevent unintended triggering. Hard limits use a
interrupt to sense a falling edge pin change and immediately go into
alarm mode, which stops everything and forces the user to issue a reset
(Ctrl-x) or reboot.

- Auto cycle start now a configuration option.

- Alarm mode: A new method to kill all Grbl processes in the event of
something catastrophic or potentially catastropic. Just works with hard
limits for now, but will be expanded to include g-code errors (most
likely) and other events.

- Updated status reports to be configurable in inches or mm mode. Much
more to do here, but this is the first step.

- New settings: auto cycle start, hard limit enable, homing direction
mask (which works the same as the stepper mask), homing pulloff
distance (or distance traveled from homed machine zero to prevent
accidental limit trip).

- Minor memory liberation and calculation speed ups.",X,memory

"grbl
"," #21
",[e0a9054e32f6e00cf6931552b11b9f201e240bf0](https://github.com/gnea/grbl/commit/e0a9054e32f6e00cf6931552b11b9f201e240bf0),"New report module. 6 persistent work coordinates. New G-codes and settings. README and minor bug updates

(NOTE: This push is likely buggy so proceed with caution. Just
uploading to let people know where we're going.)

- New report.c module. Moved all feedback functions into this module to
centralize these processes. Includes realtime status reports, status
messages, feedback messages.

- Official support 6 work coordinate systems (G54-G59), which are
persistently held in EEPROM memory.

- New g-code support: G28.1, G30.1 stores current machine position as a
home position into EEPROM. G10 L20 Px stores current machine position
into work coordinates without needing to explicitly send XYZ words.

- Homing performed with '$H' command. G28/G30 no longer start the
homing cycle. This is how it's supposed to be.

- New settings: Stepper enable invert and n_arc correction installed.

- Updated and changed up some limits and homing functionality. Pull-off
travel will now move after the homing cycle regardless of hard limits
enabled. Fixed direction of pull-off travel (went wrong way).

- Started on designing an internal Grbl command protocol based on the
'$' settings letter. Commands with non numeric characters after '$'
will perform switch commands, homing cycle, jogging, printing
paramters, etc. Much more to do here.

- Updated README to reflect all of the new features.",X,memory

"grbl
"," #22
",[303cf59f5246b46d0775b31290c04b5712ff4b2c](https://github.com/gnea/grbl/commit/303cf59f5246b46d0775b31290c04b5712ff4b2c),"Added block delete, opt stop, single block mode. New parser state and parameter feedback. Overhauled '$' command.

NOTE: Another incremental update. Likely buggy, still a ways to go
before everything is installed, such as startup blocks.

- Changed the '$' command to print help. '$$' now prints Grbl settings.
The help now instructs the user of runtime commands, switch toggling,
homing, etc. Jogging will be added to these in v0.9.

- Added switches: block delete, opt stop, and single block mode.

- Now can print the g-code parser state and persistent parameters
(coord sys) to view what Grbl has internally.

- Made the gc struct in the g-code parser global to be able to print
the states. Also moved coordinate system tracking from sys to gc struct.

- Changed up the welcome flag and updated version to v0.8c.

- Removed spindle speed from gcode parser. Not used.",X,runtime

"grbl
"," #23
",[4c711a4af7a21b1005bd2ac59a423b021ae831fb](https://github.com/gnea/grbl/commit/4c711a4af7a21b1005bd2ac59a423b021ae831fb),"New startup script setting. New dry run, check gcode switches. New system state variable. Lots of reorganizing.

(All v0.8 features installed. Still likely buggy, but now thourough
testing will need to start to squash them all. As soon as we're done,
this will be pushed to master and v0.9 development will be started.
Please report ANY issues to us so we can get this rolled out ASAP.)

- User startup script! A user can now save one (up to 5 as compile-time
option) block of g-code in EEPROM memory. This will be run everytime
Grbl resets. Mainly to be used as a way to set your preferences, like
G21, G54, etc.

- New dry run and check g-code switches. Dry run moves ALL motions at
rapids rate ignoring spindle, coolant, and dwell commands. For rapid
physical proofing of your code. The check g-code switch ignores all
motion and provides the user a way to check if there are any errors in
their program that Grbl may not like.

- Program restart! (sort of). Program restart is typically an advanced
feature that allows users to restart a program mid-stream. The check
g-code switch can perform this feature by enabling the switch at the
start of the program, and disabling it at the desired point with some
minimal changes.

- New system state variable. This state variable tracks all of the
different state processes that Grbl performs, i.e. cycle start, feed
hold, homing, etc. This is mainly for making managing of these task
easier and more clear.

- Position lost state variable. Only when homing is enabled, Grbl will
refuse to move until homing is completed and position is known. This is
mainly for safety. Otherwise, it will let users fend for themselves.

- Moved the default settings defines into config.h. The plan is to
eventually create a set of config.h's for particular as-built machines
to help users from doing it themselves.

- Moved around misc defines into .h files. And lots of other little
things.",X,memory

"grbl
"," #24
",[9cabc915ef9096b470e236679db70834f6fc9e7a](https://github.com/gnea/grbl/commit/9cabc915ef9096b470e236679db70834f6fc9e7a),"Runtime command pinned out! Re-organized coolant pins.

- Pinned out cycle start(A2), feed hold(A1), and reset(A0) runtime
commands. These pins are held high with the internal pull-up resistor
enabled. All you have to do is connect a normally-open switch to the
pin and ground. That's it.

- Moved the coolant control pins to A3 (and the optional mist control
to A4).

- Moved all of the MASK defines into the config.h file to centralize
them.",X,runtime

"grbl
"," #25
",[f41dd6927378c7a2600b2b177aadd59a2fc83ad3](https://github.com/gnea/grbl/commit/f41dd6927378c7a2600b2b177aadd59a2fc83ad3),"Tweaks and bug fixes. Increase to 3 startup blocks. Remove purge/added unlock command

- Increased the number of startup blocks to 3 for no good reason other
than it doesn't increase the flash size.

- Removed the purge buffer command and replaced with an disable homing
lock command.

- Homing now blocks all g-code commands (not system commands) until the
homing cycle has been performed or the disable homing lock is sent.
Homing is required upon startup or if Grbl loses it position. This is
for safety reasons.

- Cleaned up some of the Grbl states and re-organized it to be little
more cohesive.

- Cleaned up the feedback and status messages to not use so much flash
space, as it's a premium now.

 - Check g-code and dry run switches how are mutually exclusive and
can't be enabled when the other is. And automatically resets Grbl when
disabled.

- Some bug fixes and other minor tweaks.",X,increase

"grbl
"," #26
",[3082fdbb6d7e24527915ebc16d5dcf545bc2929c](https://github.com/gnea/grbl/commit/3082fdbb6d7e24527915ebc16d5dcf545bc2929c),"Planner execution time halved and bug fixes. Increased step rate limit to 30kHz.

- Planner execute speed has been more than halved from 4ms to 1.9ms
when computing a plan for a single line segment during arc generation.
This means that Grbl can now run through an arc (or complex curve)
twice as fast as before without starving the buffer. For 0.1mm arc
segments, this means about the theoretical feed rate limit is about
3000mm/min for arcs now.

- Increased the Ranade timer frequency to 30kHz, as there doesn't seem
to be any problems with increasing the frequency. This means that the
maximum step frequency is now back at 30kHz.

- Added Zen Toolworks 7x7 defaults.","New:Hard-coded-fine-tuning
New:Hard-coded-timing",fast

"grbl
"," #27
",[4f273db8058f6c8a83fc9b7dac2ee0542b80dfd6](https://github.com/gnea/grbl/commit/4f273db8058f6c8a83fc9b7dac2ee0542b80dfd6),"(Another) Planner bug fix.

- Oops again. Thought the new planner changes made things much better,
but there was a bug. Improvements we on the order of 20% execution time
reduction, rather than half. The increase to 30kHz Ranade timer
frequency also increased the overall overhead, so the total planner
change? Zero. But, it's still better.",X,increase

"grbl
"," #28
",[a1397f61c4862f95f85f12e5facc103b0d836f54](https://github.com/gnea/grbl/commit/a1397f61c4862f95f85f12e5facc103b0d836f54),"Max velocity axes independence installed. Fixed intermittent slow trailing steps. Timer0 disable fix.

- Maximum velocity for each axis is now configurable in settings. All
rapids/seek move at these maximums. All feed rates(including rapids)
may be limited and scaled down so that no axis does not exceed their
limits.

- Moved around auto-cycle start. May change later, but mainly to ensure
the planner buffer is completely full before cycle starting a streaming
program. Otherwise it should auto-start when there is a break in the
serial stream.

- Reverted old block->max_entry_speed_sqr calculations. Feedrate
overrides not close to ready at all.

- Fixed intermittent slow trailing steps for some triangle velocity
profile moves. The acceleration tick counter updating was corrected to
be exact for that particular transition. Should be ok for normal
trapezoidal profiles.

- Fixed the Timer0 disable after a step pulse falling edge. Thanks
@blinkenlight!","New:Hard-coded-fine-tuning
New:Hard-coded-timing",slow

"grbl
"," #29
",[c8b53b9d0a341e978d6faa02359e409159f4a388](https://github.com/gnea/grbl/commit/c8b53b9d0a341e978d6faa02359e409159f4a388),"Slow trailing steps fix. Added more defaults.

- Fixed an issue (hopefully) with slow trailing steps after a
triangular velocity profile move. Sets the trapezoid tick cycle counter
to the correct value for an accurate reproduction of the deceleration
curve. Keeps it from arriving too early to the target position, which
causes the slow trailing steps.

- Added Zen Toolworks 7x7 to default settings.

- Updated readme with new edge build.",X,slow

"grbl
"," #30
",[3dfffa622d53e7727600249123ddc0c7db4f8954](https://github.com/gnea/grbl/commit/3dfffa622d53e7727600249123ddc0c7db4f8954),"Arc mm_per_segment removed, now in terms of tolerance. Stepper ramp counter variable type corrected.

- Arc mm_per_segment parameter was removed and replaced with an
arc_tolerance parameter, which scales all arc segments automatically to
radius, such that the line segment error doesn't exceed the tolerance.
Significantly improves arc performance through larger radius arc,
because the segments are much longer and the planner buffer has more to
work with.

- Moved n_arc correction from the settings to config.h. Mathematically
this doesn't need to be a setting anymore, as the default config value
will work for all known CNC applications. The error does not accumulate
as much anymore, since the small angle approximation used by the arc
generation has been updated to a third-order approximation and how the
line segment length scale with radius and tolerance now. Left in
config.h for extraneous circumstances.

- Corrected the st.ramp_count variable (acceleration tick counter) to a
8-bit vs. 32-bit variable. Should make the stepper algorithm just a
touch faster overall.",X,performance

"grbl
"," #31
",[5e7c25d4801d79a84e45b42da24b5f5f0db56426](https://github.com/gnea/grbl/commit/5e7c25d4801d79a84e45b42da24b5f5f0db56426),"Updated README. Max step rate back at 30kHz. Acceleration minor bug fix.

- Returned the max step rate to 30kHz. The new arc algorithm works uses
so much less CPU overhead, because the segments are longer, that the
planner has no problem computing through them.

- Fixed an issue with the acceleration independence scaling. Should now
work with accelerations above 400mm/sec^2 or so.

- Updated README","New:Hard-coded-fine-tuning
New:Hard-coded-timing",overhead

"grbl
"," #32
",[3c9c516a4770b3a7d7d63b4d51cbb5b28c1131fd](https://github.com/gnea/grbl/commit/3c9c516a4770b3a7d7d63b4d51cbb5b28c1131fd),"Untested! Soft limits, max travel, homing changes, new settings.

- WARNING: Completely untested. Will later when there is time. Settings
WILL be overwritten, as there are new settings.

- Soft limits installed. Homing must be enabled for soft limits to work
correctly. Errors out much like a hard limit, locking out everything
and bringing up the alarm mode. Only difference is it forces a feed
hold before doing so. Position is not lost.

- IMPORTANT: Homing had to be updated so that soft limits work better
with less CPU overhead. When homing completes, all axes are assumed to
exist in negative space. If your limit switch is other side, the homing
cycle with set this axis location to the max travel value, rather than
zero.

- Update mc_line() to accept an array, rather than individual variables.

- Added an mc_auto_cycle_start() function handle this feature.
Organization only.

-",X,overhead

"grbl
"," #33
",[1fa3dad20617b4673765d7846208807345aa82cd](https://github.com/gnea/grbl/commit/1fa3dad20617b4673765d7846208807345aa82cd),"Updates to edge/dev. Line buffer increased/planner buffer decreased. Line overflow feedback.

- Increased g-code parser line buffer to 70 characters (from 50) to
prevent some long arc commands from getting truncated.

- Decreased planner buffer from 18 to 17 blocks to free up memory for
line buffer.

- Added a line buffer overflow feedback error (Thanks @BHSPitMonkey!)",New:Hard-coded-fine-tuning,memory

"grbl
"," #34
",[8a10654b1cb694f4b24f7fd247acc345f3275d28](https://github.com/gnea/grbl/commit/8a10654b1cb694f4b24f7fd247acc345f3275d28),"New stepper subsystem bug fixes.

- New stepper algorithm with the new optimized planner seems to be
working nearly twice as fast as the previous algorithm.

- For one, the planner computation overhead is probably a fraction of
what it used to be with the worst case being about half still.

- Secondly, anytime the planner plans back to the first executing
block, it no longer overwrites the block conditions and allows it to
complete without lost steps. So no matter if the streams slows, the
protected planner should keep the steppers moving without risk of lost
steps (although this still needs to be tested thoroughly and may
audibly sound weird when this happens.)

- It now seems that the bottleneck is the serial baudrate (which is
good!)",X,fast

"grbl
"," #35
",[0cb5756b5310b8bf0cbc554393d14e86a0186c05](https://github.com/gnea/grbl/commit/0cb5756b5310b8bf0cbc554393d14e86a0186c05),"Fine tuning of new stepper algorithm with protected planner. Adaptive step prediction for segment buffer.

- Cleaned up the new stepper algorithm code with more commenting and
better logic flow.

- The new segment buffer now predicts the number of steps each segment
should have to execute over about 8 milliseconds each (based on the
ACCELERATION_TICKS_PER_SECOND setting). So, for when the whole segment
buffer is full, the stepper algorithm has roughly 40 milliseconds of
steps queued before it needs to refilled by the main program.

- Readjusted the max supported step rate back to 30kHz from the lower
development 20kHz. Everything still works amazing great and the test
CNC machine still runs twice as fast with the new stepper algorithm and
planner.

- Upped the standard serial baudrate to 115200 baud, as it is clear
that the bottleneck is the serial interface. Will now support this, as
well as the old 9600 baud, in new firmware builds.","New:Hard-coded-fine-tuning
New:Hard-coded-timing",fast

"grbl
"," #36
",[b36e30de2eab858b5840b49b62753c18844608f8](https://github.com/gnea/grbl/commit/b36e30de2eab858b5840b49b62753c18844608f8),"Yet another major stepper algorithm and planner overhaul.

- Overhauled the stepper algorithm and planner again. This time
concentrating on the decoupling of the stepper ISR completely. It is
now dumb, relying on the segment generator to provide the number of
steps to execute and how fast it needs to go. This freed up lots of
memory as well because it made a lot tracked variables obsolete.

- The segment generator now computes the velocity profile of the
executing planner block on the fly in floating point math, instead of
allowing the stepper algorithm to govern accelerations in the previous
code. What this accomplishes is the ability and framework to (somewhat)
easily install a different physics model for generating a velocity
profile, i.e. s-curves.

- Made some more planner enhancements and increased efficiency a bit.

- The changes also did not increase the compiled size of Grbl, but
decreased it slightly as well.

- Cleaned up a lot of the commenting.

- Still much to do, but this push works and still is missing feedholds
(coming next.)",X,memory

"grbl
"," #37
",[2f6663a0b9d983ba857e400997f91a6fd93abe30](https://github.com/gnea/grbl/commit/2f6663a0b9d983ba857e400997f91a6fd93abe30),"Reinstated feed holds into new stepper algorithm and planner. Rough draft, but working.

- Reinstated the feed hold feature with the new stepper algorithm and
new optimized planner. It works, but will be re-factored a bit soon to
clean up the code.

- At this point, feedrate overrides may need to be installed in the
v1.0 version of grbl, while this version will likely be pushed to the
edge branch soon and pushed to master after the bugs have been squashed.

- Measured the overall performance of the new planner and stepper
algorithm on an oscilloscope. The new planner is about 4x faster than
before, where it is completing a plan in around 1ms. The stepper
algorithm itself is minutely faster, as it is a little lighter. The
trade-off in the increased planner performance comes from the new step
segment buffer. However, even in the worse case scenario, the step
segment buffer generates a new segment with a typical 0.2 ms, and the
worse case is 1ms upon a new block or replanning the active block.
Added altogether, it’s argubly still twice as efficient as the old one.",X,performance

"grbl
"," #38
",[b562845d9d20bd09426f8d20647ed334eeb7491f](https://github.com/gnea/grbl/commit/b562845d9d20bd09426f8d20647ed334eeb7491f),"Deceleration to zero speed improvements. Update defaults.

- A minor issue with deceleration ramps when close to zero velocity.
Should be virtually unnoticeable for most CNC systems, but fixed in
this push and accurate to physics.

- Updated some of the junction deviation defaults. Because the new
stepper algorithm can easily maximize a CNC machine’s capabilities or
simply go much faster, this means the speed in which it enters
junctions has to be a little more constrained. Meaning that, we have to
slow a little bit down more so that we don’t exceed the acceleration
limits of the stepper motors.",X,slow

"grbl
"," #39
",[3054b2df774c8baa19d56421466c0f3c44c00041](https://github.com/gnea/grbl/commit/3054b2df774c8baa19d56421466c0f3c44c00041),"Revamped homing cycle. Axis limits and max travel bug fixes. Build info. Refactored config.h.

- Revamped and improved homing cycle. Now tied directly into the main
planner and stepper code, which enables much faster homing seek rates.
Also dropped the compiled flash size by almost 1KB, meaning 1KB more
for other features.

- Refactored config.h. Removed obsolete defines and configuration
options. Moved lots of “advanced” options into the advanced area of the
file.

- Updated defaults.h with the new homing cycle. Also updated the
Sherline 5400 defaults and added the ShapeOko2 defaults per user
submissions.

- Fixed a bug where the individual axes limits on velocity and
acceleration were not working correctly. Caused by abs() returning a
int, rather than a float. Corrected with fabs(). Duh.

- Added build version/date to the Grbl welcome message to help indicate
which version a user is operating on.

- Max travel settings were not being defaulted into the settings EEPROM
correctly. Fixed.

- To stop a single axis during a multi-axes homing move, the stepper
algorithm now has a simple axis lock mask which inhibits the desired
axes from moving. Meaning, if one of the limit switches engages before
the other, we stop that one axes and keep moving the other.","New:Hard-coded-fine-tuning
New:Hard-coded-timing",faster

"grbl
"," #40
",[5ab2bb7767730ee32960fd53793721ec27f91fd9](https://github.com/gnea/grbl/commit/5ab2bb7767730ee32960fd53793721ec27f91fd9),"Incomplete dev code push, but working. Lots of updates/fixes/improvements. Much still to polish.

- Ugh. Github just erased my list of improvements and changes due to a
conflict and forcing me to resolve it. Hope this goes through.

- Major stepper algorithm change. Trashed the old v0.9 edge
branch-style stepper algorithm. It’s fine, but it was susceptible to
aliasing noise when moving very slow or very fast. It also had a bit of
CPU overhead. It was written to solve a standing issue with v0.8
master, where it couldn’t generate a smooth acceleration abocve
10-15kHz. But, with new step segment buffer in v0.9c, it inadvertently
fixed the acceleration problem with v0.8 stepper algorithm. So, what
does it mean for you? Smoother stepper pulses and likely higher step
frequencies.

- Stepper algorithm now uses Timer1 and Timer2, instead of Timer0 and
Timer2. Timers 0 and 2 can be swapped if there is an issue.

- With the old v0.8 stepper algorithm, the STEP_DELAY_PULSE
configuration option is also back.

- NEW! Hard limit software debouncing. Grbl now employs the AVR’s
watchdog timer as a way to monitor the hard limit pins and checking
their states after a delay. This is a simple software debouncing
technique and may help alleviate some of the false trigger some users
have been complaining about. BUT, this won’t fix electric noise issues!

- Fixed an issue with the new homing cycle routine where it wasn’t
honoring the acceleration and axis speed limits depending on the homing
cycle mask. Now does. Also, updated the homing direction mask code to
be a little cleaner.

- Moved the main part of the homing cycle control and execution to
motion_control.c, where it fits better.

- Removed the STATE_INIT system state as it was redundant. Made the
system states into bitflags so multiple system states can be checked
via one if statement.

- Reorganized the power-up routine to work with the new system states.",X,slow

"grbl
"," #41
",[47cd40c8dce6fac545119508459a4f2f0610f9ee](https://github.com/gnea/grbl/commit/47cd40c8dce6fac545119508459a4f2f0610f9ee),"Incomplete push but working. Lots more stuff. More to come.

- NEW! An active multi-axis step smoothing algorithm that automatically
adjusts dependent on step frequency. This solves the long standing
issue to aliasing when moving with multiple axes. Similar in scheme to
Smoothieware, but more advanced in ensuring a more consistent CPU
overhead throughout all frequencies while maintaining step exactness.

- Switched from Timer2 to Timer0 for the Step Port Reset Interrupt.
Mainly to free up hardware PWM pins.

- Seperated the direction and step pin assignments, so we can now move
them to seperate ports. This means that we can more easily support 4+
axes in the future.

- Added a setting for inverting the limit pins, as so many users have
request. Better late than never.

- Bug fix related to EEPROM calls when in cycle. The EEPROM would kill
the stepper motion. Now protocol mandates that the system be either in
IDLE or ALARM to access or change any settings.

- Bug fix related to resuming the cycle after a spindle or dwell
command if auto start has been disabled. This fix is somewhat temporary
or more of a patch. Doesn’t work with a straight call-response
streaming protocol, but works fine with serial buffer pre-filling
streaming that most clients use.

- Renamed the pin_map.h to cpu_map.h to more accurately describe what
the file is.

- Pushed an auto start bug fix upon re-initialization.

- Much more polishing to do!",X,overhead

"grbl
"," #42
",[cc9afdc195da0b2e71eda71ea24ddbd14378ceb1](https://github.com/gnea/grbl/commit/cc9afdc195da0b2e71eda71ea24ddbd14378ceb1),"Lots of re-organization and cleaning-up. Some bug fixes.

- Added a new source and header file called system. These files contain
the system commands and variables, as well as all of the system headers
and standard libraries Grbl uses. Centralizing some of the code.

- Re-organized the include headers throughout the source code.

- ENABLE_M7 define was missing from config.h. Now there.

- SPINDLE_MAX_RPM and SPINDLE_MIN_RPM now defined in config.h. No
uncommenting to prevent user issues. Minimum spindle RPM now provides
the lower, near 0V, scale adjustment, i.e. some spindles can go really
slow so why use up our 256 voltage bins for them?

- Remove some persistent variables from coolant and spindle control.
They were redundant.

- Removed a VARIABLE_SPINDLE define in cpu_map.h that shouldn’t have
been there.

- Changed the DEFAULT_ARC_TOLERANCE to 0.002mm to improve arc tracing.
Before we had issues with performance, no longer.

- Fixed a bug with the hard limits and the software debounce feature
enabled. The invert limit pin setting wasn’t honored.

- Fixed a bug with the homing direction mask. Now is like it used to
be. At least for now.

- Re-organized main.c to serve as only as the reset/initialization
routine. Makes things a little bit clearer in terms of execution
procedures.

- Re-organized protocol.c as the overall master control unit for
execution procedures. Not quite there yet, but starting to make a
little more sense in how things are run.

- Removed updating of old settings records. So many new settings have
been added that it’s not worth adding the code to migrate old user
settings.

- Tweaked spindle_control.c a bit and made it more clear and consistent
with other parts of Grbl.

- Tweaked the stepper disable bit code in stepper.c. Requires less
flash memory.","New:Fixed_Communication_Rate
New:Hard-coded-fine-tuning",performance

"grbl
"," #43
",[50fbc6e2972acadbe5db944ddf33d12a8d94f4a0](https://github.com/gnea/grbl/commit/50fbc6e2972acadbe5db944ddf33d12a8d94f4a0),"Refactoring and lots of bug fixes. Updated homing cycle.

WARNING: There are still some bugs to be worked out. Please use caution
if you test this firmware.

- Feed holds work much better, but there are still some failure
conditions that need to be worked out. This is the being worked on
currently and a fix is planned to be pushed next.

- Homing cycle refactoring: Slight adjustment of the homing cycle to
allow for limit pins to be shared by different axes, as long as the
shared limit pins are not homed on the same cycle. Also, removed the
LOCATE_CYCLE portion of the homing cycle configuration. It was
redundant.

- Limit pin sharing: (See above). To clear up one or two limit pins for
other IO, limit pins can now be shared. For example, the Z-limit can be
shared with either X or Y limit pins, because it’s on a separate homing
cycle. Hard limit will still work exactly as before.

- Spindle pin output fixed. The pins weren’t getting initialized
correctly.

- Fixed a cycle issue where streaming was working almost like a single
block mode. This was caused by a problem with the spindle_run() and
coolant_run() commands and issuing an unintended planner buffer sync.

- Refactored the cycle_start, feed_hold, and other runtime routines
into the runtime command module, where they should be handled here
only. These were redundant.

- Moved some function calls around into more appropriate source code
modules.

- Fixed the reporting of spindle state.",X,runtime

"grbl
"," #44
",[3df61e0ec5f7cb0b4c09a847558ecf14a8697802](https://github.com/gnea/grbl/commit/3df61e0ec5f7cb0b4c09a847558ecf14a8697802),"Homing and feed hold bug fixes.

WARNING: Bugs may still exist. This branch is a work in progress and
will be pushed to the edge branch when at beta stability. Use at your
own risk.

- Homing freezing issue fixed. Had to do with the cycle stop flag being
set incorrectly after the homing cycles and before the pull-off
maneuver. Now resets the stepper motors before this can happen.

- Fixed an issue with a rare feed hold failure. Had to do with feed
hold ending exactly at the end of a block. The runtime protocol now
sets the QUEUED and IDLE states appropriately when this occurs. Still
need to clean this code up however, as it’s patched rather than written
well.

- Updated version build via $I command.

- Forgot to comment on a new feature for the last commit. Since steps
are integers and millimeters traveled are floats, the old step segment
generator ignored the step fraction differences in generating the
segment velocities. Didn’t see like it would be much of a big deal, but
there were instances that this would be a problem, especially for very
slow feed rates. The stepper algorithm now micro-adjusts the segment
velocities based on the step fractions not executed from the previous
segment. This ensures that Grbl generates the velocity profiles EXACTLY
and noticeably improves overall acceleration performance.",X,performance

"grbl
"," #45
",[8f8d8e2887f69b86990b8cf71bc7505a071ae831](https://github.com/gnea/grbl/commit/8f8d8e2887f69b86990b8cf71bc7505a071ae831),"Added grbl planner Matlab simulator for test reference. Updated line number compile-time option.

- Added a grbl planner simulation tool that was written in Matlab and
Python. It was used to visualize the inner workings of the planner as a
program is streamed to it. The simulation assumes that the planner
buffer is empty, then filled, and kept filled. This is mainly for users
to see how the planner works.

- Updated some of the compile-time ifdefs when enabling line numbers.
The leaving the un-used line numbers in the function calls eats a
non-neglible amount of flash memory. So the new if-defs remove them.",X,memory

"grbl
"," #46
",[76ab1b6a4282ec09df7b2c1dd534b83e61b1251c](https://github.com/gnea/grbl/commit/76ab1b6a4282ec09df7b2c1dd534b83e61b1251c),"G38.2 probe feature rough draft installed. Working but needs testing.

- G38.2 straight probe now supported. Rough draft. May be tweaked more
as testing ramps up.

- G38.2 requires at least one axis word. Multiple axis words work too.
When commanded, the probe cycle will move at the last ‘F’ feed rate
specified in a straight line.

- During a probe cycle: If the probe pin goes low (normal high), Grbl
will record that immediate position and engage a feed hold. Meaning
that the CNC machine will move a little past the probe switch point, so
keep federates low to stop sooner. Once stopped, Grbl will issue a move
to go back to the recorded probe trigger point.

- During a probe cycle: If the probe switch does not engage by the time
the machine has traveled to its target coordinates, Grbl will issue an
ALARM and the user will be forced to reset Grbl. (Currently G38.3 probe
without error isn’t supported, but would be easy to implement later.)

- After a successful probe, Grbl will send a feedback message
containing the recorded probe coordinates in the machine coordinate
system. This is as the g-code standard on probe parameters specifies.

- The recorded probe parameters are retained in Grbl memory and can be
viewed with the ‘$#’ print parameters command. Upon a power-cycle, not
a soft-reset, Grbl will re-zero these values.

- Moved ‘$#’ command to require IDLE or ALARM mode, because it accesses
EEPROM to fetch the coordinate system offsets.

- Updated the Grbl version to v0.9d.

- The probe cycle is subject to change upon testing or user-feedback.",X,memory

"grbl
"," #47
",[532c359a11c71827895085e9355ba01dbad439fb](https://github.com/gnea/grbl/commit/532c359a11c71827895085e9355ba01dbad439fb),"Major g-code parser overhaul. 100%* compliant. Other related updates.

- Completely overhauled the g-code parser. It’s now 100%* compliant. (*
may have some bugs). Being compliant, here are some of the major
differences.

- SMALLER and JUST AS FAST! A number of optimizations were found that
sped things up and allowed for the more thorough error-checking to be
installed without a speed hit. Trimmed a lot of ‘fat’ in the parser and
still was able to make it significantly smaller than it was.

- No default feed rate setting! Removed completely! This doesn’t exist
in the g-code standard. So, it now errors out whenever it’s undefined
for motions that require it (G1/2/3/38.2).

- Any g-code parser error expunges the ENTIRE block. This means all
information is lost and not passed on to the running state. Before some
of the states would remain, which could have led to some problems.

- If the g-code block passes all of the error-checks, the g-code state
is updated and all motions are executed according to the order of
execution.

- Changes in spindle speed, when already running, will update the
output pin accordingly. This fixes a bug, where it wouldn’t update the
speed.

- Update g-code parser error reporting. Errors now return detailed
information of what exact went wrong. The most common errors return a
short text description. For less common errors, the parser reports
‘Invalid gcode ID:20’, where 20 is a error ID. A list of error code IDs
and their descriptions will be documented for user reference elsewhere
to save flash space.

- Other notable changes:

- Added a print integer routine for uint8 variables. This saved
significant flash space by switching from a heavier universal print
integer routine.

- Saved some flash space with our own short hypotenuse calculation

- Some arc computation flash and memory optimizations.",X,memory

"grbl
"," #48
",[015d5fa19105f90694ca46986fa264893bc7155a](https://github.com/gnea/grbl/commit/015d5fa19105f90694ca46986fa264893bc7155a),"Fixed atomic access to flags in sys.execute.

This seems to fix the bug that caused Grbl to hang during some operations,
especially jogging.",X,hang

"grbl
"," #49
",[e455faaeef61b4b094d4e2b63725cb3e31a1a603](https://github.com/gnea/grbl/commit/e455faaeef61b4b094d4e2b63725cb3e31a1a603),"New G43.1/G49 gcodes. Not working yet!!

- Pushed this uncompleted code to merge a conflicting pull request.

- New G43.1 and G49 g-codes to be installed. The beginnings of it are
in place. These g-codes are intended to be used in conjunction with
probing and allow GUIs to set tool length offsets without Grbl needing
to store a tool table.

- G43.1 is defined as a dynamic tool length offset that is not stored
in memory. Rather, when commanded, these are applied to the work
coordinates until a reset or disabled by G49. This works much like G92.",X,memory

"grbl
"," #50
",[71f333ddca8ab18be5fbc49c731984f0b8d2670e](https://github.com/gnea/grbl/commit/71f333ddca8ab18be5fbc49c731984f0b8d2670e),"Settings refactoring. Bug fixes. Misc new features.

This is likely the last major change to the v0.9 code base before push
to master. Only two minor things remain on the agenda (CoreXY support,
force clear EEPROM, and an extremely low federate bug).

- NEW! Grbl is now compile-able and may be flashed directly through the
Arduino IDE. Only minor changes were required for this compatibility.
See the Wiki to learn how to do it.

- New status reporting mask to turn on and off what Grbl sends back.
This includes machine coordinates, work coordinates, serial RX buffer
usage, and planner buffer usage. Expandable to more information on user
request, but that’s it for now.

- Settings have been completely renumbered to allow for future new
settings to be installed without having to constantly reshuffle and
renumber all of the settings every time.

- All settings masks have been standardized to mean bit 0 = X, bit 1 =
Y, and bit 2 = Z, to reduce confusion on how they work. The invert
masks used by the internal Grbl system were updated to accommodate this
change as well.

- New invert probe pin setting, which does what it sounds like.

- Fixed a probing cycle bug, where it would freeze intermittently, and
removed some redundant code.

- Homing may now be set to the origin wherever the limit switches are.
Traditionally machine coordinates should always be in negative space,
but when limit switches on are on the opposite side, the machine
coordinate would be set to -max_travel for the axis. Now you can always
make it [0,0,0] via a compile-time option in config.h. (Soft limits
routine was updated to account for this as well.)

 - Probe coordinate message immediately after a probing cycle may now
be turned off via a compile-time option in config.h. By default the
probing location is always reported.

- Reduced the N_ARC_CORRECTION default value to reflect the changes in
how circles are generated by an arc tolerance, rather than a fixed arc
segment setting.

- Increased the incoming line buffer limit from 70 to 80 characters.
Had some extra memory space to invest into this.

- Fixed a bug where tool number T was not being tracked and reported
correctly.

- Added a print free memory function for debugging purposes. Not used
otherwise.

- Realtime rate report should now work during feed holds, but it hasn’t
been tested yet.

- Updated the streaming scripts with MIT-license and added the simple
streaming to the main stream.py script to allow for settings to be sent.

- Some minor code refactoring to improve flash efficiency. Reduced the
flash by several hundred KB, which was re-invested in some of these new
features.",X,memory

"grbl
"," #51
",[9b9abf1b2f109b705ec4caf1ce31c4e8675d2262](https://github.com/gnea/grbl/commit/9b9abf1b2f109b705ec4caf1ce31c4e8675d2262),"Fixed bug related to very very low feed rates.

- A very very low feed rate command like `G1 X100 F0.01`  would cause
some floating-point round-off error and freeze Grbl into an infinite
loop. To fix it, introduced a MINIMUM_FEED_RATE parameter in config.h
to ensure motions always complete.

- MINIMUM_FEED_RATE is set at 1.0 mm/min by default. It’s recommended
that no rates are below this value, but 0.1mm/min may be ok in some
situations.",New:rounded_numbers,infinite

"grbl
"," #52
",[b0e9a315fe39a1efcd0f2f172cd69f1a83f8f631](https://github.com/gnea/grbl/commit/b0e9a315fe39a1efcd0f2f172cd69f1a83f8f631),"Final minor updates for master release.

- Updated ShapeOko2 defaults based on machine testing of the basic
model provided by Inventables. (or close to it.) Should be pretty
conservative but much faster than before. For example, X and Y axes are
set at (10x) faster at 5000mm/min. It can run much faster than this,
but this seems like a safe speed for everyone.

- Updated README for master release.

- Added some new settings methods for clearing the EEPROM when changing
versions. Needs some more work, but it should ok for master release.
Should work on it more for the next version.",New:Hard-coded-fine-tuning,faster

"grbl
"," #53
",[9be7b3d9304a0968e238b5ef2ab8e2292aa5e351](https://github.com/gnea/grbl/commit/9be7b3d9304a0968e238b5ef2ab8e2292aa5e351),"Lot of refactoring for the future. CoreXY support.

- Rudimentary CoreXY kinematics support. Didn’t test, but homing and
feed holds should work. See config.h. Please report successes and
issues as we find bugs.

- G40 (disable cutter comp) is now “supported”. Meaning that Grbl will
no longer issue an error when typically sent in g-code program header.

- Refactored coolant and spindle state setting into separate functions
for future features.

- Configuration option for fixing homing behavior when there are two
limit switches on the same axis sharing an input pin.

- Created a new “grbl.h” that will eventually be used as the main
include file for Grbl. Also will help simply uploading through the
Arduino IDE

- Separated out the alarms execution flags from the realtime (used be
called runtime) execution flag variable. Now reports exactly what
caused the alarm. Expandable for new alarms later on.

- Refactored the homing cycle to support CoreXY.

- Applied @EliteEng updates to Mega2560 support. Some pins were
reconfigured.

- Created a central step to position and vice versa function. Needed
for non-traditional cartesian machines. Should make it easier later.

- Removed the new CPU map for the Uno. No longer going to used. There
will be only one configuration to keep things uniform.",X,runtime

"grbl
"," #54
",[76730176da0ddee2f31aea3e28e2df54342629c9](https://github.com/gnea/grbl/commit/76730176da0ddee2f31aea3e28e2df54342629c9),"Arduino IDE compatibility and minor homing fixes

- Added an include in the right spot, if a user tries to compile and
upload Grbl through the Arduino IDE with the old way.

- Fixed a minor bug with homing max travel calculations. It was causing
simultaneous axes homing to move slow than it did before.",X,slow

"grbl
"," #55
",[12f48a008a2432df99771ff3223ba3f98578acc1](https://github.com/gnea/grbl/commit/12f48a008a2432df99771ff3223ba3f98578acc1),"Grbl v1.0e huge beta release. Overrides and new reporting.

- Feature: Realtime feed, rapid, and spindle speed overrides. These
alter the running machine state within tens of milliseconds!
    - Feed override: 100%, +/-10%, +/-1% commands with values 1-200% of
programmed feed
    - Rapid override: 100%, 50%, 25% rapid rate commands
    - Spindle speed override: 100%, +/-10%, +/-1% commands with values
50-200% of programmed speed
    - Override values have configurable limits and increments in
config.h.
- Feature: Realtime toggle overrides for spindle stop, flood coolant,
and optionally mist coolant
    - Spindle stop: Enables and disables spindle during a feed hold.
Automatically restores last spindles state.
    - Flood and mist coolant: Immediately toggles coolant state until
next toggle or g-code coolant command.
- Feature: Jogging mode! Incremental and absolute modes supported.
    - Grbl accepts jogging-specific commands like $J=X100F50. An axis
word and feed rate are required. G20/21 and G90/G91 commands are
accepted.
    - Jog motions can be canceled at any time by a feed hold `!`
command. The buffer is automatically flushed. (No resetting required).
    - Jog motions do not alter the g-code parser state so GUIs don’t
have to track what they changed and correct it.
- Feature: Laser mode setting. Allows Grbl to execute continuous
motions with spindle speed and state changes.
- Feature: Significantly improved status reports. Overhauled to cram in
more meaningful data and still make it smaller on average.
    - All available data is now sent by default, but does not appear if
it doesn’t change or is not active.
    - Machine position(MPos) or work position(WPos) is reported but not
both at the same time. Instead, the work coordinate offsets (WCO)are
sent intermittently whenever it changes or refreshes after 10-30 status
reports. Position vectors are easily computed by WPos  = MPos - WCO.
    - All data has changed in some way. Details of changes are in the
markdown documents and wiki.
- Feature: 16 new realtime commands to control overrides. All in
extended-ASCII character space.
    - While they are not easily typeable and requires a GUI, they can’t
be accidentally triggered by some latent character in the g-code
program and have tons of room for expansion.
- Feature: New substates for HOLD and SAFETY DOOR. A `:x` is appended
to the state, where `x` is an integer and indicates a substate.
    - For example, each integer of a door state describes in what phase
the machine is in during parking. Substates are detailed in the
documentation.
- Feature: With the alarm codes, homing and probe alarms have been
expanded with more codes to provide more exact feedback on what caused
the alarm.
- Feature: New hard limit check upon power-up or reset. If detected, a
feedback message to check the limit switches sent immediately after the
welcome message.
    - May be disabled in config.h.

- OEM feature: Enable/disable `$RST=` individual commands based on
desired behavior in config.h.
- OEM feature: Configurable EEPROM wipe to prevent certain data from
being deleted during firmware upgrade to a new settings version or
`RST=*` command.
- OEM feature: Enable/disable the `$I=` build info write string with
external EEPROM write example sketch.
    - This prevents a user from altering the build info string in
EEPROM. This requires the vendor to write the string to EEPROM via
external means. An Arduino example sketch is provided to accomplish
this. This would be useful for contain product data that is
retrievable.

- Tweak: All feedback has been drastically trimmed to free up flash
space for the v1.0 release.
    - The `$` help message is just one string, listing available
commands.
    - The `$$` settings printout no longer includes descriptions. Only
the setting values. (Sorry it’s this or remove overrides!)
    - Grbl `error:` and `ALARM:` responses now only contain codes. No
descriptions. All codes are explained in documentation.
    - Grbl’s old feedback style may be restored via a config.h, but
keep in mind that it will likely not fit into the Arduino’s flash space.
- Tweak: Grbl now forces a buffer sync or stop motion whenever a g-code
command needs to update and write a value to EEPROM or changes the work
coordinate offset.
    - This addresses two old issues in all prior Grbl versions. First,
an EEPROM write requires interrupts to be disabled, including stepper
and serial comm. Steps can be lost and data can be corrupted. Second,
the work position may not be correlated to the actual machine position,
since machine position is derived from the actual current execution
state, while work position is based on the g-code parser offset state.
They are usually not in sync and the parser state is several motions
behind. This forced sync ensures work and machine positions are always
correct.
    - This behavior can be disabled through a config.h option, but it’s
not recommended to do so.
- Tweak: To make status reports standardized, users can no longer
change what is reported via status report mask, except for only
toggling machine or work positions.
    - All other data fields are included in the report and can only be
disabled through the config.h file. It’s not recommended to alter this,
because GUIs will be expecting this data to be present and may not be
compatible.
- Tweak: Homing cycle and parking motion no longer report a negative
line number in a status report. These will now not report a line number
at all.
- Tweak: New `[Restoring spindle]` message when restoring from a
spindle stop override. Provides feedback what Grbl is doing while the
spindle is powering up and a 4.0 second delay is enforced.
- Tweak: Override values are reset to 100% upon M2/30. This behavior
can be disabled in config.h
- Tweak: The planner buffer size has been reduced from 18 to 16 to free
up RAM for tracking and controlling overrides.
- Tweak: TX buffer size has been increased from 64 to 90 bytes to
improve status reporting and overall performance.
- Tweak: Removed the MOTION CANCEL state. It was redundant and didn’t
affect Grbl’s overall operation by doing so.
- Tweak: Grbl’s serial buffer increased by +1 internally, such that 128
bytes means 128, not 127 due to the ring buffer implementation. Long
overdue.
- Tweak: Altered sys.alarm variable to be set by alarm codes, rather
than bit flags. Simplified how it worked overall.
- Tweak: Planner buffer and serial RX buffer usage has been combined in
the status reports.
- Tweak: Pin state reporting has been refactored to report only the
pins “triggered” and nothing when not “triggered”.
- Tweak: Current machine rate or speed is now included in every report.
- Tweak: The work coordinate offset (WCO) and override states only need
to be refreshed intermittently or reported when they change. The
refresh rates may be altered for each in the config.h file with
different idle and busy rates to lessen Grbl’s load during a job.
- Tweak: For temporary compatibility to existing GUIs until they are
updated, an option to revert back to the old style status reports is
available in config.h, but not recommended for long term use.
- Tweak: Removed old limit pin state reporting option from config.h in
lieu of new status report that includes them.
- Tweak: Updated the defaults.h file to include laser mode, altered
status report mask, and fix an issue with a missing invert probe pin
default.

- Refactor: Changed how planner line data is generated and passed to
the planner and onto the step generator. By making it a struct
variable, this saved significant flash space.
- Refactor: Major re-factoring of the planner to incorporate override
values and allow for re-calculations fast enough to immediately take
effect during operation. No small feat.
- Refactor: Re-factored the step segment generator for re-computing new
override states.
- Refactor: Re-factored spindle_control.c to accommodate the spindle
speed overrides and laser mode.
- Refactor: Re-factored parts of the codebase for a new jogging mode.
Still under development though and slated to be part of the official
v1.0 release. Hang tight.
- Refactor: Created functions for computing a unit vector and value
limiting based on axis maximums to free up more flash.
- Refactor: The spindle PWM is now set directly inside of the stepper
ISR as it loads new step segments.
- Refactor: Moved machine travel checks out of soft limits function
into its own since jogging uses this too.
- Refactor: Removed coolant_stop() and combined with
coolant_set_state().
- Refactor: The serial RX ISR forks off extended ASCII values to
quickly assess the new override realtime commands.
- Refactor: Altered some names of the step control flags.
- Refactor: Improved efficiency of the serial RX get buffer count
function.
- Refactor: Saved significant flash by removing and combining print
functions. Namely the uint8 base10 and base2 functions.
- Refactor: Moved the probe state check in the main stepper ISR to
improve its efficiency.
- Refactor: Single character printPgmStrings() went converted to direct
serial_write() commands to save significant flash space.

- Documentation: Detailed Markdown documents on error codes, alarm
codes, messages, new real-time commands, new status reports, and how
jogging works. More to come later and will be posted on the Wiki as
well.
- Documentation: CSV files for quick importing of Grbl error and alarm
codes.

- Bug Fix: Applied v0.9 master fixes to CoreXY homing.
- Bug Fix: The print float function would cause Grbl to crash if a
value was 1e6 or greater. Increased the buffer by 3 bytes to help
prevent this in the future.
- Bug Fix: Build info and startup string EEPROM restoring was not
writing the checksum value.
- Bug Fix: Corrected an issue with safety door restoring the proper
spindle and coolant state. It worked before, but breaks with laser mode
that can continually change spindle state per planner block.
- Bug Fix: Move system position and probe position arrays out of the
system_t struct. Ran into some compiling errors that were hard to track
down as to why. Moving them out fixed it.",X,performance

"grbl
"," #56
",[ed790c9fa298b77529ec87b917d19f249cff976b](https://github.com/gnea/grbl/commit/ed790c9fa298b77529ec87b917d19f249cff976b),"v1.1d: Tweaked interface a bit. Added realtime spindle speed and build option data. Minor bug fixes.

- Increment to v1.1d due to interface tweaks.

- Based on GUI dev feedback, the toggle overrides report was removed
and replace with showing “accessory state”. This shows a character if a
particular accessory is enabled, like the spindle or flood coolant.
These can be directly altered by the toggle overrides, so when they
execute, a GUI will be able to observe the state altering as feedback.

- Altered the real-time feed rate to show real-time spindle speed as
well. It was an over-sight on my part. It’s needed because it’s hard to
know what the current spindle speed is when overrides are altering it.
Especially during something like a laser cutting job when its important
to know how spindle speed overrides are effecting things.

- Real-time spindle speed is not shown if VARIABLE_SPINDLE is disabled.
The old real-time feed rate data field will show instead.

- Compile-time option data is now included in another message
immediately following the build info version string, starting with
`[OPT:`. A character code follows the data type name with each
indicating a particular option enabled or disabled. This will help
immensely with debugging Grbl as well as help GUIs know exactly how
Grbl was compiled.

- These interface changes are detailed in the updated documentation.

- Reduced the default planner buffer size from 17 to 16. Needed to free
up some memory…

- For increasing the serial TX buffer size from 90 to 104 bytes. The
addition of real-time spindle speeds and accessory enable data required
a bigger buffer. This is to ensure Grbl is performing at optimal levels.

- Refactored parts of the spindle and coolant control code to make it
more consistent to each other and how it was called. It was a little
messy. The changes made it easier to track what each function call was
doing based on what was calling it.

- Created a couple of new get_state functions for the spindle and
coolant. These are called by the accessory state report to look
directly at the pin state, rather than track how it was set. This
guarantees that the state is reported correctly.

- Updated the g-code parser, parking motion, sleep mode, and spindle
stop calls to refactored spindle and coolant code.

- Added a compile-time option to enable homing individual axes, rather
than having only the main homing cycle. The actual use case for this is
pretty rare. It’s not recommended you enable this, unless you have a
specific application for it. Otherwise, just alter the homing cycle
itself.

- Refactored the printFloat() function to not show a decimal point if
there are no trailing values after it. For example, `1.` now shows `1`.

- Fixed an issue regarding spindle speed overrides no being applied to
blocks without motions.

- Removed the toggle_ovr_mask system variable and replaced with
spindle_stop_ovr system variable. Coolant toggles don’t need to be
tracked.

- Updated README",X,memory

"grbl
"," #57
",[e8b717604b094ff5d4fb747f2f19065b8fd004cd](https://github.com/gnea/grbl/commit/e8b717604b094ff5d4fb747f2f19065b8fd004cd),"Spindle speed overrides behavior tweak. New experimental laser dynamic power mode.

- Spindle speed overrides now update immediately if they are changed
while in a HOLD state. Previously, they would update after exiting the
HOLD, which isn’t correct.

- New experimental dynamic laser power mode that adjusts laser power
based on current machine speed. Enabled by uncommenting
LASER_CONSTANT_POWER_PER_RATE in config.h

  - It assumes the programmed rate is the intended power/rate for the
motion.
  - Feed rate overrides (FRO) do not effect the power/rate. Meaning
that spindle PWM will automatically lower with lower FRO and increase
with higher FRO to keep it the same.
  - Spindle speed overrides (SSO) will directly increase and decrease
the power/rate. So 150% SSO will increase the PWM output by 150% for
the same speed.
  - The combination of FRO and SSO behaviors should allow for subtle
and highly flexible tuning of how the laser cutter is operating in
real-time and during the job.

- Re-factored planner block rapid rate handling for the dynamic laser
power feature. Should have had no effect on how Grbl operates.",X,increase

"grbl
"," #58
",[b753c542c7f708a5b86b73e87328615223c5c8be](https://github.com/gnea/grbl/commit/b753c542c7f708a5b86b73e87328615223c5c8be),"v1.1e: New laser features. G-code parser refactoring. CoreXY homing fix.

- Increment to v1.1e due to new laser features.

- After several discussions with some prominent laser people, a few
tweaks to the new laser mode has been installed.

- LASER: M3 behaves in a constant power mode.

- LASER: M4 behaves in a dynamic power mode, where the laser power is
automatically adjusted based on how fast Grbl is moving relative to the
programmed feed rate. This is the same as the  CONSTANT_POWER_PER_RATE
config.h option in the last version. NOTE: When not in motion in M4,
Grbl automatically turns off the laser. Again, it only operates while
moving!

- LASER: Only G1, G2, and G3 motion modes will turn on the laser. So,
this means that G0, G80 motion modes will always keep the laser
disabled. No matter if M3/M4 are active!

- LASER: A spindle stop override is automatically invoked when a laser
is put in a feed hold. This behavior may be disabled by a config.h
option.

- Lots of little tweaks to the g-code parser to help streamline it a
bit. It should no effect how it operates. Generally just added a parser
flag to track and execute certain scenarios a little more clearly.

- Jog motions now allow line numbers to be passed to it and will be
displayed in the status reports.

- Fixed a CoreXY homing bug.

- Fixed an issue when $13 is changed, WCO isn’t sent immediately.

- Altered how spindle PWM is set in the stepper ISR. Updated on a step
segment basis now. May need to change this back if there are any
oddities from doing this.

- Updated some documentation. Clarified why M0 no longer showing up in
$G and why a `1.` floating point values are shown with no decimals,
like so `1`.",X,fast

"grbl
"," #59
",[864d1306b93285645599e33063c0805e6c8ff905](https://github.com/gnea/grbl/commit/864d1306b93285645599e33063c0805e6c8ff905),"Fixed homing fail alarm handling. Re-integrated software debouncing.

- [bug] Fixed a homing fail issue, where the alarm was not being set
right, not cleared correctly. It would report the wrong code and enter
an infinite alarm loop. This was due to how alarm codes were altered a
while back. Now updated and fixed to show the right codes.

- [feature] Re-installed optional software debouncing for hard limit
switches. By request.",X,infinite

"grbl
"," #60
",[921e5a9799691118ffe5d4ecf5ccce68efe8a3f8](https://github.com/gnea/grbl/commit/921e5a9799691118ffe5d4ecf5ccce68efe8a3f8),"Clean up and new streaming script check-mode feature.

[new] The stream.py streaming script now has a check-mode option, where it will place Grbl in $C check mode automatically and then stream the g-code program. It's a very fast way to check if the g-code program has any errors.

[fix] The debug variable was not initialized if the debug option was enabled in config.h

[fix] Updated error_codes CSV file to the same format as the others.",X,fast

"grbl
"," #61
",[b75e5571eeaeb22a88304716fb1e7411f9c28be0](https://github.com/gnea/grbl/commit/b75e5571eeaeb22a88304716fb1e7411f9c28be0),"Dual motor support for self-squaring gantry homing.

- New dual motor support feature for gantry CNC machines. An axis motor is  efficiently mirrored to a dedicated set of step and direction pins (D12/D13 or A3/A4) with no detectable loss of performance. Primarily used to independently home both sides of a dual-motor gantry with a pair of limit switches (second shared with Z-axis limit pin). When the limit switches are setup correctly, Grbl will self-square the gantry (and stay square if $1=255 is programmed). Beware use at your own risk! Grbl is not responsible for any damage to any machines.

- Dual axis motors is only supported on the X-axis or Y-axis. And deletes the spindle direction(D13) and optional coolant mist (A4) features to make room for the dual motor step and direction pins.

- Dual axis homing will automatically abort homing if one limit switch triggers and travels more than 5% (default) of the non-dual axis max travel setting. For example, if the X-axis has dual motors and one X-axis triggers during homing, Grbl will abort 5% of the Y-axis max travel and the other X-axis limit fails to trigger. This will help keep any misconfigurations or failed limit switches from damaging the machine, but not completely eliminate this risk. Please take all precautions and test thouroughly before using this.

- Dual axis motors supports two configurations:

- Support for Arduino CNC shield clones. For these, step/dir on pins D12/D13, and spindle enable is moved to A3 (old coolant enable), while coolant enable is moved to A4 (SDA pin). Variable spindle/laser mode option is NOT supported for this shield.

- Support for Protoneer CNC Shield v3.51. Step/dir on pins A3/A4, and  coolant enable is moved to D13 (old spindle direction pin). Variable spindle/laser mode option IS supported for this shield.

- Added Bob's CNC E3 and E4 CNC machine defaults.",X,performance

"johnny-five
"," #1
",[47a67671f1ef93c2b3887f8dd0fd998c411e539c](https://github.com/rwaldron/johnny-five/commit/47a67671f1ef93c2b3887f8dd0fd998c411e539c),Update readme to include note about serial line hang,X,hang

"johnny-five
"," #2
",[d3541a70d7767e52fb9aa67b32d9f32669abf45f](https://github.com/rwaldron/johnny-five/commit/d3541a70d7767e52fb9aa67b32d9f32669abf45f),update median computation,New:unstable_and_slow_noise_handling,faster

"johnny-five
"," #3
",[c97bb0c818dfe18cee69ae11b090d73de416a6ba](https://github.com/rwaldron/johnny-five/commit/c97bb0c818dfe18cee69ae11b090d73de416a6ba),Slow down on turns,X,slow

"johnny-five
"," #4
",[d2d7e8eda9eb1b0ae046f11f58417e89b06130be](https://github.com/rwaldron/johnny-five/commit/d2d7e8eda9eb1b0ae046f11f58417e89b06130be),Refactor Led state.isOn fix to avoid getting stuck in an infinite interval,X,stuck

"johnny-five
"," #5
",[d235c79da6908b8e00a892da85aaf4c0f9095685](https://github.com/rwaldron/johnny-five/commit/d235c79da6908b8e00a892da85aaf4c0f9095685),Refactor animation for easier/faster unit testing,New:build:Slow_Simulation/Hardware_Tests,faster

"johnny-five
"," #6
",[339d8de98a6b4d8d85aa720c79e85aa05422fd00](https://github.com/rwaldron/johnny-five/pull/529/commits/339d8de98a6b4d8d85aa720c79e85aa05422fd00),Make easing tests more tolerant,X,slow

"johnny-five
"," #7
",[99a7d3504cbe40b5622e65c69ee47bcb971d30a5](https://github.com/loadbxh/Arduino-Uno/commit/99a7d3504cbe40b5622e65c69ee47bcb971d30a5),Removing board.breakouts and resolving IMU.Drivers at runtime,X,runtime

"johnny-five
"," #8
",[e5b65aaed92ec924d81fc7a653a9257d70795988](https://github.com/rwaldron/johnny-five/commit/e5b65aaed92ec924d81fc7a653a9257d70795988),Explicit 'test' task; extended slow tests,New:build:Slow_Simulation/Hardware_Tests,slow

"johnny-five
"," #9
",[5d763415ec8f7dc45ed04d5931455f7bef24edd0](https://github.com/rwaldron/johnny-five/pull/965/commits/5d763415ec8f7dc45ed04d5931455f7bef24edd0),Increase PWM frequency for PCA9685,X,increase

"johnny-five
"," #10
",[79a715443e8a229a2ad7b71a5a352bac31f2246f](https://github.com/rwaldron/johnny-five/commit/79a715443e8a229a2ad7b71a5a352bac31f2246f),Servo: limit history to 5 records to prevent potential memory leaks,General:performance:using_massive_arrays_likes,memory

"johnny-five
"," #11
",[6f8def6d6a41a30e95c0c6aafdf09c31c8f748b1](https://github.com/loadbxh/Arduino-Uno/commit/6f8def6d6a41a30e95c0c6aafdf09c31c8f748b1),Use more then 8 predefined characters,X,memory

"johnny-five
"," #12
",[5d9a46252b52363d069d8f8eb402313044553200](https://github.com/loadbxh/Arduino-Uno/commit/5d9a46252b52363d069d8f8eb402313044553200),LCD: add test for memory leak fix,X,memory

"johnny-five
"," #13
",[bedcbe3933bec91e793d0d1363f11b8c0a1b5432](https://github.com/loadbxh/Arduino-Uno/commit/bedcbe3933bec91e793d0d1363f11b8c0a1b5432),LCD: Wait for fast instructions to complete,New:Impatient_requester,fast

"johnny-five
"," #14
",[0d5ca14723d12fce82ac417fee2e1cf08b683c94](https://github.com/eric-erki/JavaScript-Robotics-and-IoT-programming-framework/commit/0d5ca14723d12fce82ac417fee2e1cf08b683c94),"ESC: deprecate speed(percent), introduce throttle(us).",General:performance:using_massive_arrays_likes,speed

"node-ar-drone
"," #1
",[32c37f8f3da4aab358073a4f8f0456da7e933845](https://github.com/felixge/node-ar-drone/commit/32c37f8f3da4aab358073a4f8f0456da7e933845),Instructions to install from Github. Makes a lot of sense for this lib which is changing fast.,X,fast

"node-ar-drone
"," #2
",[5d5a3745cf8fc8485b36d075a82bafb7a1e547ba](https://github.com/felixge/node-ar-drone/commit/5d5a3745cf8fc8485b36d075a82bafb7a1e547ba),Reverting to approach that allows test to pass.,X,increase

"node-ar-drone
"," #3
",[2a3331c115d7288acd20b7862b833d9af7e15ec9](https://github.com/felixge/node-ar-drone/commit/2a3331c115d7288acd20b7862b833d9af7e15ec9#diff-7ae45ad102eab3b6d7e7896acd08c427a9b25b346470d7bc6507b6481575d519),update to latest buffy (performance),X,performance

"PX4-Autopilot
"," #1
",[a704acc2a20936d7e6d6828ae0ddf2cf7dc3578b](https://github.com/PX4/PX4-Autopilot/commit/a704acc2a20936d7e6d6828ae0ddf2cf7dc3578b?w=1),"Out of memory warning, flash and RAM optimizations",X,memory

"PX4-Autopilot
"," #2
",[7e0f8b3edaf584a48cd3bc3351e3205fd0106cdc](https://github.com/PX4/PX4-Autopilot/commit/7e0f8b3edaf584a48cd3bc3351e3205fd0106cdc?w=1),"Formatting changes to make the Python style checker happy (copied from the bootloader project).\
Increase the erase timeout to avoid issues with large/slow flash.",New:Hard-coded-timing,slow

"PX4-Autopilot
"," #3
",[a4b0e3ecbe2d012eac7545cce14829866bacc813](https://github.com/PX4/PX4-Autopilot/commit/a4b0e3ecbe2d012eac7545cce14829866bacc813?w=1),"Add retry-on-error for non-protocol errors.\
Add more performance counters; run test #1 faster.",New:Hard-coded-timing,performance

"PX4-Autopilot
"," #4
",[6948defdb26711fd8336b5e0173664bf98517406](https://github.com/PX4/PX4-Autopilot/commit/6948defdb26711fd8336b5e0173664bf98517406?w=1),"mavlink: HIL fixes, performance optimization",New:Hard-coded-timing,performance

"PX4-Autopilot
"," #5
",[e505f4fae5596b2b53c120a7cb2a03d2d974c83a](https://github.com/PX4/PX4-Autopilot/commit/e505f4fae5596b2b53c120a7cb2a03d2d974c83a?w=1),"sdlog2: use orb_check() instead of poll() to minimize polling overhead, bugs and compiler warnings fixed",X,overhead

"PX4-Autopilot
"," #6
",[1e54dc4409df700b8b4c4a4480238db27b270dfc](https://github.com/PX4/PX4-Autopilot/commit/1e54dc4409df700b8b4c4a4480238db27b270dfc?w=1),"commander: Accel calibration: Reduce memory footprint, be more responsive",X,memory

"PX4-Autopilot
"," #7
",[cced8ed69e046cacd5949757d5f33b5e885f8d10](https://github.com/PX4/PX4-Autopilot/commit/cced8ed69e046cacd5949757d5f33b5e885f8d10?w=1),"POSIX: added hrt_queue for handling fast periodic events

The workqueues measure time in ticks  which is typically 10ms.\
Some interrupt events in Nuttx occur at about 1ms so a more\
granular workqueue is needed for POSIX.\
...",X,fast

"PX4-Autopilot
"," #8
",[16cb971d6306884e3d238d24e32bf2ca5afcafee](https://github.com/PX4/PX4-Autopilot/commit/16cb971d6306884e3d238d24e32bf2ca5afcafee?w=1),POSIX: Increase app start spacing,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #9
",[b70c9a84c621af6d0a48c0f1ba99e9385426e4ff](https://github.com/PX4/PX4-Autopilot/commit/b70c9a84c621af6d0a48c0f1ba99e9385426e4ff?w=1),systemlib: Add ability to dump memory usage,X,memory

"PX4-Autopilot
"," #10
",[fa590bbe8038941423ddb8ecb36d94dc7298b167](https://github.com/PX4/PX4-Autopilot/commit/fa590bbe8038941423ddb8ecb36d94dc7298b167?w=1),Correct float parsing args and increase altitude monitoring frequency,X,increase

"PX4-Autopilot
"," #11
",[94aaf0d298467596e7c6e067e3252dc0f937b429](https://github.com/PX4/PX4-Autopilot/commit/94aaf0d298467596e7c6e067e3252dc0f937b429?w=1),increase sleep time in accel calibration routine to make accel calibration work on snapdragon,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #12
",[acc40c82173d8bae9569f7833cd0f00173ccbc63](https://github.com/PX4/PX4-Autopilot/commit/acc40c82173d8bae9569f7833cd0f00173ccbc63?w=1),"orb unittest: increase waiting time so that test does not fail on slow devices

This test failed on the pixracer because the subscriber thread was too slow\
and thus orb messages got lost. This behavior is expected, but the test\
should not fail because of that, so we increase the sleeping time.",New:build:Slow_Simulation/Hardware_Tests,slow

"PX4-Autopilot
"," #13
",[d846ad5dacfa4ab89fd611116d0ea8d21b9bc181](https://github.com/PX4/PX4-Autopilot/commit/d846ad5dacfa4ab89fd611116d0ea8d21b9bc181?w=1),"sensors: move voting into sensors module

- voting is now at a central place instead of duplicated within the
  estimators
  -> this also means that estimators that did not do voting so far,
     now have voting, like ekf2
- estimators requiring more than that can still subscribe to the raw
  sensors
- allows sensors_combined to be 3 times smaller
  - reduces logger, memcpy (cache) & RAM overhead
- all modules requiring only 1 or 2 sensor values now automatically get
  the voted result
- this also adds voting to baro",New:Hard-coded-timing,overhead

"PX4-Autopilot
"," #14
",[45ffb190e32b8ae8970940c24554e99f0eb2e275](https://github.com/PX4/PX4-Autopilot/commit/45ffb190e32b8ae8970940c24554e99f0eb2e275?w=1),"logger: add -p <topic> option to poll on a topic instead of running at fixed rate

this will be needed for fast replay. In addition, this option disables\
the orb interval.\
It can be removed again once we have time simulation.",X,fast

"PX4-Autopilot
"," #15
",[aa9fbbedd54a7a0e346ea03f439dcdf4f90c6113](https://github.com/PX4/PX4-Autopilot/commit/aa9fbbedd54a7a0e346ea03f439dcdf4f90c6113?w=1),"add oneshot mode capability\
change fmu to task\
increase fmu_servo task priority to max and enable true oneshot\
use lowest FMU priority which minimizes jitter\
constrain oneshot updates to control group 0 events",X,increase

"PX4-Autopilot
"," #16
",[1c0dd8ba497d109fb9cd3a82f4526b9e466d6c2b](https://github.com/PX4/PX4-Autopilot/commit/1c0dd8ba497d109fb9cd3a82f4526b9e466d6c2b?w=1),"Simulator: Add scaling API to adjust for slow simulators

The simulation engine had the ability to pause already and properly handled load spikes, however, it was not hardened against constant drift. This addition enables it to run at a constant slower-than-realtime rate successfully.",X,slow

"PX4-Autopilot
"," #17
",[1e0489f48b4a4dd1c953ec4f514d01114eb4d7da](https://github.com/PX4/PX4-Autopilot/commit/1e0489f48b4a4dd1c953ec4f514d01114eb4d7da?w=1),"PX4 System gpio_led:Code cleanup

Use PX4 log and module documantation\
Fixed memory leaks",X,memory

"PX4-Autopilot
"," #18
",[4e5b223a0889871f4c321bc853522371d9c7827a](https://github.com/PX4/PX4-Autopilot/commit/4e5b223a0889871f4c321bc853522371d9c7827a?w=1),hrt test decrease time,"New:Hard-coded-timing\
New:build:Slow_Simulation/Hardware_Tests",decrease

"PX4-Autopilot
"," #19
",[d375880c4bee5b4f7c287bfd2921f3a1e9d648a7](https://github.com/PX4/PX4-Autopilot/commit/d375880c4bee5b4f7c287bfd2921f3a1e9d648a7?w=1),"improve mavros SITL tests (#8652)
-created a test base class to centralize redundant methods among the different tests
-added mission waypoint list topic listener (this also helps make sure the simulation is ready)
-check number of mission waypoints in FCU against mission
-increase time for mavros topics to be ready from 30 to 60 seconds
-reduce position check loop rates
-clean up logging
-support QGC plan for mission file format, see #8619
-vehicle is an arg for mission test launch file, working toward other airframes
-Jenkins: fix vtol vehicle arg value
-get MAV_TYPE param and use FW radius for pure fixed-wing mission position check
-remove unused vehicle arg from test in multiple tests launch, clearing runtime warning",X,runtime

"PX4-Autopilot
"," #20
",[cbf3cee0961fbe8c17fb0aa9468f25564f286c08](https://github.com/PX4/PX4-Autopilot/commit/cbf3cee0961fbe8c17fb0aa9468f25564f286c08?w=1),"ll40ls: increase the number of samples used to find a correlation peak for LitarLite\
...",New:Hard-coded-timing,increase

"PX4-Autopilot
"," #21
",[56150c28ddbf941ec28254cd679a46da9ff8e16e](https://github.com/PX4/PX4-Autopilot/commit/56150c28ddbf941ec28254cd679a46da9ff8e16e?w=1),"ll40ls: increase the sleep time after resetting registers\
...",New:Hard-coded-timing,increase

"PX4-Autopilot
"," #22
",[8b629454de069c835ad086b78e498f955c5193fd](https://github.com/PX4/PX4-Autopilot/commit/8b629454de069c835ad086b78e498f955c5193fd?w=1),"esc_calibration: increase safety and initialise all data
- do not do calibration if not very sure that battery is not connected
- initialise all structs and variables\
...",New:Hard-coded-timing,increase

"PX4-Autopilot
"," #23
",[0c5c741b1a63ff90b9137d6327ccdd10fab6c084](https://github.com/PX4/PX4-Autopilot/commit/0c5c741b1a63ff90b9137d6327ccdd10fab6c084?w=1),"add posix shell\
squashed & rebased version, not including:
- listener changes
- src/firmware renaming

Commits:\
tag_to_version.py: fix Python3 error\
subprocess.communicate returns bytes instead of a str which is not the
same for Python3. Therefore, we need to decode the bytes.\
cmake: remove folder src/firmware\
The folder src/firmware was not intuitive. Why would the binaries for
SITL be inside a src and why even inside a src/firmware folder. Also,
the rootfs was put there which made it even more confusing.\
The CMakeLists.txt files are moved into cmake/ and get now called from
the main CMakeLists.txt.

qshell: support for return value

Instead of just sending commands, qshell will now also wait until
the command has finished on QURT and sent back a return value. This will
allow all modules on the DSP side to be spawned from the Linux side
meaning that we only need one config/startup file instead of two.

adb_upload: create folders before pushing

Previously the script failed if the folder on the destination was not
already existing. This therefore makes pushing easier.

posix: spawn PX4 modules in bash

This adds the possibility to spawn PX4 modules out of bash. Basically,
the main executable can now be started as a server/daemon or as a
client.
The server replaces the existing functionality of the main exe with
the pxh shell, however, it also opens a pipe that clients can talk to.

Clients can run or spawn PX4 modules or commands by connecting to the
server over the pipe. They clients will get the stdout and return value
of their commands via a client specific pipe back.

This work will allow to start all modules using a bash script similar to
the way it is done in NuttX where the NuttShell scripts the startup
scripts and starts the modules.

SITL: use new client shell in SITL

This is a first step to use the new shell capabilities for SITL.
The new startup bash script rcS merges (and therefore replaces) the two
existing scripts rcS_gazebo_iris and rcS_jmavsim_iris.

More cleanup will be necessary for the rest of the SITL startup scripts.

Snapdragon: use new shell to start all modules

Instead of different mainapp.config and px4.config files, we can now use
a unified rcS bash script which starts all the modules based on
parameters, mainly the SYS_AUTOSTART param.

Snapdragon: fix the airframe description

pxh: argv needs to end with a nullptr

The comment was wrong that argv needs an additional 0 termination.
Instead it needs a nullptr at the end.

px4_posix_tasks: variable cleanup

The px4_task_spawn_cmd function got a cleanup while debugging, however,
no functional changes.

Snapdragon: move some drivers to 4100 config

These drivers are supported by the community, so they go into the 4100
config.

Snapdragon: update 210qc platform

px4_daemon: use doxygen comments

apps.h_in: fix string printf: use .c_str()

px4_daemon: \b -> \n in printf

px4_daemon: handle error in generate_uuid (close the file on error)

posix main: some clarifications in comment (it's the symlinks not the script aliases)

cmake: remove new install command again

This one was probably wrong and untested. Installing needs revisiting.

POSIX: remove argument USES_TERMINAL

POSIX: copy init and mixer files for SITL

Instead of using non-working install commands, the mixer and startup
files are now copied as part of the build in cmake.

adb_upload.sh: remove leftover commented printf

POSIX main: just the pointer instead of memmove

POSIX main: remove chroot

chroot is removed because it hasn't been used anywhere and seems
untested.

px4_daemon: remove client pipe when cleaning up

px4_daemon: fail if the client pipe already exists

The client pipe is supposed to be specific (by UUID), so the path
shouldn't exist already.

history: limit the number of history entries

This is a protection to avoid filling the memory if we are entering a
lot of commands (e.g. auto-generated).

px4_daemon: add a threadsafe map and use it

px4_daemon: whitespace

px4_daemon: fix client parsing

Sometimes the client ends up reading more than one packet in one read.
The parsing is not made for this and would require a (ring)buffer for
it.

The solution of this commit just reads as much as needed from the pipe
which avoids having to do buffering and parsing.

posix: changes sitl_run.sh and main.cpp cleanup

This changes the paths in sitl_run.sh quite a bit to allow the px4
binary to run in the rootfs directory which should make it convenient
and very close to the NuttX variant.

Also main.cpp got a big cleanup after the big rebase with some
conflicts. Quite some functionality was removed but it has yet to be
seen if it needs to be re-added.

px4_log: cleanup log levels, now they make sense

Before DEBUG and INFO log levels where inverted which didn't make much
sense in my eyes.

dataman: fix path for bash shell

logger: fix paths for bash shell

mavlink: fix paths for bash shell

param: fix path for bash shell

inav: fix paths for bash shell

sdlog2: fix paths for bash shell

ROMFS: add forgotten mixer to list

SITL init: more models, more options

- Support for different models using the unified startup
script rcS.
- Support to choose the estimator by setting the environment variable
  PX4_ESTIMATOR.
- Support to choose the logger by setting the environment variable
  PX4_LOGGER.

rcS: fix string comparison

listener: use template file

Instead of having all of the C++ code inside the Python file it is
nicer to have a separate template file with the C++ headers, etc.

px4_log: add PX4_INFO_RAW for raw printfs

This allows to do custom formatting but is still transported over
sockets to clients.

topic_listener: use PX4_INFO_RAW instead of printf

commander: use PX4_INFO_RAW for status

listener: rewrite to classes and factory

posix: fix some argument warnings

generate_listener.py: by accident changed shebang

listener: big refactor of the generator

Hopefully this makes it easier to read and change in the future.

rcS: manually take over rebase changes

listener: remove leftover try

listener: properly clean up topic instance

rcS: take over some vehicle specific changes

posix-configs: vehicle specifics to separate files

posix-configs: remove leftover lines

uORBDevices: new PX4_INFO_RAW instead of printf

px4_log: just use printf on NuttX

listener: use less binary space, strip on NuttX

generate_listener.py: remove commented code

cmake: fix syntax error from merge

px4_daemon: fixes after rebase of apps.h/cpp fix

px4_daemon: namespace missing

posix: only create stub for fsync on QURT

unitests: reduce dependencies of param test

This makes the unit test compile and link again after the bash changes.

QURT: some compile fixes after a rebase

SITL: arg change for sitl_run.sh to use rcS_test

This allows to use a custom startup file for testing.

SITL: add the folder test_data

SITL: implement shutdown command as systemcmd

The shutdown command needs to be a proper systemcmd, otherwise the alias
and symlink generation doesn't work and we end up calling shutdown of
the host computer which is to be avoided.

px4fmu_test: same IO_pass mixer as px4fmu_default

px4fmu_test: use normal quad x mixer

There is no good reason to use a specific test mixer, except more cmake
code around it. Therefore just use the same mixer as default, and at
some point px4fmu_test and px4fmu_default can get merged

POSIX: cleanup, dir and symlink fixes

This cleans up the logic behind the symlinking and creating directories.

POSIX: correct arg order in usage info

tests: fix paths for SITL tests

POSIX: printf fix

sitl_run.sh: try to make this run on Mac as well

cmake: try to make jenkins happier

Path cleanup, the bin is no longer in src/firmware

POSIX: fix symlink logic

SITL: prefix all exported env variables

cmake: fix path for ROS tests

integrationtests: fix log path

launch: try to make tets with ROS working again

px4_defines: fix after wrong merge deconflicting

px4_defines: get paths for POSIX correct

cmake: fix cmake arguments

This was fine with cmake 3.6 but did not work with cmake 3.2.2

cmake: use cp instead of cmake -E copy

cmake -E copy does not support copying multiple files with versions <
3.5. Therefore, just use cp for now.

ROMFS: fix build error after rebase

cmake: fix paths in configs

launch: use `spawn_model` again

cmake: various fixes after big rebase

param: path fixes after rebase

posix platform: fixes after rebase

test_mixer: fix screwed up rebase",CI/CD:Too_many_changes,memory

"PX4-Autopilot
"," #24
",[828e31d3a914166c8bb3897c6191f4203f151b7a](https://github.com/PX4/PX4-Autopilot/commit/828e31d3a914166c8bb3897c6191f4203f151b7a?w=1),"lockstep_scheduler: optimize performance
- use a linked-list instead of std::vector. Insertion and removal are now
  O(1)
- avoid malloc and use a thread_local instance of TimedWait.
  It gets destroyed when the thread exits, so we have to add protection
  in case a thread exits too quickly. This in turn requires a fix to the
  unit-tests.","New:Hard-coded-timing\
New:build:Slow_Simulation/Hardware_Tests",performance

"PX4-Autopilot
"," #25
",[721f9f901f7e2725318b30fc64d5448070fa09af](https://github.com/PX4/PX4-Autopilot/commit/721f9f901f7e2725318b30fc64d5448070fa09af?w=1),log_writer_file: fix race condition for fast consecutive stop & start calls,X,fast

"PX4-Autopilot
"," #26
",[1d932f6ec9d4a59ba4c68a59fc134bcd925328af](https://github.com/PX4/PX4-Autopilot/commit/1d932f6ec9d4a59ba4c68a59fc134bcd925328af?w=1),"IMU drivers using FIFOs increase max length to 16 and sync similar implementations
 - this provides some extra space when the FIFO transfers don't align perfectly
 - I've also made an effort to keep the different drivers (icm20602, icm20608g, ism330ldc) in sync so we can factor out the common portions later once we've confident in the pattern.",X,increase

"PX4-Autopilot
"," #27
",[7e39ef8b8fc871abbd4f5f7ab5a450580d893345](https://github.com/PX4/PX4-Autopilot/commit/7e39ef8b8fc871abbd4f5f7ab5a450580d893345?w=1),"MAVLink sim: Start faster\
This reduces test times across the board.",X,faster

"PX4-Autopilot
"," #28
",[190b96a46c3540ec03823ac4370e166a79e1f811](https://github.com/PX4/PX4-Autopilot/commit/190b96a46c3540ec03823ac4370e166a79e1f811?w=1),"SMbus battery driver - a lot of updates and optimizations

- added support for BQ40Z80 based battery
- added performance counter for interface errors
- added SMART_BATTERY_INFO mavlink message
- general code cleanups and optimization
- fixed: void flooding the log in case of interface error
- fixed: using _batt_startup_capacity instead of _batt_capacity for discharged_mah
- update: read manufacture_date
- update: get _cell_count from parameter and not const 4
- update: avoid re-reading data that has already been read and stored on class already
- currently the battery type defined by BAT_SMBUS_MODEL parameter and not by auto detection",X,performance

"PX4-Autopilot
"," #29
",[2956aa340e480396fd5a37d558477f6e7ce9878b](https://github.com/PX4/PX4-Autopilot/commit/2956aa340e480396fd5a37d558477f6e7ce9878b?w=1),"module: increase max timeout for stopping modules from 2s to 5s\
The gps module might take up to 4s to stop (if stopped during module
configuration).","New:Hard-coded-timing
General:Hard-coding",increase

"PX4-Autopilot
"," #30
",[3924792c2025316a55ffa01a7f4fd15e3ee071d9](https://github.com/PX4/PX4-Autopilot/commit/3924792c2025316a55ffa01a7f4fd15e3ee071d9?w=1),"Jenkins: HIL improve run_tests.py and run_nsh_cmd.py helper
 - switch to python3
 - run_nsh_cmd.py return error if command fails
 - decrease timeout in checking for output
 - Jenkins hardware tests tolerate certain command failures that aren't available on all boards (flash constrained, etc)","New:Hard-coded-timing
General:Hard-coding",decrease

"PX4-Autopilot
"," #31
",[a34e57a4cc8817186327436edc1aa14d2174be67](https://github.com/PX4/PX4-Autopilot/commit/a34e57a4cc8817186327436edc1aa14d2174be67?w=1),"Simulator: Increase stack, publication affinity
This commit increases the send thread stack size and changes the thread affinity of the lockstep clocking topic. It also improves verbosity in case error states occur.","New:Hard-coded-timing
General:Hard-coding",increase

"PX4-Autopilot
"," #32
",[4ce72e03b6ddd0894b2e96c2d6791e3317820462](https://github.com/PX4/PX4-Autopilot/commit/4ce72e03b6ddd0894b2e96c2d6791e3317820462?w=1),"Increase range of pulse count in PWM driver
...",X,increase

"PX4-Autopilot
"," #33
",[0362fd4c2229ac1cf9b2743d28e4389a6b8e1722](https://github.com/PX4/PX4-Autopilot/commit/0362fd4c2229ac1cf9b2743d28e4389a6b8e1722?w=1),"(1) Fix a critical memory leak in the TCP read-ahead buffering logic; Add an option to suppress SDIO multi-block transfers in order to work around a buggy SDIO driver
...",X,memory

"PX4-Autopilot
"," #34
",[9c338d809eaf32ae4a51fc74661f7d86a81a7d74](https://github.com/PX4/PX4-Autopilot/commit/9c338d809eaf32ae4a51fc74661f7d86a81a7d74?w=1),"STM32 quad encoder: Don't calculate the timer prescaler value at runtime; pre-calculate it at compiler time
...",X,runtime

"PX4-Autopilot
"," #35
",[227b5d0f56b4aacb68a53b07664f41565de53879](https://github.com/PX4/PX4-Autopilot/commit/227b5d0f56b4aacb68a53b07664f41565de53879?w=1),Fix a deadlock when using the NSH ifconfig command over Telnet,General:Deadlock,deadlock

"PX4-Autopilot
"," #36
",[5b83507116be57e0c84daea74d30dea382f20f97](https://github.com/PX4/PX4-Autopilot/commit/5b83507116be57e0c84daea74d30dea382f20f97?w=1),"Fix infinite loop in CDC/ACM driver
...",New:Delayed_Sync_With_Physical_Events,infinite

"PX4-Autopilot
"," #37
",[b66dd903b6b5d1d6a72d53be54cca36fdfb3d653](https://github.com/PX4/PX4-Autopilot/commit/b66dd903b6b5d1d6a72d53be54cca36fdfb3d653?w=1),"NxWidgets: Fix a potential deadlock that can occur waiting for toolbard geometry data
...",General:Deadlock,deadlock

"PX4-Autopilot
"," #38
",[47125132adb0ef34b429f2563b860c713a037032](https://github.com/PX4/PX4-Autopilot/commit/47125132adb0ef34b429f2563b860c713a037032?w=1),Calypso update from Denis Carkiki.  Adds UWire driver and support for external memory in NuttX heap,X,memory

"PX4-Autopilot
"," #39
",[55c75c6ba007f72e98e6b47c63e85d6f0482d339](https://github.com/PX4/PX4-Autopilot/commit/55c75c6ba007f72e98e6b47c63e85d6f0482d339?w=1),"Update STM3240G-EVAL defconfig to support NxConsole keyboard input; increase spacing of icons on the start window
...",X,increase

"PX4-Autopilot
"," #40
",[0e3afd21b0f44f81c4f2befca6da6d2914f06e80](https://github.com/PX4/PX4-Autopilot/commit/0e3afd21b0f44f81c4f2befca6da6d2914f06e80?w=1),"The SST25 driver now works with SST25 (at least using the slow write mode)
...",New:Hard-coded-timing,slow

"PX4-Autopilot
"," #41
",[d09ff7e1f92d3842f6716c4fce1f8e98026057b9](https://github.com/PX4/PX4-Autopilot/commit/d09ff7e1f92d3842f6716c4fce1f8e98026057b9?w=1),"Add LPC32xx memory map and interrupt numbers
...",X,memory

"PX4-Autopilot
"," #42
",[139cd091768c57272fe1f80d725d4a3a24d2e3d0](https://github.com/PX4/PX4-Autopilot/commit/139cd091768c57272fe1f80d725d4a3a24d2e3d0?w=1),"Faster sensor bus resets on timeouts, massively reworked fixed wing app, tested","CI/CD:Large_change
New:Hard-coded-timing",faster

"PX4-Autopilot
"," #43
",[6c4aadedf42de266e592f84cda27d8af1bbe56b5](https://github.com/PX4/PX4-Autopilot/commit/6c4aadedf42de266e592f84cda27d8af1bbe56b5?w=1),Switch back from max performance to size as the default optimization level.  Individual modules can still override this if they need to.,X,performance

"PX4-Autopilot
"," #44
",[0472eeae0533c06d42d82d12176c575f0cdeddf0](https://github.com/PX4/PX4-Autopilot/commit/0472eeae0533c06d42d82d12176c575f0cdeddf0?w=1),Add EEPROM read/write performance counters.,X,performance

"PX4-Autopilot
"," #45
",[0dc0a0539dafdf1727763cc145f02faa8a8e7d22](https://github.com/PX4/PX4-Autopilot/commit/0dc0a0539dafdf1727763cc145f02faa8a8e7d22?w=1),Increase the retry count while probing for I2C sensors.  This will also unwedge stuck sensors.,X,increase

"PX4-Autopilot
"," #46
",[704679d7b1a8338d656f3ce6565390568ef876b4](https://github.com/PX4/PX4-Autopilot/commit/704679d7b1a8338d656f3ce6565390568ef876b4?w=1),"Removed delay after receiving in recvfrom().  This was killing network performance
...",X,performance

"PX4-Autopilot
"," #47
",[648420e67a546b33400fd2fe5b6a50410276ae3d](https://github.com/PX4/PX4-Autopilot/commit/648420e67a546b33400fd2fe5b6a50410276ae3d?w=1),"Add support for DMA memory allocator to FAT file system
...",X,memory

"PX4-Autopilot
"," #48
",[491a83acb40aa1fa87c1c6894c3ecbe957c19e54](https://github.com/PX4/PX4-Autopilot/commit/491a83acb40aa1fa87c1c6894c3ecbe957c19e54?w=1),Fix for recvfrom() hang when the new CONFIG_NET_TCP_RECVDELAY is set to zero (from Max Holtzberg),X,hang

"PX4-Autopilot
"," #49
",[d7fb2175eb73fc7ec1616c3ad78fffd1bc1590ab](https://github.com/PX4/PX4-Autopilot/commit/d7fb2175eb73fc7ec1616c3ad78fffd1bc1590ab?w=1),A simple file write performance test,X,performance

"PX4-Autopilot
"," #50
",[731b466aca72e22039f46678e890a50dd59b59b4](https://github.com/PX4/PX4-Autopilot/commit/731b466aca72e22039f46678e890a50dd59b59b4?w=1),"If server fails to create a thread because of lack-of-resources (EAGAIN), don't terminate.  Keep serving... Memory may become available again later.
...",X,memory

"PX4-Autopilot
"," #51
",[8de1d1d182bed68c075f279541c32a7493aef0bc](https://github.com/PX4/PX4-Autopilot/commit/8de1d1d182bed68c075f279541c32a7493aef0bc?w=1),"Update Olimex-LPC1766STK setenv.sh to make it faster to use CodeSourcery.
...",General:Code_Duplication,faster

"PX4-Autopilot
"," #52
",[642f3426a7aadd9fd345590a4c0881d7e64014a7](https://github.com/PX4/PX4-Autopilot/commit/642f3426a7aadd9fd345590a4c0881d7e64014a7?w=1),"Added mag calibration routine, fixed minor typos without runtime effects",X,runtime

"PX4-Autopilot
"," #53
",[f9a8818d1e040bdf1a4bb62041a469ceee67dbf4](https://github.com/PX4/PX4-Autopilot/commit/f9a8818d1e040bdf1a4bb62041a469ceee67dbf4?w=1),"Switch from -Os to -O3.  This generates *much* faster code, although at a ~50% size penalty.  We can afford the space.",X,faster

"PX4-Autopilot
"," #54
",[c522b5446dd4e692d15b37de8ad199765259e35b](https://github.com/PX4/PX4-Autopilot/commit/c522b5446dd4e692d15b37de8ad199765259e35b?w=1),Work in progress on to/from memory BSON coding.,X,memory

"PX4-Autopilot
"," #55
",[edd2715f84532f6c4c748cc97f0fe8a2982aa885](https://github.com/PX4/PX4-Autopilot/commit/edd2715f84532f6c4c748cc97f0fe8a2982aa885?w=1),"reverted memory change, sdlog app needs more than 2K",New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #56
",[7961d6ce58b0567f4c24cb0b242e2cd875a70c5b](https://github.com/PX4/PX4-Autopilot/commit/7961d6ce58b0567f4c24cb0b242e2cd875a70c5b?w=1),Make ostest RR scheduler test use less memory from Freddie Chopin; Plus build fix from...,X,memory

"PX4-Autopilot
"," #57
",[dca3bce1ca89595f5df3788da34afe3b30bfb35a](https://github.com/PX4/PX4-Autopilot/commit/dca3bce1ca89595f5df3788da34afe3b30bfb35a?w=1),Add a new performance counter for measuring periodic/interval events.,X,performance

"PX4-Autopilot
"," #58
",[14d874f4a15653fce2902f016b1e75373afadd51](https://github.com/PX4/PX4-Autopilot/commit/14d874f4a15653fce2902f016b1e75373afadd51?w=1),Fix some memory corruption bugs.,"New:Rounded_numbers
General:Hard-coding",memory

"PX4-Autopilot
"," #59
",[92e1d5eb78d9d04a89b0413718c8bab6e9af7f63](https://github.com/PX4/PX4-Autopilot/commit/92e1d5eb78d9d04a89b0413718c8bab6e9af7f63?w=1),"Possible fix for #78 - increase the wait timeout for discard when flashing PX4IO. It's not clear this solves the issue, but I can't reproduce it with this added.",New:Hard-coded-timing,increase

"PX4-Autopilot
"," #60
",[35c82ff2fc63ab823770f9776e6b6a0f81cd4452](https://github.com/PX4/PX4-Autopilot/commit/35c82ff2fc63ab823770f9776e6b6a0f81cd4452?w=1),Make mixer ioctls load from a memory buffer rather than a file. This is prep for uploading the memory buffer to IO to be processed there.,General:Performance:Unbuffered_Streams,memory

"PX4-Autopilot
"," #61
",[375d3c14d742248b434c080527886a95ea1d563f](https://github.com/PX4/PX4-Autopilot/commit/375d3c14d742248b434c080527886a95ea1d563f?w=1),"increase the UART buffer sizes to 256

The most critical one is the GPS serial port receive buffer size,
which needs to be at least 128 to support the UBLOX protocol, but it
seems a good idea for people running a FMU without a IO board to
increase the UART buffer sizes generally",X,increase

"PX4-Autopilot
"," #62
",[ca690f60272b5330f632cd18b58ee9af89fbc9ae](https://github.com/PX4/PX4-Autopilot/commit/ca690f60272b5330f632cd18b58ee9af89fbc9ae?w=1),"Fixed #153 - when no microSD card is present, test used to hang, now aborts with error.",X,hang

"PX4-Autopilot
"," #63
",[070651221f4f60c2074e7641affa10e2b8714f07](https://github.com/PX4/PX4-Autopilot/commit/070651221f4f60c2074e7641affa10e2b8714f07?w=1),"Add split package logic to improve TCP send performance with delayed ACKs
...",X,performance

"PX4-Autopilot
"," #64
",[1094575ce544860bc66b7c88d6b5eaf419d5ed7d](https://github.com/PX4/PX4-Autopilot/commit/1094575ce544860bc66b7c88d6b5eaf419d5ed7d?w=1),"Fix a bug where recv[from]() would hang when remote host gracefully closed connection
...",X,hang

"PX4-Autopilot
"," #65
",[3bec164b3ae1cd7f9b5dcec532e7d073be96d45d](https://github.com/PX4/PX4-Autopilot/commit/3bec164b3ae1cd7f9b5dcec532e7d073be96d45d?w=1),"Fix a recently introduced memory leak
...",X,memory

"PX4-Autopilot
"," #66
",[e0f83af96fdab2cd5b239dec3a842c4a2a92ad85](https://github.com/PX4/PX4-Autopilot/commit/e0f83af96fdab2cd5b239dec3a842c4a2a92ad85?w=1),"Reset the collection state machine on all I2C errors, increase the retry count.",X,increase

"PX4-Autopilot
"," #67
",[621063ac084954bba11189c8566776aff25bfaeb](https://github.com/PX4/PX4-Autopilot/commit/621063ac084954bba11189c8566776aff25bfaeb?w=1),Increase the number of I2C retries.,X,increase

"PX4-Autopilot
"," #68
",[b620136af4f8de913fd12872a91a80f62861dc4c](https://github.com/PX4/PX4-Autopilot/commit/b620136af4f8de913fd12872a91a80f62861dc4c?w=1),"Added support for MTK revision 19, working condition but configuration of MTK is very slow and needs improvement",X,slow

"PX4-Autopilot
"," #69
",[e896944adcce3d0d5e333186a76b35850e5f9bc9](https://github.com/PX4/PX4-Autopilot/commit/e896944adcce3d0d5e333186a76b35850e5f9bc9?w=1),ms5611: try to measure the performance cost of I2C timeouts,X,performance

"PX4-Autopilot
"," #70
",[8c7e2546ed5222145a6d1745e77d01f7c21c24fc](https://github.com/PX4/PX4-Autopilot/commit/8c7e2546ed5222145a6d1745e77d01f7c21c24fc?w=1),Simplify the PX4IO main loop to cut down on memory consumption.,New:Hard-coded-timing,memory

"PX4-Autopilot
"," #71
",[5b93ab0372dd1208112156850908b87143a0c0dd](https://github.com/PX4/PX4-Autopilot/commit/5b93ab0372dd1208112156850908b87143a0c0dd?w=1),"Clean up and compact the output to fit inside a 80 column display.

Bug fix:
- running/sleeping count

Plus:
- added task state
- show the idle task (to make the number of tasks match the reported number)
- convert some calc to floating point where it doesn't hurt performance (for clarity)
- accept 'q' (standard) and escape to exit the program",X,performance

"PX4-Autopilot
"," #72
",[52bb5e561c2407937d80545c127e37da6d2c3a04](https://github.com/PX4/PX4-Autopilot/commit/52bb5e561c2407937d80545c127e37da6d2c3a04?w=1),Fix memory sizing so that we get the extra 64K we promised.,X,memory

"PX4-Autopilot
"," #73
",[7e8d8f9e7226bcc04a5f8dd4b01c9a6a4f1f9910](https://github.com/PX4/PX4-Autopilot/commit/7e8d8f9e7226bcc04a5f8dd4b01c9a6a4f1f9910?w=1),"Call sub-makes with -r to make them start faster (mostly on Windows, where this inhibits an enormous amount of silly scanning for things).\
Force non-parallel builds for the NuttX archives.",X,faster

"PX4-Autopilot
"," #74
",[8fcbb4f669d8c9003f778f35a94278383e0360ac](https://github.com/PX4/PX4-Autopilot/commit/8fcbb4f669d8c9003f778f35a94278383e0360ac?w=1),"Merge SDIO changes and hack config to make it work.\
We need to resolve the DMA-safe memory allocation story, but until then let's disable the CCM. We still have as much RAM as the v1.x boards in this mode.",X,memory

"PX4-Autopilot
"," #75
",[af27101ffecf2ad4642b1ced23640ff133c7246f](https://github.com/PX4/PX4-Autopilot/commit/af27101ffecf2ad4642b1ced23640ff133c7246f?w=1),"px4io: changed adc_measure() to return 0xffff on error, and lower timeout\
the timeout of 1ms was far too long, and could impact flight
performance\
Returning 0xffff on error matches the FMU code, and allows bad values
to be discarded",New:Hard-coded-timing,performance

"PX4-Autopilot
"," #76
",[dca844a808643131ee299a46a7cb82aea933822f](https://github.com/PX4/PX4-Autopilot/commit/dca844a808643131ee299a46a7cb82aea933822f?w=1),"Based on comments in:\
http://answers.px4.ethz.ch/question/1337/px4io-receiver-connection-problem/?answer=1346#post-id-1346

increase the longest PPM pulse we recognize out to 550µs.",General:Lack_of_documentation,increase

"PX4-Autopilot
"," #77
",[eab01a2efd0c1f1fc9cf32181c63a7e5494f0004](https://github.com/PX4/PX4-Autopilot/commit/eab01a2efd0c1f1fc9cf32181c63a7e5494f0004?w=1),Hotfix: Generate map files for modules as well for more in-depth memory-use debugging.,X,memory

"PX4-Autopilot
"," #78
",[1bf8f7b47ec8dd8f2f494fe40f193b3d1712e025](https://github.com/PX4/PX4-Autopilot/commit/1bf8f7b47ec8dd8f2f494fe40f193b3d1712e025?w=1),"sdlog2 performance increased, fixes and cleanup",CI/CD:Large_change,performance

"PX4-Autopilot
"," #79
",[4253c16b3f3eeb9ed05d2b80c8ce9531a11ffad3](https://github.com/PX4/PX4-Autopilot/commit/4253c16b3f3eeb9ed05d2b80c8ce9531a11ffad3?w=1),Increase array size.,General:Lack_of_documentation,increase

"PX4-Autopilot
"," #80
",[b5f4f1ee808c176c5dc0705b76584b438f151650](https://github.com/PX4/PX4-Autopilot/commit/b5f4f1ee808c176c5dc0705b76584b438f151650?w=1),Adressed performance concern and fixed a copy paste bug,General:Hard-coding,performance

"PX4-Autopilot
"," #81
",[5cb1f4662fb28f68e539f2c8930c0f48ccea3521](https://github.com/PX4/PX4-Autopilot/commit/5cb1f4662fb28f68e539f2c8930c0f48ccea3521?w=1),"multirotor_attitude_control performance improved, tested in flight. PID library new functionality and bugfixes.",New:Rounded_numbers,performance

"PX4-Autopilot
"," #82
",[87c3d1a8c14e9d97bb98d8255c1ba35e875b6c81](https://github.com/PX4/PX4-Autopilot/commit/87c3d1a8c14e9d97bb98d8255c1ba35e875b6c81?w=1),More link performance counters.,X,performance

"PX4-Autopilot
"," #83
",[40c56ab61e04fe73aff3a84d20ffc81e102373f3](https://github.com/PX4/PX4-Autopilot/commit/40c56ab61e04fe73aff3a84d20ffc81e102373f3?w=1),Corrected bug in px4io driver that lead to hang of FMU-IO communication,X,hang

"PX4-Autopilot
"," #84
",[53d69f9e919445d13fe1c98a0164d238b7ff4af6](https://github.com/PX4/PX4-Autopilot/commit/53d69f9e919445d13fe1c98a0164d238b7ff4af6?w=1),Added highlighting of current line to make editing and double-clicking warnings/errors faster,X,faster

"PX4-Autopilot
"," #85
",[70f272bd22e9ccdb9dbc1c15dd76fce4449ea0ab](https://github.com/PX4/PX4-Autopilot/commit/70f272bd22e9ccdb9dbc1c15dd76fce4449ea0ab?w=1),"Disabled SDIO DMA, enabled CCM memory",X,memory

"PX4-Autopilot
"," #86
",[e88d63ef272124e8c0ee9574506d14866feadb8b](https://github.com/PX4/PX4-Autopilot/commit/e88d63ef272124e8c0ee9574506d14866feadb8b?w=1),Increased USB buffer size to cope with fast transfers,X,fast

"PX4-Autopilot
"," #87
",[3f4315b4767ff221936e135b3252794a952f2b95](https://github.com/PX4/PX4-Autopilot/commit/3f4315b4767ff221936e135b3252794a952f2b95?w=1),Hotfix: Increase stack size for low prio commander task,General:Lack_of_documentation,increase

"PX4-Autopilot
"," #88
",[0810b264e5679795f100df3a7363ba3ad9d7765e](https://github.com/PX4/PX4-Autopilot/commit/0810b264e5679795f100df3a7363ba3ad9d7765e?w=1),Hotfix: Increase work stack sizes,General:Lack_of_documentation,increase

"PX4-Autopilot
"," #89
",[3851bf5c10181fe0f56af40fc7e35a3b72bbb845](https://github.com/PX4/PX4-Autopilot/commit/3851bf5c10181fe0f56af40fc7e35a3b72bbb845?w=1),Hotfix: Improve UART1 receive performance,X,performance

"PX4-Autopilot
"," #90
",[81a4df0953e738041d9fdc2b2eb353a635f3003b](https://github.com/PX4/PX4-Autopilot/commit/81a4df0953e738041d9fdc2b2eb353a635f3003b?w=1),sensors: slow down updates rate to 200Hz to free some CPU time,New:Fixed_Communication_Rate,slow

"PX4-Autopilot
"," #91
",[537484f60d37f7f04d2ecaeb4139e2c316565eb2](https://github.com/PX4/PX4-Autopilot/commit/537484f60d37f7f04d2ecaeb4139e2c316565eb2?w=1),"Revert ""sensors: slow down updates rate to 200Hz to free some CPU time""\
This reverts commit 81a4df0953e738041d9fdc2b2eb353a635f3003b.",New:Hard-coded-fine-tuning,slow

"PX4-Autopilot
"," #92
",[c0c366d6ee076ca812fa9672709c1e66fafdb32b](https://github.com/PX4/PX4-Autopilot/commit/c0c366d6ee076ca812fa9672709c1e66fafdb32b?w=1),"position_estimator_inav: estimate distance to bottom rate, increase time of position estimation on only accelerometer, reduce weight for GPS if flow available",New:Hard-coded-timing,increase

"PX4-Autopilot
"," #93
",[937b502d4c3fd582f7be736240f5971e8c0f7c2b](https://github.com/PX4/PX4-Autopilot/commit/937b502d4c3fd582f7be736240f5971e8c0f7c2b?w=1),increase landing speed to v_min * 1.3 for more safety,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #94
",[881c89dd1b55f5e2dbb355562665a94dcc618217](https://github.com/PX4/PX4-Autopilot/commit/881c89dd1b55f5e2dbb355562665a94dcc618217?w=1),increase safety margin for takeoff speed,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #95
",[3ad9dd030c01e233a78aebfd2e20e67168962255](https://github.com/PX4/PX4-Autopilot/commit/3ad9dd030c01e233a78aebfd2e20e67168962255?w=1),Added performance counter for write IOCTL,X,performance

"PX4-Autopilot
"," #96
",[5b302fef59354f536e83a0b14572d2f954a6e682](https://github.com/PX4/PX4-Autopilot/commit/5b302fef59354f536e83a0b14572d2f954a6e682?w=1),HOTFIX: Increased attitude control updates to 50 Hz - was less than 10 Hz and unintended slow,"New:Hard-coded-timing
New:Fixed_Communication_Rate",slow

"PX4-Autopilot
"," #97
",[70d4ef480ac5461ef54ac72a54bd335007e233cc](https://github.com/PX4/PX4-Autopilot/commit/70d4ef480ac5461ef54ac72a54bd335007e233cc?w=1),geofence: do not keep fence in memory,X,memory

"PX4-Autopilot
"," #98
",[c4fc730acad12b74f51d9ba7d3ff267e3e1a1ab3](https://github.com/PX4/PX4-Autopilot/commit/c4fc730acad12b74f51d9ba7d3ff267e3e1a1ab3?w=1),"FMUv2: make all UARTs use 512 byte buffer, 2048 for CDCACM output\
this is important when using UARTs for things like secondary GPS
modules, which may produce large enough transfers that 128 bytes is
not enough.\
The 2048 buffer for CDCACM transmit makes mavlink log and parameter
transfer faster",X,faster

"PX4-Autopilot
"," #99
",[3be1a5182db7bd3802b77e7c03fc14f00ca218c3](https://github.com/PX4/PX4-Autopilot/commit/3be1a5182db7bd3802b77e7c03fc14f00ca218c3?w=1),FMUv1: use larger CDCACM buffer size for faster log transfer on FMUv1,X,faster

"PX4-Autopilot
"," #100
",[480d31f7548d2a4dc7ad55dc2de1f9733045bbd3](https://github.com/PX4/PX4-Autopilot/commit/480d31f7548d2a4dc7ad55dc2de1f9733045bbd3?w=1),fw: increase invalid airspeed threshold,"New:Hard-coded-timing
General:Hard-coding",increase

"PX4-Autopilot
"," #101
",[8c8e9a4ff9584de9d48c1773ead49054ae538b06](https://github.com/PX4/PX4-Autopilot/commit/8c8e9a4ff9584de9d48c1773ead49054ae538b06?w=1),"Enable the PX4IO self check and debug interfaces. No reason to disable them, since they are runtime-configured (and needed, for the case of memory)",X,memory

"PX4-Autopilot
"," #102
",[c3e4e4ee68f1f31d3ae281b0afb281fc7c58bc27](https://github.com/PX4/PX4-Autopilot/commit/c3e4e4ee68f1f31d3ae281b0afb281fc7c58bc27?w=1),"Build fix, replaced usleep with up_udelay in memory lockdown state",X,memory

"PX4-Autopilot
"," #103
",[2aa76f1a3c4eb99074b38d287e0f18a98973671d](https://github.com/PX4/PX4-Autopilot/commit/2aa76f1a3c4eb99074b38d287e0f18a98973671d?w=1),"Fixes to memory check handling, split out switch handling to allow separate initialization",X,memory

"PX4-Autopilot
"," #104
",[dda50c62bfd26463718f50d2f9c1cdbecc7de4ac](https://github.com/PX4/PX4-Autopilot/commit/dda50c62bfd26463718f50d2f9c1cdbecc7de4ac?w=1),"hmc5883: much faster calibration code with bug fixes\
this fixes two bugs in ""hmc5883 calibrate"" and also makes it much
faster, so it can be run on every boot. It now uses the correct 2.5Ga
range when calibrating, and fixes the expected values for X/Y/Z axes\
The basic calibration approach is similar to the APM2 driver, waiting
for 10 good samples after discarding some initial samples. That allows
the calibration to run fast enough that it can be done on every boot
without causing too much boot delay.",X,fast

"PX4-Autopilot
"," #105
",[08a6057ef8c4aa796751c5ac07ab8efa7529b150](https://github.com/PX4/PX4-Autopilot/commit/08a6057ef8c4aa796751c5ac07ab8efa7529b150?w=1),Increase SPI GPIO speed for FMUv1 analog to v2,X,increase

"PX4-Autopilot
"," #106
",[44cd82e2fef20a3fc5aa61711b4cc06012a1e21d](https://github.com/PX4/PX4-Autopilot/commit/44cd82e2fef20a3fc5aa61711b4cc06012a1e21d?w=1),Set default autoland wait time to -1 (infinite wait),X,infinite

"PX4-Autopilot
"," #107
",[3d21a73ddf18b89552aa9bd65965ff6b311487b8](https://github.com/PX4/PX4-Autopilot/commit/3d21a73ddf18b89552aa9bd65965ff6b311487b8?w=1),navigator: fixed infinite RTL->LOITER->RTL... loop on failsafe,X,infinite

"PX4-Autopilot
"," #108
",[f6694c2cef62ee3284598ed1b4d8c6954effab4e](https://github.com/PX4/PX4-Autopilot/commit/f6694c2cef62ee3284598ed1b4d8c6954effab4e?w=1),rc.fw_defaults: increase acceptance radius which is used by navigator to generate virtual waypoints (RTL etc.),X,increase

"PX4-Autopilot
"," #109
",[ccfe476326d8b01e33a3a7ea115054a31fa7a2b9](https://github.com/PX4/PX4-Autopilot/commit/ccfe476326d8b01e33a3a7ea115054a31fa7a2b9?w=1),decrease MC_PITCHRATE_P for TBS Discovery,X,decrease

"PX4-Autopilot
"," #110
",[8425b9bef21e310d1cbd29aad65d34e9dd974d55](https://github.com/PX4/PX4-Autopilot/commit/8425b9bef21e310d1cbd29aad65d34e9dd974d55?w=1),Increase NFILE_DESCRIPTORS to 36,General:Lack_of_documentation,increase

"PX4-Autopilot
"," #111
",[9e41f6af18d3d84413501ce37737d574fd20816d](https://github.com/PX4/PX4-Autopilot/commit/9e41f6af18d3d84413501ce37737d574fd20816d?w=1),"mavlink: memory leaks on exit fixed, minor fixes",X,memory

"PX4-Autopilot
"," #112
",[4cee3614c7bc2e960ac52e59014bc4d08b8da11e](https://github.com/PX4/PX4-Autopilot/commit/4cee3614c7bc2e960ac52e59014bc4d08b8da11e?w=1),rc.usb: increase data rate to 10000bytes/s for USB,General:Lack_of_documentation,increase

"PX4-Autopilot
"," #113
",[183a0cdb22fd824d87912ea3d2c2470f0d28ed39](https://github.com/PX4/PX4-Autopilot/commit/183a0cdb22fd824d87912ea3d2c2470f0d28ed39?w=1),"MC: default MC_YAWRATE_I changed for all setups, navigator: increase yaw acceptance to 0.2rad ~ 11deg",General:Code_Duplication,increase

"PX4-Autopilot
"," #114
",[e075d05f579091fb9c605c856650cbfd1587a044](https://github.com/PX4/PX4-Autopilot/commit/e075d05f579091fb9c605c856650cbfd1587a044?w=1),Move Pauls EKF into a class and instantiate only when / if needed. Checking for low memory conditions as we should.,New:Hard-coded-timing,memory

"PX4-Autopilot
"," #115
",[7b95d36405cb63b53fd1fea2c25e29aedca5a3a2](https://github.com/PX4/PX4-Autopilot/commit/7b95d36405cb63b53fd1fea2c25e29aedca5a3a2?w=1),navigator hotfix: Increase acceptance range for yaw setpoints.,X,increase

"PX4-Autopilot
"," #116
",[b770c9fc1edc570fc216bdf849f84519e4e3513f](https://github.com/PX4/PX4-Autopilot/commit/b770c9fc1edc570fc216bdf849f84519e4e3513f?w=1),"position_estimator_inav: increase acceptable EPH/EPV, in commander use EPH/EPV to decide if global position valid",X,increase

"PX4-Autopilot
"," #117
",[595eb679b30442b52ccc7a2c2ce7ade7b5e5c6c9](https://github.com/PX4/PX4-Autopilot/commit/595eb679b30442b52ccc7a2c2ce7ade7b5e5c6c9?w=1),"ekf_att_pos_estimator: Fixed mag initialization, now starts with initial measurement instead of defaults for faster convergence",X,faster

"PX4-Autopilot
"," #118
",[d1bd4b0a45ec0f6f081560fbadf675e21ce53d83](https://github.com/PX4/PX4-Autopilot/commit/d1bd4b0a45ec0f6f081560fbadf675e21ce53d83?w=1),qu4d increase pwm max,General:Lack_of_documentation,increase

"PX4-Autopilot
"," #119
",[8d3fed09443faa6a3c79b68b7800ed3472877a1c](https://github.com/PX4/PX4-Autopilot/commit/8d3fed09443faa6a3c79b68b7800ed3472877a1c?w=1),"Reduce potential dataman memory fragmentation\
The data manager dynamically allocates relatively small work item blocks
on an as needed basis. It never frees these, instead maintaining then in
a list of available block for reuse when needed. Even if these blocks
are small, the are required at non-deterministic times and can end up
scattered in memory thus causing memory fragmentation. In order to
mitigate this problems work item blocks are allocated in groups of 8 in
contiguous memory to reduce the number of scattered memory allocations.
In reality, based on current usage, rarely will more than one group of 8
be allocated.",X,memory

"PX4-Autopilot
"," #120
",[18ed3cbbb8ba4eabd32db3d07c7480c1af22ebc0](https://github.com/PX4/PX4-Autopilot/commit/18ed3cbbb8ba4eabd32db3d07c7480c1af22ebc0?w=1),Increase servo out rate via USB,General:Lack_of_documentation,increase

"PX4-Autopilot
"," #121
",[0655aeb7ecb73eeaedfbd41171f07f9a247b32db](https://github.com/PX4/PX4-Autopilot/commit/0655aeb7ecb73eeaedfbd41171f07f9a247b32db?w=1),"startup: NuttX seems to free memory only AFTER the next command is issued, requiring us to give it some time to do memory management so it does not keep starting tasks on top of each other. May need some consideration on main startup script as well.",New:Hard-coded-timing,memory

"PX4-Autopilot
"," #122
",[b43f2e8be95417cdb58b670e549cffc6445b8f81](https://github.com/PX4/PX4-Autopilot/commit/b43f2e8be95417cdb58b670e549cffc6445b8f81?w=1),USB startup: Give NuttX enough time to tear down an app and free memory before starting the next,New:Hard-coded-timing,memory

"PX4-Autopilot
"," #123
",[aa312f96f8d682c85b422ef8c5fbc89b9391712e](https://github.com/PX4/PX4-Autopilot/commit/aa312f96f8d682c85b422ef8c5fbc89b9391712e?w=1),drivers: Fix compile warnings and non-standard performance counter names,New:Rounded_numbers,performance

"PX4-Autopilot
"," #124
",[b9b81beb17eb449921f11f46bc419056dce03852](https://github.com/PX4/PX4-Autopilot/commit/b9b81beb17eb449921f11f46bc419056dce03852?w=1),fw att: add performance counter,X,performance

"PX4-Autopilot
"," #125
",[b3d6dcb2e5a1f66c42d575f13cbc5a7eef16db27](https://github.com/PX4/PX4-Autopilot/commit/b3d6dcb2e5a1f66c42d575f13cbc5a7eef16db27?w=1),Pre-emptively increase the log buffer - after the last cleanup we got again plenty of RAM,General:Hard-coding,increase

"PX4-Autopilot
"," #126
",[fe28069effe77dcac143c0194b982028438068f3](https://github.com/PX4/PX4-Autopilot/commit/fe28069effe77dcac143c0194b982028438068f3?w=1),"Increase UART1 & UART5 RX&Tx buffer sizes\
To fix MAVLink message garbling problems.",General:Hard-coding,increase

"PX4-Autopilot
"," #127
",[d0f4232ac6e2ff9d796df9d995e749734edc32ee](https://github.com/PX4/PX4-Autopilot/commit/d0f4232ac6e2ff9d796df9d995e749734edc32ee?w=1),Build and runtime fixes for matlab csv serial bridge,X,runtime

"PX4-Autopilot
"," #128
",[72afa2ca2bb7ce85262dd201b7620e310484f6c5](https://github.com/PX4/PX4-Autopilot/commit/72afa2ca2bb7ce85262dd201b7620e310484f6c5?w=1),Capture TX issues in performance counter instead of spamming console in mavlink app,X,performance

"PX4-Autopilot
"," #129
",[092ede366a531ad68f7ccc2f372f83b8d2993242](https://github.com/PX4/PX4-Autopilot/commit/092ede366a531ad68f7ccc2f372f83b8d2993242?w=1),"Estimator: Clean up delta quat calculations, put them in a sweet spot between accuracy and runtime.",X,runtime

"PX4-Autopilot
"," #130
",[fea4845ed97ca5219ceb8af0b0fb6d68603eea17](https://github.com/PX4/PX4-Autopilot/commit/fea4845ed97ca5219ceb8af0b0fb6d68603eea17?w=1),"SPI: make _bus protected\
this allows runtime use of internal/external bus to determine if DRDY
should be used on the L3GD20",X,runtime

"PX4-Autopilot
"," #131
",[d6632ee2dda39de78be1bbfa6754af8b59c58655](https://github.com/PX4/PX4-Autopilot/commit/d6632ee2dda39de78be1bbfa6754af8b59c58655?w=1),"ardrone: Optimize for size, since performance is good at any rate",X,performance

"PX4-Autopilot
"," #132
",[2de38d0628f3146caea28cd42b30840241269f41](https://github.com/PX4/PX4-Autopilot/commit/2de38d0628f3146caea28cd42b30840241269f41?w=1),"Improve update performance and clean up compiler warnings in px4io driver\
- Fix compiler warnings in px4io_serial.cpp
- Fix compiler warnings in px4io_uploader.cpp
- Rename confusing overloaded send method with nearly identical
parameters in px4io_uploader.cpp
- Improve update performance by using maximum size programming buffer
since we are no longer limited by stack size.",X,performance

"PX4-Autopilot
"," #133
",[8e12d79ef4b32da98dfb13af1321a6855ecbdc3d](https://github.com/PX4/PX4-Autopilot/commit/8e12d79ef4b32da98dfb13af1321a6855ecbdc3d?w=1),Increase GPS position timeout to real-life timeouts. More work needed.,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #134
",[3b3e6f5aaafd1247447cad7070e3488e5798ce3c](https://github.com/PX4/PX4-Autopilot/commit/3b3e6f5aaafd1247447cad7070e3488e5798ce3c?w=1),Increase filter pass-band,X,increase

"PX4-Autopilot
"," #135
",[c9eea8fbfaad7bfb3eee36a49588c9ac3a42ddc6](https://github.com/PX4/PX4-Autopilot/commit/c9eea8fbfaad7bfb3eee36a49588c9ac3a42ddc6?w=1),nshterm: increase stack size to fix crash on 'ls -l',New:Hard-coded-timing,increase

"PX4-Autopilot
"," #136
",[1dc23d0c49d99fa93284a277a6bc4970ac0e7b3b](https://github.com/PX4/PX4-Autopilot/commit/1dc23d0c49d99fa93284a277a6bc4970ac0e7b3b?w=1),Disable mTECS until runtime error is better understood,X,runtime

"PX4-Autopilot
"," #137
",[7f293be7d77603768899aedb438821dd19b8b4d7](https://github.com/PX4/PX4-Autopilot/commit/7f293be7d77603768899aedb438821dd19b8b4d7?w=1),"mavlink, rc.usb: increase HIL_CONTROLS rate and datarate on USB to allow HIL simulation @ 200Hz",New:Hard-coded-timing,increase

"PX4-Autopilot
"," #138
",[3f4aef60c88b1e570dd30bc47a13d5340073e9a9](https://github.com/PX4/PX4-Autopilot/commit/3f4aef60c88b1e570dd30bc47a13d5340073e9a9?w=1),Increase timeout in an attempt to prevent timout python failure,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #139
",[54fc6aa6788a125b387926a45023844daa42ec48](https://github.com/PX4/PX4-Autopilot/commit/54fc6aa6788a125b387926a45023844daa42ec48?w=1),Hotfix: Optimize shell commands for size - we do not need massive performance there,X,performance

"PX4-Autopilot
"," #140
",[a54ef70a207cd892a9ef406df6f1aa0732035537](https://github.com/PX4/PX4-Autopilot/commit/a54ef70a207cd892a9ef406df6f1aa0732035537?w=1),Decrease I2C timeout in config so it matches the previous 500 us timeout as close as possible. This is necessary after fixing the NuttX I2C timeout logic,New:Hard-coded-timing,decrease

"PX4-Autopilot
"," #141
",[6791ab72a910b00818026ac60d95d8df20bfa0d3](https://github.com/PX4/PX4-Autopilot/commit/6791ab72a910b00818026ac60d95d8df20bfa0d3?w=1),Run faster for better accuracy.,New:Hard-coded-timing,faster

"PX4-Autopilot
"," #142
",[bc23b6239c50527aa550eed3bc6f17dec15c5c97](https://github.com/PX4/PX4-Autopilot/commit/bc23b6239c50527aa550eed3bc6f17dec15c5c97?w=1),increase ram,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #143
",[0553771f4fd6fbdba43669a8f17185ed61f96a51](https://github.com/PX4/PX4-Autopilot/commit/0553771f4fd6fbdba43669a8f17185ed61f96a51?w=1),Adapted for sharded library use with ROS. Problems to solve: error library from PX4 does not work yet. math functions such as isfinite need to be shared as well. performance library needs to be shared as well (commented for now),X,performance

"PX4-Autopilot
"," #144
",[cfe14d78c5a9d2f80ebc0282e4bc400dcba6a795](https://github.com/PX4/PX4-Autopilot/commit/cfe14d78c5a9d2f80ebc0282e4bc400dcba6a795?w=1),Adapted for sharded library use with ROS. Problems to solve: error library from PX4 does not work yet. math functions such as isfinite need to be shared as well. performance library needs to be shared as well (commented for now),X,performance

"PX4-Autopilot
"," #145
",[77c823d3cd0f49014a33632ec9ef3efdd7d3dfa5](https://github.com/PX4/PX4-Autopilot/commit/77c823d3cd0f49014a33632ec9ef3efdd7d3dfa5?w=1),Adapted for sharded library use with ROS. Problems to solve: error library from PX4 does not work yet. math functions such as isfinite need to be shared as well. performance library needs to be shared as well (commented for now),X,performance

"PX4-Autopilot
"," #146
",[2b8a9b632555708731d93f4aa7945d19e83d3134](https://github.com/PX4/PX4-Autopilot/commit/2b8a9b632555708731d93f4aa7945d19e83d3134?w=1),"Restored performance counter functionality, ROS package used own source file for function definitions but per_counter.h stays the same",X,performance

"PX4-Autopilot
"," #147
",[038e1cac03198259d6f7630c6bb7c65c35f44fae](https://github.com/PX4/PX4-Autopilot/commit/038e1cac03198259d6f7630c6bb7c65c35f44fae?w=1),increase default engine failure threshold,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #148
",[ba2f55c3d7f5872aaf07e20b58b15df85417d43a](https://github.com/PX4/PX4-Autopilot/commit/ba2f55c3d7f5872aaf07e20b58b15df85417d43a?w=1),"Revert ""increase ram""\
This reverts commit bc23b6239c50527aa550eed3bc6f17dec15c5c97.",New:Hard-coded-timing,increase

"PX4-Autopilot
"," #149
",[5bc2b34e482fe8c4b0cab8f9748bd97dc3e17291](https://github.com/PX4/PX4-Autopilot/commit/5bc2b34e482fe8c4b0cab8f9748bd97dc3e17291?w=1),Reset performance counters on arming to allow better resolution during flight,X,performance

"PX4-Autopilot
"," #150
",[acb739655d5c2ebf50449842ae2b7b9b7c76dbd1](https://github.com/PX4/PX4-Autopilot/commit/acb739655d5c2ebf50449842ae2b7b9b7c76dbd1?w=1),"Remove huge memory overhead in RC channels topic, was completely unnecessary",X,memory

"PX4-Autopilot
"," #151
",[2f271888d2ed934c271637c22554b503ce68e535](https://github.com/PX4/PX4-Autopilot/commit/2f271888d2ed934c271637c22554b503ce68e535?w=1),Added performance counter for SD log performance of write() call,X,performance

"PX4-Autopilot
"," #152
",[08d6cbe6bf0b5b04f63e42c6c60f5b1fe6167547](https://github.com/PX4/PX4-Autopilot/commit/08d6cbe6bf0b5b04f63e42c6c60f5b1fe6167547?w=1),commander: Decrease RC-signal-regained message length to stay within 50 character length limit at all times,X,decrease

"PX4-Autopilot
"," #153
",[c906c2123822ef127026eeaf272b3aceed9f8995](https://github.com/PX4/PX4-Autopilot/commit/c906c2123822ef127026eeaf272b3aceed9f8995?w=1),"px4io: prevent use of uninitialised memory in io_set_arming_state()\
the vehicle may not have setup a control_mode. We need to check the
return of orb_copy() to ensure we are getting initialised values",X,memory

"PX4-Autopilot
"," #154
",[5bb03f1c2db3eb5620caf806b053f8194490969a](https://github.com/PX4/PX4-Autopilot/commit/5bb03f1c2db3eb5620caf806b053f8194490969a?w=1),subscriber example increase stack size,General:Hard-coding,increase

"PX4-Autopilot
"," #155
",[71f6a34367794a887704e2898f8a10101bacfb12](https://github.com/PX4/PX4-Autopilot/commit/71f6a34367794a887704e2898f8a10101bacfb12?w=1),mc att: increase stack size,General:Hard-coding,increase

"PX4-Autopilot
"," #156
",[262b9fc7545805c7b93a15cbb80a2f67db5ecdf0](https://github.com/PX4/PX4-Autopilot/commit/262b9fc7545805c7b93a15cbb80a2f67db5ecdf0?w=1),fw pos ctl: make loop performance counter more meaningful,X,performance

"PX4-Autopilot
"," #157
",[c9ca61ef5b23a370fcaf3e2a0546ab5452b65733](https://github.com/PX4/PX4-Autopilot/commit/c9ca61ef5b23a370fcaf3e2a0546ab5452b65733?w=1),"mavlink: don't slow mission updates down like this, otherwise we might miss mission results",New:Hard-coded-timing,slow

"PX4-Autopilot
"," #158
",[9292c8f405b0ed208443df0b1f9ebd497bb518ab](https://github.com/PX4/PX4-Autopilot/commit/9292c8f405b0ed208443df0b1f9ebd497bb518ab?w=1),add interrupt latency printout command and mean/variance to interval performance counter,New:Hard-coded-timing,performance

"PX4-Autopilot
"," #159
",[c583f1fe8b9e66b42dd4697a5908541dfdd57f69](https://github.com/PX4/PX4-Autopilot/commit/c583f1fe8b9e66b42dd4697a5908541dfdd57f69?w=1),increase commander framesize,General:Hard-coding,increase

"PX4-Autopilot
"," #160
",[ee7e008008caa04f905654cb18e6d68fd980f8cd](https://github.com/PX4/PX4-Autopilot/commit/ee7e008008caa04f905654cb18e6d68fd980f8cd?w=1),increase commander framesize,X,increase

"PX4-Autopilot
"," #161
",[59e0b67c8eaa4295c23f53500ff5c8e3b34ff5a8](https://github.com/PX4/PX4-Autopilot/commit/59e0b67c8eaa4295c23f53500ff5c8e3b34ff5a8?w=1),NuttxConfig: increase I2C timeout to 10ms,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #162
",[ca47952281cfe66732b08d3878eb6c8b1613abeb](https://github.com/PX4/PX4-Autopilot/commit/ca47952281cfe66732b08d3878eb6c8b1613abeb?w=1),"l3gd20: added register checking\
this checks at runtime that key registers have correct values",X,runtime

"PX4-Autopilot
"," #163
",[04c273bca6c99f31fd04741234d9c8efa849b553](https://github.com/PX4/PX4-Autopilot/commit/04c273bca6c99f31fd04741234d9c8efa849b553?w=1),sdlog2: slow down the free space check a bit more,New:Hard-coded-timing,slow

"PX4-Autopilot
"," #164
",[e8eff3061f5e9c451c94d081932cac0e62e1a9b9](https://github.com/PX4/PX4-Autopilot/commit/e8eff3061f5e9c451c94d081932cac0e62e1a9b9?w=1),"Revert ""sdlog2: slow down the free space check a bit more""\
This reverts commit 04c273bca6c99f31fd04741234d9c8efa849b553.",New:Hard-coded-timing,slow

"PX4-Autopilot
"," #165
",[a3bce71b97b6e958737d11414cce2609e5d4848d](https://github.com/PX4/PX4-Autopilot/commit/a3bce71b97b6e958737d11414cce2609e5d4848d?w=1),"Performance counters: Estimate RMS for elapsed counters. Allow to use a perf counter across processes, deal with overruns and other resulting inconsistencies from cross-process use.",X,performance

"PX4-Autopilot
"," #166
",[2bff39d562f1d7c0ffa5e8875d355eb3271c70fe](https://github.com/PX4/PX4-Autopilot/commit/2bff39d562f1d7c0ffa5e8875d355eb3271c70fe?w=1),"MPU6K driver: Start performance counters for system latency, as its commonly the main sensor",X,performance

"PX4-Autopilot
"," #167
",[172dbf37070e2dccadc8779d6e0926d3f8d60706](https://github.com/PX4/PX4-Autopilot/commit/172dbf37070e2dccadc8779d6e0926d3f8d60706?w=1),Performance counters: Add option to set otherwise estimated time interval,X,performance

"PX4-Autopilot
"," #168
",[05367f8a006ae6e36fec0911c97490c31033551b](https://github.com/PX4/PX4-Autopilot/commit/05367f8a006ae6e36fec0911c97490c31033551b?w=1),Handle slight increase of frame size in example,General:Hard-coding,increase

"PX4-Autopilot
"," #169
",[ae6198b0bad801535c879d3269920e12781cea92](https://github.com/PX4/PX4-Autopilot/commit/ae6198b0bad801535c879d3269920e12781cea92?w=1),"sdlog2: Made sdlog writer performance available in log fiiles, reduced telemetry messages",X,performance

"PX4-Autopilot
"," #170
",[1cff86b0b562301020973f354043f27272d29f5b](https://github.com/PX4/PX4-Autopilot/commit/1cff86b0b562301020973f354043f27272d29f5b?w=1),ros mixer: increase number of controls to default to fix undefined behaviour,X,increase

"PX4-Autopilot
"," #171
",[f23e603d02ba416ae250770cdaad6a859d6bae69](https://github.com/PX4/PX4-Autopilot/commit/f23e603d02ba416ae250770cdaad6a859d6bae69?w=1),mc attctl multiplatform: increase stack size,General:Hard-coding,increase

"PX4-Autopilot
"," #172
",[9c627255ccc980270fe56b6c4ddeb494e1ce0f50](https://github.com/PX4/PX4-Autopilot/commit/9c627255ccc980270fe56b6c4ddeb494e1ce0f50?w=1),MPU6000: Increase gyro offset tolerance to 7 dps,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #173
",[3b07890361d56ce80d881e3969ff097b5cd96af4](https://github.com/PX4/PX4-Autopilot/commit/3b07890361d56ce80d881e3969ff097b5cd96af4?w=1),"update sitl default params, make posctrl very slow for now",New:Hard-coded-fine-tuning,slow

"PX4-Autopilot
"," #174
",[28e943ca28f10cc1ea205a0e18cf814c8a2afa52](https://github.com/PX4/PX4-Autopilot/commit/28e943ca28f10cc1ea205a0e18cf814c8a2afa52?w=1),setting parameters at runtime to get rid of the designated union initializer,X,runtime

"PX4-Autopilot
"," #175
",[c7d0cb6bd72deef810cfe1a16ac7b78810f8036b](https://github.com/PX4/PX4-Autopilot/commit/c7d0cb6bd72deef810cfe1a16ac7b78810f8036b?w=1),lsm303d: Fix memory initialization and error_count not set,X,memory

"PX4-Autopilot
"," #176
",[74177a2688f1163ec9659f3847d7cd17d0eb325f](https://github.com/PX4/PX4-Autopilot/commit/74177a2688f1163ec9659f3847d7cd17d0eb325f?w=1),px4_uploader: Push program bytes faster by using bigger blocks,"General:Hard-coding
General:Lack_of_documentation",faster

"PX4-Autopilot
"," #177
",[81648f84cd97ec865ba7f20cebeb6285f7ef6d18](https://github.com/PX4/PX4-Autopilot/commit/81648f84cd97ec865ba7f20cebeb6285f7ef6d18?w=1),increase RTL descend altitude,"New:Hard-coded-fine-tuning
General:Lack_of_documentation",increase

"PX4-Autopilot
"," #178
",[48bf84ff3754109fe6cf8e0e161eb70ae0987bfe](https://github.com/PX4/PX4-Autopilot/commit/48bf84ff3754109fe6cf8e0e161eb70ae0987bfe?w=1),"oreoled: support send_bytes ioctl\
Also increase maximum command length to 24 bytes","General:Hard-coding
General:Lack_of_documentation",increase

"PX4-Autopilot
"," #179
",[3e5b8ded8cdd650e961008ce65c93dd64a326554](https://github.com/PX4/PX4-Autopilot/commit/3e5b8ded8cdd650e961008ce65c93dd64a326554?w=1),Increase rate of MAVLink output on companion link,"General:Hard-coding
General:Lack_of_documentation",increase

"PX4-Autopilot
"," #180
",[5c3f4d21944fb779feade46e1aba81ca5705462f](https://github.com/PX4/PX4-Autopilot/commit/5c3f4d21944fb779feade46e1aba81ca5705462f?w=1),"GPIO led: Do not allocate memory statically, but only when module loads",X,memory

"PX4-Autopilot
"," #181
",[61437a5587b20e7e3c79fd1ab91e945dc0c316fb](https://github.com/PX4/PX4-Autopilot/commit/61437a5587b20e7e3c79fd1ab91e945dc0c316fb?w=1),"MAVLink app: Do no allocate memory statically, but only on execution on stack.",X,memory

"PX4-Autopilot
"," #182
",[2883edaecd442e3049ad3224989cb384096e637a](https://github.com/PX4/PX4-Autopilot/commit/2883edaecd442e3049ad3224989cb384096e637a?w=1),ros sitl: increase Z gains for ardrone and iris,"General:Hard-coding
General:Lack_of_documentation",increase

"PX4-Autopilot
"," #183
",[9db48df3d63836c5cca4480d847777c166bb31e8](https://github.com/PX4/PX4-Autopilot/commit/9db48df3d63836c5cca4480d847777c166bb31e8?w=1),Slightly increase commander stack size to accomodate any additional printf calls,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #184
",[37de377dcffb07ef49bacc0ec6ff722dadba1154](https://github.com/PX4/PX4-Autopilot/commit/37de377dcffb07ef49bacc0ec6ff722dadba1154?w=1),commander: Increase stack size for low prio task to accomodate accel cal.,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #185
",[ad54ff616dc83a703fe51c2a80a0662618116782](https://github.com/PX4/PX4-Autopilot/commit/ad54ff616dc83a703fe51c2a80a0662618116782?w=1),commander: Increase frame size limit,X,increase

"PX4-Autopilot
"," #186
",[78741c87e5415c9e894f619e28b145e127576a56](https://github.com/PX4/PX4-Autopilot/commit/78741c87e5415c9e894f619e28b145e127576a56?w=1),"MAVLink app: 1) only transmit active params, 2) send params faster, 3) ensure no overflow occurs on buffer when sending at higher rate.",New:Fixed_Communication_Rate,faster

"PX4-Autopilot
"," #187
",[9a9efdaaa5a1a67be9a0939495503f222a1f3987](https://github.com/PX4/PX4-Autopilot/commit/9a9efdaaa5a1a67be9a0939495503f222a1f3987?w=1),commander: Increase timeout on airspeed sensor for the prearm_check,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #188
",[f1b2efeeaf1ca41fa20263af37b94485dcb9cee6](https://github.com/PX4/PX4-Autopilot/commit/f1b2efeeaf1ca41fa20263af37b94485dcb9cee6?w=1),increase default roll/pitch rate limits to 360dps,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #189
",[f23bc38d3ec45c2b3d2d72b06e2426d40cefd10c](https://github.com/PX4/PX4-Autopilot/commit/f23bc38d3ec45c2b3d2d72b06e2426d40cefd10c?w=1),increase default roll/pitch rate limits to 360dps,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #190
",[6e060c01a76401172e452e562993f79acfef9d1a](https://github.com/PX4/PX4-Autopilot/commit/6e060c01a76401172e452e562993f79acfef9d1a?w=1),SDLOG2: Optimize runtime efficiency,X,runtime

"PX4-Autopilot
"," #191
",[5299f767069be3bd8014a86a11a1748371e952a3](https://github.com/PX4/PX4-Autopilot/commit/5299f767069be3bd8014a86a11a1748371e952a3?w=1),"POSIX: initialize before running script\
The initialization functions were called after the script
commands were run causing a deadlock waiting for an
uninitialized semaphore.
...",X,deadlock

"PX4-Autopilot
"," #192
",[6db77dc8bbae32ee15a17e7a5caa90f7e6191b2c](https://github.com/PX4/PX4-Autopilot/commit/6db77dc8bbae32ee15a17e7a5caa90f7e6191b2c?w=1),"Experimental virtual file support\
QuRT does not have a filesystem, so creating a virtual filesystem
that could be implemented as an in-memory file or a remote file
over fastRPC.
...",X,memory

"PX4-Autopilot
"," #193
",[3ac95fb5816dcbdce4a269767c3f6019c434811f](https://github.com/PX4/PX4-Autopilot/commit/3ac95fb5816dcbdce4a269767c3f6019c434811f?w=1),"lsm303d: run sampling 200usec faster to avoid aliasing\
this runs the sampling of the accelerometer 200usec faster than
requested and then throw away duplicates using the accelerometer
status register data ready bit. This avoids aliasing due to drift in
the stm32 clock compared to the lsm303d clock",X,faster

"PX4-Autopilot
"," #194
",[a710159263ea5f561d352073504958a9a9f85c81](https://github.com/PX4/PX4-Autopilot/commit/a710159263ea5f561d352073504958a9a9f85c81?w=1),"mpu6000: sample at 200usec faster rate to avoid aliasing

this runs the mpu6000 200usec faster than requested then detects and
disccards duplicates by comparing accel values. This avoids a nasty
aliasing issue due to clock drift between the stm32 and mpu6000",New:Hard-coded-timing,faster

"PX4-Autopilot
"," #195
",[dc4d5619eae2bb6eebfe2f11ee97f5734a35d731](https://github.com/PX4/PX4-Autopilot/commit/dc4d5619eae2bb6eebfe2f11ee97f5734a35d731?w=1),"Reduced the amount of memory used by params to only that that is needed

Conflicts:
	src/modules/systemlib/param/param.c",X,memory

"PX4-Autopilot
"," #196
",[f154f6e5e7598b02c2a5c5bb87e646a3425421a8](https://github.com/PX4/PX4-Autopilot/commit/f154f6e5e7598b02c2a5c5bb87e646a3425421a8?w=1),MAVLink transmission: Allow faster overall transmissions.,New:Hard-coded-timing,faster

"PX4-Autopilot
"," #197
",[5c53d38652dc6c97e216ea6b70215a95890df572](https://github.com/PX4/PX4-Autopilot/commit/5c53d38652dc6c97e216ea6b70215a95890df572?w=1),FMUv2 config: Increase USB TX buf size further to speed up MAVLink FTP transfers,New:Fixed_Communication_Rate,increase

"PX4-Autopilot
"," #198
",[03ef6a30ec5fa7c09b0de3ba00d577ccca5d39e6](https://github.com/PX4/PX4-Autopilot/commit/03ef6a30ec5fa7c09b0de3ba00d577ccca5d39e6?w=1),Speed up param transmit now that we are faster on USB,New:Fixed_Communication_Rate,faster

"PX4-Autopilot
"," #199
",[38004cdd955dad01801b750e18e45ac5dd3000e4](https://github.com/PX4/PX4-Autopilot/commit/38004cdd955dad01801b750e18e45ac5dd3000e4?w=1),PreflightCheck: Increase GPS timeout to 4 sec,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #200
",[a90caf7b7b3e70fb61b57c6dce6710d78debbfcd](https://github.com/PX4/PX4-Autopilot/commit/a90caf7b7b3e70fb61b57c6dce6710d78debbfcd?w=1),l3gd20: faster gyro interrupts,New:Hard-coded-timing,faster

"PX4-Autopilot
"," #201
",[bc75814d500c673fa8699f8d242c88e610ecded2](https://github.com/PX4/PX4-Autopilot/commit/bc75814d500c673fa8699f8d242c88e610ecded2?w=1),Increase buffer sizes on companion link,X,increase

"PX4-Autopilot
"," #202
",[d43b0513cec925125e0cef00b9df8ffbe1801f72](https://github.com/PX4/PX4-Autopilot/commit/d43b0513cec925125e0cef00b9df8ffbe1801f72?w=1),Increase buffer sizes on companion link,X,increase

"PX4-Autopilot
"," #203
",[a734fc96d117a732e5584e758ccff52fe041e828](https://github.com/PX4/PX4-Autopilot/commit/a734fc96d117a732e5584e758ccff52fe041e828?w=1),"extensive orb_advert_t fixes\
The calls to orb_advertise were being mishandled throughout the code.
There were ::close() calls on memory pointers, there were checks
against < 0 when it is a pointer to a object and values larger than
0x7ffffffff are valid. Some places orb_advert_t variables were
being initialized as 0 other places as -1.\
The orb_advert_t type was changed to uintptr_t so the pointer value
would not be wrapped as a negative number. This was causing a failure
on ARM.\
Tests for < 0 were changed to == 0 since a null pointer is the valid
representation for error, or uninitialized.
...",CI/CD:Too_many_changes,memory

"PX4-Autopilot
"," #204
",[b7986e6fdd103064128d0933f7cb32ab4252159b](https://github.com/PX4/PX4-Autopilot/commit/b7986e6fdd103064128d0933f7cb32ab4252159b?w=1),land detector: Improve performance for fixed wing setups,New:General:Hard-coded-fine-tuning,performance

"PX4-Autopilot
"," #205
",[acfd1ea51976300b5b89a7dc0f8c5158b3150604](https://github.com/PX4/PX4-Autopilot/commit/acfd1ea51976300b5b89a7dc0f8c5158b3150604?w=1),"POSIX: added hrt_queue for handling fast periodic events\
The workqueues measure time in ticks  which is typically 10ms.
Some interrupt events in Nuttx occur at about 1ms so a more
granular workqueue is needed for POSIX.
...",General:bottleneck,fast

"PX4-Autopilot
"," #206
",[fb778af8b3274be5ae5963382af0161ac6c7848e](https://github.com/PX4/PX4-Autopilot/commit/fb778af8b3274be5ae5963382af0161ac6c7848e?w=1),increase max file descriptors to 100,General:Hard-coding,increase

"PX4-Autopilot
"," #207
",[4aa4038e270c33e36ba2f8db866db3c6abec6222](https://github.com/PX4/PX4-Autopilot/commit/4aa4038e270c33e36ba2f8db866db3c6abec6222?w=1),increase number of arguments passable to apps,X,increase

"PX4-Autopilot
"," #208
",[9155e8a7fe2a7611c6b1ed136b5691475546a65c](https://github.com/PX4/PX4-Autopilot/commit/9155e8a7fe2a7611c6b1ed136b5691475546a65c?w=1),FX79: Increase travel,"General:Lack_of_documentation
?",increase

"PX4-Autopilot
"," #209
",[8838b18da75d6f4354f73b38152c2ca98f9197aa](https://github.com/PX4/PX4-Autopilot/commit/8838b18da75d6f4354f73b38152c2ca98f9197aa?w=1),FW attitude control: Run attitude controller as fast as we can to minimize latency,"New:Fixed_Communication_Rate
New:Hard-coded-timing",fast

"PX4-Autopilot
"," #210
",[55ed9e96126cab150dbad1d9bd9db392b75781d9](https://github.com/PX4/PX4-Autopilot/commit/55ed9e96126cab150dbad1d9bd9db392b75781d9?w=1),"ECL: Run TECS filter faster, adjust gains accordingly",New:General:Hard-coded-fine-tuning,faster

"PX4-Autopilot
"," #211
",[9ecf4345a5cacc05f3c434d3c7516ade700d000f](https://github.com/PX4/PX4-Autopilot/commit/9ecf4345a5cacc05f3c434d3c7516ade700d000f?w=1),"ORBMap: bugfix, got rid of infinite Looping Louie",X,infinite

"PX4-Autopilot
"," #212
",[3d92364d9eb391d3f0d615df7092d96194e2d5b0](https://github.com/PX4/PX4-Autopilot/commit/3d92364d9eb391d3f0d615df7092d96194e2d5b0?w=1),camera trigger : increase free cycling time when we are not enabled,-,increase

"PX4-Autopilot
"," #213
",[1a8703ec1c0aee86aa2440fc8b7cd627f65854a9](https://github.com/PX4/PX4-Autopilot/commit/1a8703ec1c0aee86aa2440fc8b7cd627f65854a9?w=1),"Improved logging with both compile and runtime level filtering\
The device level debug will have to be removed and the debugging
can be based on this new logging structure which can tell where
an error (or debug output) occured whch the current implmentation
cannot.\
The one limitation is the new macros cannot take a char* for the
format parameter. It must be an actual string literal because it
is concatenated with other strings.
...",X,runtime

"PX4-Autopilot
"," #214
",[552c9800a9a394e5ad351309d62278aecd44073f](https://github.com/PX4/PX4-Autopilot/commit/552c9800a9a394e5ad351309d62278aecd44073f?w=1),"px4_log: Fixed compiler warning when using PX4_LOG\
If __px4_log_level_current is unsigned then the runtime filter
comparison warns because an unsigned value can't be less than zero.\
Changed typed to signed so compiler will not issue a warning.
...",X,runtime

"PX4-Autopilot
"," #215
",[52b0f17ff31213e1c073cf53c069e8883a3ca0e9](https://github.com/PX4/PX4-Autopilot/commit/52b0f17ff31213e1c073cf53c069e8883a3ca0e9?w=1),increase highest pwm to 2150,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #216
",[5cf20c8dcfeba450bcc926f4a73b81c382a9ad43](https://github.com/PX4/PX4-Autopilot/commit/5cf20c8dcfeba450bcc926f4a73b81c382a9ad43?w=1),increase fw idle for ATTCTL and POSCTL to 0.2,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #217
",[7043869237b5294233ca8dfaa613ceaaaf3d95bd](https://github.com/PX4/PX4-Autopilot/commit/7043869237b5294233ca8dfaa613ceaaaf3d95bd?w=1),"VDev:
- increase max number of devices to 200
- increase max number of file descriptors to 200
- add warning if number of file descriptor exceeds max value",General:Hard-coding,increase

"PX4-Autopilot
"," #218
",[640024357f3b3a261031b750cf7a7b5a82e53a78](https://github.com/PX4/PX4-Autopilot/commit/640024357f3b3a261031b750cf7a7b5a82e53a78?w=1),Land detector: increase ground speed threshold,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #219
",[cae604ac1f8177775048dacdc899d4372efaf0ec](https://github.com/PX4/PX4-Autopilot/commit/cae604ac1f8177775048dacdc899d4372efaf0ec?w=1),HMC5883: Increase the number of calibration cycles to ensure a stable result,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #220
",[5bec38b37dbdf87720b98021850141e817de4191](https://github.com/PX4/PX4-Autopilot/commit/5bec38b37dbdf87720b98021850141e817de4191?w=1),MC land detector: Slightly decrease allowed vertical motion during landed state. This is important so that fast descends do not result in a false positive landed state,New:General:Hard-coded-fine-tuning,fast

"PX4-Autopilot
"," #221
",[b1b555ceb6f8121cfa87e6dbed1274a232a45006](https://github.com/PX4/PX4-Autopilot/commit/b1b555ceb6f8121cfa87e6dbed1274a232a45006?w=1),MAVLink app: Increase max data rate,New:Fixed_Communication_Rate,increase

"PX4-Autopilot
"," #222
",[ec21a71b369ff609fa74ccb5b71a4d275e9e5068](https://github.com/PX4/PX4-Autopilot/commit/ec21a71b369ff609fa74ccb5b71a4d275e9e5068?w=1),Commander: increase mag cal timeout,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #223
",[06c45aadfbca55d88ff643a1ca526065a1d357e7](https://github.com/PX4/PX4-Autopilot/commit/06c45aadfbca55d88ff643a1ca526065a1d357e7?w=1),FW attitude control: Increase default integrator gains to compensate common airframe trim issues,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #224
",[0321f416a0f31e75234b32d86094b6898d77439c](https://github.com/PX4/PX4-Autopilot/commit/0321f416a0f31e75234b32d86094b6898d77439c?w=1),Increase allowance for vertical velocity in landed mode,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #225
",[e443a3f3be42ed9ebfcf0ca588d7b0a4d359f582](https://github.com/PX4/PX4-Autopilot/commit/e443a3f3be42ed9ebfcf0ca588d7b0a4d359f582?w=1),"Harmonize FW default gains, increase TECS height rate default gain considerably",New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #226
",[e09771be17d8965f8928b6d577e4222c01e67fa6](https://github.com/PX4/PX4-Autopilot/commit/e09771be17d8965f8928b6d577e4222c01e67fa6?w=1),NSH terminal: Increase hold-off time to ensure USB is up and running,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #227
",[a589d15c5212c3249599932080f656ce2b7a0044](https://github.com/PX4/PX4-Autopilot/commit/a589d15c5212c3249599932080f656ce2b7a0044?w=1),"Refactored debug() and log() in CDev\
These functions used vprintf which is not available on all platforms.
They also do not enable line and file debug output.\
Changed to macros that preserve the output format.  Uses new macro that
can be used to implement per object, runtime selectable logging
...","?
CI/CD:Too_many_changes",runtime

"PX4-Autopilot
"," #228
",[1ef7d1348794d0d55d1799b6a7ae29a2c0debfc5](https://github.com/PX4/PX4-Autopilot/commit/1ef7d1348794d0d55d1799b6a7ae29a2c0debfc5?w=1),Increase NSH back-off time,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #229
",[c5ec4de6eab8aa7639f263aa42c88f0d76061820](https://github.com/PX4/PX4-Autopilot/commit/c5ec4de6eab8aa7639f263aa42c88f0d76061820?w=1),Increase NSH back-off time,X,increase

"PX4-Autopilot
"," #230
",[eea2f61f02bb7ea092770a956f64443f1f190496](https://github.com/PX4/PX4-Autopilot/commit/eea2f61f02bb7ea092770a956f64443f1f190496?w=1),Retire attitude-only EKF due to performance and memory consumption considerations,X,performance

"PX4-Autopilot
"," #231
",[fc3acdb2c1b6c656c6a815f04e036b1159a1dfc5](https://github.com/PX4/PX4-Autopilot/commit/fc3acdb2c1b6c656c6a815f04e036b1159a1dfc5),"cmake: param refactoring

Use a struct to contain all the parameters so the ordering in
memory is not machine dependent.",X,memory

"PX4-Autopilot
"," #232
",[0490046af45e8e4f8ae94961000211236ba25501](https://github.com/PX4/PX4-Autopilot/commit/0490046af45e8e4f8ae94961000211236ba25501),MS5611: Increase the requirements about the PROM contents and CRC.,X,Increase

"PX4-Autopilot
"," #233
",[cdb2a5432b79a8c882d6c192c3fff615afbe683d](https://github.com/PX4/PX4-Autopilot/commit/cdb2a5432b79a8c882d6c192c3fff615afbe683d),"FMUv1: Do not support CAN build, since its out of reach memory wise anyway",X,memory

"PX4-Autopilot
"," #234
",[ae65269de9f0ea1e63ba5addce1e1788c62c93ee](https://github.com/PX4/PX4-Autopilot/commit/ae65269de9f0ea1e63ba5addce1e1788c62c93ee),UAVCAN: Increase stack since its hitting almost the limit,New:Hard-coded-fine-tuning,Increase

"PX4-Autopilot
"," #235
",[407191d4ab1a90bb413c3db1241cbba8adb95172](https://github.com/PX4/PX4-Autopilot/commit/407191d4ab1a90bb413c3db1241cbba8adb95172),UAVCAN driver transformed to use global memory pool,X,memory

"PX4-Autopilot
"," #236
",[a570d1de7d20f6d0817fd6210473a58db9c3aa13](https://github.com/PX4/PX4-Autopilot/commit/a570d1de7d20f6d0817fd6210473a58db9c3aa13),UAVCAN memory usage status and shrink,General:performance:using_massive_arrays_likes,memory

"PX4-Autopilot
"," #237
",[1ace017cb88319829c80e9571d71c903a4bc78a4](https://github.com/PX4/PX4-Autopilot/commit/1ace017cb88319829c80e9571d71c903a4bc78a4),Deallocating memory used by UAVCAN virtual iface on destruction,General:C:not_deallocating,memory

"PX4-Autopilot
"," #238
",[ca4e55fec301bb80af20a94fdfcdbf8d9551a83d](https://github.com/PX4/PX4-Autopilot/commit/ca4e55fec301bb80af20a94fdfcdbf8d9551a83d),UAVCAN allocator as a dedicated type; reporting a warning if memory leak is deetcted upon destruction,General:C:not_deallocating,memory

"PX4-Autopilot
"," #239
",[109bee855b3d734b63fe88bd3eec5fdc8d443b58](https://github.com/PX4/PX4-Autopilot/commit/109bee855b3d734b63fe88bd3eec5fdc8d443b58),Node on leaked memory in UAVCAN driver,General:C:not_deallocating,memory

"PX4-Autopilot
"," #240
",[6c4f09c0e4fe3a243bb68c9bcac03110b1c2a4d1](https://github.com/PX4/PX4-Autopilot/commit/6c4f09c0e4fe3a243bb68c9bcac03110b1c2a4d1),Fixed memory leak in UAVCAN baro driver,General:C:not_deallocating,memory

"PX4-Autopilot
"," #241
",[9d86dbb6a1c3625f912ffc9470c0184c274d0da2](https://github.com/PX4/PX4-Autopilot/commit/9d86dbb6a1c3625f912ffc9470c0184c274d0da2),Fixed memory leaks in the primary UAVCAN thread,General:C:not_deallocating,memory

"PX4-Autopilot
"," #242
",[1aa9304b638eacff7f491836d44db16612807ddd](https://github.com/PX4/PX4-Autopilot/commit/1aa9304b638eacff7f491836d44db16612807ddd),"Logging rate was limited to 1 Hz

I set the maximum to 100 Hz, since most SD cards are not fast enough for more. (but more is still possible with forcing)",New:Fixed_Communication_Rate,fast

"PX4-Autopilot
"," #243
",[8b70bd248742e2ca291c17c98150d34980957ddb](https://github.com/PX4/PX4-Autopilot/commit/8b70bd248742e2ca291c17c98150d34980957ddb),Commander: Increase stack for commandline calibration,X,increase

"PX4-Autopilot
"," #244
",[bd4497f8837c6a68d162ab09de633353e54dfd89](https://github.com/PX4/PX4-Autopilot/commit/bd4497f8837c6a68d162ab09de633353e54dfd89),Simulator: Add performance counters for delay,X,performance

"PX4-Autopilot
"," #245
",[17caae00aac16338af46c8481c5f3fd9257aa0b0](https://github.com/PX4/PX4-Autopilot/commit/17caae00aac16338af46c8481c5f3fd9257aa0b0),Attitude estimator Q: Add performance counters for delay,X,performance

"PX4-Autopilot
"," #246
",[d07c69d3298206b10836a4e57d5155858875f13b](https://github.com/PX4/PX4-Autopilot/commit/d07c69d3298206b10836a4e57d5155858875f13b),MAVLink: Output RC inputs faster,New:Fixed_Communication_Rate,faster

"PX4-Autopilot
"," #247
",[fa197ee490297b39c6ccff47233ffa515306785d](https://github.com/PX4/PX4-Autopilot/commit/fa197ee490297b39c6ccff47233ffa515306785d),FMU driver: Run slightly faster to accomodate S.BUS,New:Hard-coded-fine-tuning,faster

"PX4-Autopilot
"," #248
",[a4aa844151b07c993d814ab9024ffabe40a7a52f](https://github.com/PX4/PX4-Autopilot/commit/a4aa844151b07c993d814ab9024ffabe40a7a52f),FMU driver: Slightly increase run interval to save load,"New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #249
",[f99e14144e1abae33650817fbc84c702520a56bf](https://github.com/PX4/PX4-Autopilot/commit/f99e14144e1abae33650817fbc84c702520a56bf),Q estimator: Increase stack size as needed,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #250
",[3515e6ae918d1e29a656ead9e99ba79f9704957d](https://github.com/PX4/PX4-Autopilot/commit/3515e6ae918d1e29a656ead9e99ba79f9704957d),INAV: Increase stack size as needed,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #251
",[66e9abc7741c567766a3ffd3719f3709fd699b20](https://github.com/PX4/PX4-Autopilot/commit/66e9abc7741c567766a3ffd3719f3709fd699b20),SDLOG2: increase stack size as needed,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #252
",[3c26ca99a07eb6957d894295133dc9cb0f4999a5](https://github.com/PX4/PX4-Autopilot/commit/3c26ca99a07eb6957d894295133dc9cb0f4999a5),Q estimator: Increase phase margin,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #253
",[65002d279f4f672a19885bbad08db23e00f245f6](https://github.com/PX4/PX4-Autopilot/commit/65002d279f4f672a19885bbad08db23e00f245f6),Commander: Allow setting home position faster,New:Hard-coded-timing,faster

"PX4-Autopilot
"," #254
",[1fc774bbf881c49138500073c28197dedb036b08](https://github.com/PX4/PX4-Autopilot/commit/1fc774bbf881c49138500073c28197dedb036b08),Q estimator: Increase phase margin,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #255
",[bff0f225b19058efb4fde675a5d1cf3354280585](https://github.com/PX4/PX4-Autopilot/commit/bff0f225b19058efb4fde675a5d1cf3354280585),FMU driver: Update faster,"New:Hard-coded-fine-tuning
New:Hard-coded-timing",faster

"PX4-Autopilot
"," #256
",[05a73d2821246557e6ae44639210fbd93a73f4b8](https://github.com/PX4/PX4-Autopilot/commit/05a73d2821246557e6ae44639210fbd93a73f4b8),"added takeoff logic for position controller to get the uav off the ground fast and transition smoothly to poctl after takeoff, added landing logic to reduce thrust to zero once on the ground",X,fast

"PX4-Autopilot
"," #257
",[62763904f24db62ca8aafaac16495ebc48ac0cb3](https://github.com/PX4/PX4-Autopilot/commit/62763904f24db62ca8aafaac16495ebc48ac0cb3),Simulator: Add performance counter for incoming packet interval,X,performance

"PX4-Autopilot
"," #258
",[5bc2019fd583d61cd6cc329da771079f887ab58a](https://github.com/PX4/PX4-Autopilot/commit/5bc2019fd583d61cd6cc329da771079f887ab58a),"Fixes for qurt build

Added missing functions that were added for other targets but not for qurt.

Added workaround for missing sem_timedwait(). This may have a performance
impact until a sem_timedwait is supported.

std::to_string is not supported by the hexagon compiler

Signed-off-by: Mark Charlebois <charlebm@gmail.com>",X,performance

"PX4-Autopilot
"," #259
",[21b99b408cec117c994b7af017c41614aa92a1dd](https://github.com/PX4/PX4-Autopilot/commit/21b99b408cec117c994b7af017c41614aa92a1dd),Yaw fix: increase threshold,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #260
",[be1db2ced51d837dc062aa9d509955c0aa41bfab](https://github.com/PX4/PX4-Autopilot/commit/be1db2ced51d837dc062aa9d509955c0aa41bfab),"quick fix:
Remove throttle non-increase condition for landing since this has lead to
quads falling out of the sky.",X,increase

"PX4-Autopilot
"," #261
",[ab65a55fbf374a881318921e982e1df158853dc7](https://github.com/PX4/PX4-Autopilot/commit/ab65a55fbf374a881318921e982e1df158853dc7),Change arming transfer to only set the register if the local configuration changed. Move its write operation to the fast rate so that arming / disarming is instantaneous,"Known:Is-everything-ok
New:Fixed-communication-rate",fast

"PX4-Autopilot
"," #262
",[08ef2e8a1c08c6189de3f2912944c5ce495d50cc](https://github.com/PX4/PX4-Autopilot/commit/08ef2e8a1c08c6189de3f2912944c5ce495d50cc),Param command: Increase stack as needed,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #263
",[f460e955549d3fb4425d42f23f9e51cd98978132](https://github.com/PX4/PX4-Autopilot/commit/f460e955549d3fb4425d42f23f9e51cd98978132),Param: Increase robustness of default save command,General:Hard-coding,increase

"PX4-Autopilot
"," #264
",[99068aebac4d16f2b84eec739c8678bdabc8e661](https://github.com/PX4/PX4-Autopilot/commit/99068aebac4d16f2b84eec739c8678bdabc8e661),FMUv4: Run FRAM bus faster,New:Fixed-communication-rate,faster

"PX4-Autopilot
"," #265
",[b37082e3904d6a0adeab59e76c903f819abfa7ee](https://github.com/PX4/PX4-Autopilot/commit/b37082e3904d6a0adeab59e76c903f819abfa7ee),MS5611: Run SPI bus faster,New:Fixed-communication-rate,faster

"PX4-Autopilot
"," #266
",[ff690dda8072bb8068772cebfe4cd7979d491151](https://github.com/PX4/PX4-Autopilot/commit/ff690dda8072bb8068772cebfe4cd7979d491151),increase priority of sPort_telemetry to 200,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #267
",[17c3aa3bac9b6b817259b1e4b37f159e47df9cfb](https://github.com/PX4/PX4-Autopilot/commit/17c3aa3bac9b6b817259b1e4b37f159e47df9cfb),MC att control: Slightly increase max yaw rate,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #268
",[1454e2acbae79d7982e5b9de07f882a2a5f3a901](https://github.com/PX4/PX4-Autopilot/commit/1454e2acbae79d7982e5b9de07f882a2a5f3a901),Libuavcan update: Reduces STM32 CAN IRQ overhead with new error handling logic,Smith:General:Unnecessary_Processing,overhead

"PX4-Autopilot
"," #269
",[39ee36a8ea38805cb01450ff9fe5a6f5d8c5c136](https://github.com/PX4/PX4-Autopilot/commit/39ee36a8ea38805cb01450ff9fe5a6f5d8c5c136),Pre-empt HRT execution in SITL if simulator is slow,X,slow

"PX4-Autopilot
"," #270
",[65081ca6819d6b01d2612a70ec48e1f577d4b02f](https://github.com/PX4/PX4-Autopilot/commit/65081ca6819d6b01d2612a70ec48e1f577d4b02f),FMUv2: Increase USB buffer to speed up log transfers,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #271
",[45ea58d451983ae50889a1547dbdcf01d0e491de](https://github.com/PX4/PX4-Autopilot/commit/45ea58d451983ae50889a1547dbdcf01d0e491de),FMUv4: Increase USB and UART buffers to speed up log transfers,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #272
",[9583ff1b8bd13f5669bb9265721f595d4e196fac](https://github.com/PX4/PX4-Autopilot/commit/9583ff1b8bd13f5669bb9265721f595d4e196fac),Add memory debugging switch support,X,memory

"PX4-Autopilot
"," #273
",[de8c4c9901391c28ee4d86c5cf026db74b6042ac](https://github.com/PX4/PX4-Autopilot/commit/de8c4c9901391c28ee4d86c5cf026db74b6042ac),Pixracer: Increase streams and data rate via Wifi,New:Fixed-communication-rate,increase

"PX4-Autopilot
"," #274
",[12437f1fc6ab604b43287ed960806a5d455f66db](https://github.com/PX4/PX4-Autopilot/commit/12437f1fc6ab604b43287ed960806a5d455f66db),increase stack size for frsky telemetry daemon,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #275
",[9516e2559aaf29f1657e8690027cec0fec38fbd9](https://github.com/PX4/PX4-Autopilot/commit/9516e2559aaf29f1657e8690027cec0fec38fbd9),"Changes to improve performance

The work queue processing was causing too much overhead so a more
efficient check was implemented.

Signed-off-by: Mark Charlebois <charlebm@gmail.com>",General:performance:using_massive_arrays_likes,performance

"PX4-Autopilot
"," #276
",[f5211030dcba9806c6969b6fd105980ef350204a](https://github.com/PX4/PX4-Autopilot/commit/f5211030dcba9806c6969b6fd105980ef350204a),"Changes to improve performance

The work queue processing was causing too much overhead so a more
efficient check was implemented.

Signed-off-by: Mark Charlebois <charlebm@gmail.com>",Smith:Are_We_There_Yet,performance

"PX4-Autopilot
"," #277
",[a1a615b9079b029a451ee2cd326607635006f7e0](https://github.com/PX4/PX4-Autopilot/commit/a1a615b9079b029a451ee2cd326607635006f7e0),"Added param shared memory support

Signed-off-by: Mark Charlebois <charlebm@gmail.com>",X,memory

"PX4-Autopilot
"," #278
",[dbd89fe584d478af71cbf6a2cf8c5731b5976158](https://github.com/PX4/PX4-Autopilot/commit/dbd89fe584d478af71cbf6a2cf8c5731b5976158),"px4_qurt_tasks: fix hang because of absolute time

The timeout was triggered using absolute time instead of a delay in
usec. This lead to the system hanging. With the fix it continues after
the timeout, however, the rates still don't seem right.",X,hang

"PX4-Autopilot
"," #279
",[3cda3610d0d90fc6abd50d82633cecd139788116](https://github.com/PX4/PX4-Autopilot/commit/3cda3610d0d90fc6abd50d82633cecd139788116),"param: workaround for QURT

There is no such thing as set_param_no_autosave on QURT, therefore just
save it anyway. On the Snapdragon the overhead should not be a problem.",Known:Is-everything-ok,overhead

"PX4-Autopilot
"," #280
",[4adfea7fa9bc7ab7a0b251280f62ecd7d14f2a38](https://github.com/PX4/PX4-Autopilot/commit/4adfea7fa9bc7ab7a0b251280f62ecd7d14f2a38),Resolved shared memory parameter problems and removed additional debug code.,X,memory

"PX4-Autopilot
"," #281
",[75fad09263c27af36d5233396fc0d35f4cacdb52](https://github.com/PX4/PX4-Autopilot/commit/75fad09263c27af36d5233396fc0d35f4cacdb52),Fixed problem causing a failure to obtain the shared memory lock on the AppsProc.,X,memory

"PX4-Autopilot
"," #282
",[d2575c25563d5731f6db0a1607d096198d32cabe](https://github.com/PX4/PX4-Autopilot/commit/d2575c25563d5731f6db0a1607d096198d32cabe),ESC cal: Increase timeouts,"New:Hard-coded-timing
New:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #283
",[b98602df8b3317fbe2bb055e728777d3bdb5dee4](https://github.com/PX4/PX4-Autopilot/commit/b98602df8b3317fbe2bb055e728777d3bdb5dee4),"sdlog2:
increase stack size and fix indentation",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #284
",[3ab6fe7edd2cadc83749a9e4186a5248368dff93](https://github.com/PX4/PX4-Autopilot/commit/3ab6fe7edd2cadc83749a9e4186a5248368dff93),do not allocate unnecessary memory in logging app,New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #285
",[0960e1a8207a9abfa91b9df99d3632eff117a97a](https://github.com/PX4/PX4-Autopilot/commit/0960e1a8207a9abfa91b9df99d3632eff117a97a),"make structs static and decrease stack size, run astyle",New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #286
",[607053cfbc9b0ae79e64348b22ce98e40227c822](https://github.com/PX4/PX4-Autopilot/commit/607053cfbc9b0ae79e64348b22ce98e40227c822),decrease stack allocation to 1100,New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #287
",[613ec40d864e557fa76de658ee08b38401acc92c](https://github.com/PX4/PX4-Autopilot/commit/613ec40d864e557fa76de658ee08b38401acc92c),"LPE: comment out gps delay handling, too much memory required.",X,memory

"PX4-Autopilot
"," #288
",[213cdf1a9139488f156721a72feded53d839d964](https://github.com/PX4/PX4-Autopilot/commit/213cdf1a9139488f156721a72feded53d839d964),mavlink: send out parameters faster over UDP,"New:Fixed-communication-rate
New:Hard-coded-fine-tuning",faster

"PX4-Autopilot
"," #289
",[a446a337e99b57f6936896944f5ed2809e36267f](https://github.com/PX4/PX4-Autopilot/commit/a446a337e99b57f6936896944f5ed2809e36267f),"Revert ""mavlink: send out parameters faster over UDP""

This reverts commit 213cdf1a9139488f156721a72feded53d839d964.

Raising the stream rate of param values had the nice effect that
receiving the params became really quick. However, on the downside it
set all other streams pretty slow. This needs to be fixed differently.","New:Fixed-communication-rate
New:Hard-coded-fine-tuning",slow

"PX4-Autopilot
"," #290
",[ec930d2372da90aedaed157a9610f4a8c860fbab](https://github.com/PX4/PX4-Autopilot/commit/ec930d2372da90aedaed157a9610f4a8c860fbab),Increase stack size by 100 bytes. From @tridge,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #291
",[e69799882815b53654aa39eee6b34983161d44db](https://github.com/PX4/PX4-Autopilot/commit/e69799882815b53654aa39eee6b34983161d44db),fix sdlog2 self deadlock bug,General:Deadlock,deadlock

"PX4-Autopilot
"," #292
",[f3e147f57bf699b1ea349c76c095f1a40bf36709](https://github.com/PX4/PX4-Autopilot/commit/f3e147f57bf699b1ea349c76c095f1a40bf36709),make replay faster,"New:Hard-coded-timing
New:Hard-coded-fine-tuning",faster

"PX4-Autopilot
"," #293
",[47d3e093a4abb2bd4e34cc5c2c02813b19424f8b](https://github.com/PX4/PX4-Autopilot/commit/47d3e093a4abb2bd4e34cc5c2c02813b19424f8b),Increase Wifi data rate,"New:Fixed-communication-rate
New:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #294
",[832dde7531e7ed20fe177f9f9138aeb8445eb8bb](https://github.com/PX4/PX4-Autopilot/commit/832dde7531e7ed20fe177f9f9138aeb8445eb8bb),Update rcS to run Wifi faster,"New:Fixed-communication-rate
New:Hard-coded-fine-tuning",faster

"PX4-Autopilot
"," #295
",[21f403e12b1c800c3e4bd901c363a886736f6466](https://github.com/PX4/PX4-Autopilot/commit/21f403e12b1c800c3e4bd901c363a886736f6466),"gps: make sure the gps module compiles for POSIX & add it to the posix_sitl_default cmake

- Note that the simulator still uses gpssim by default
- now the gps module can be used in the SITL. this makes it possible to test
  the real gps HW under POSIX
  additional steps needed to use it:
  - in the rcS_jmavsim_iris, make sure to start the gps instead of gpssim:
    gps start -d /dev/ttyACM0 -s
  - disable the mavlink serial connection in simulator_mavlink.cpp,
    openUart(PIXHAWK_DEVICE, 115200);
- this also fixes a memory leak in the gps module",General:C:not_deallocating,memory

"PX4-Autopilot
"," #296
",[80e05dd3a329e7c8b4ba45f14aaa25befa53cf65](https://github.com/PX4/PX4-Autopilot/commit/80e05dd3a329e7c8b4ba45f14aaa25befa53cf65),"orb: fix memory leaks, forgotten unlock & wrong exit condition in advertisement

How can someone just add a FIXME for such a simple case?!",General:C:not_deallocating,memory

"PX4-Autopilot
"," #297
",[a8a57ca20cec3d66d6ba5fd65ce5a99b25f8b678](https://github.com/PX4/PX4-Autopilot/commit/a8a57ca20cec3d66d6ba5fd65ce5a99b25f8b678),make iris move a bit faster in gazebo and removed broken assertion from posctl test,New:Hard-coded-fine-tuning,faster

"PX4-Autopilot
"," #298
",[fff535857de0a883901b08c59fd10b5781f7da44](https://github.com/PX4/PX4-Autopilot/commit/fff535857de0a883901b08c59fd10b5781f7da44),"drivers/gps: fix segfault when parsing arguments

running gps command without parameters results in segfault
due to illegal access to unallocated memory

Signed-off-by: Nicolae Rosia <nicolae.rosia@gmail.com>",X,memory

"PX4-Autopilot
"," #299
",[b781006e208b56bd23502b2bb49bdfa240317052](https://github.com/PX4/PX4-Autopilot/commit/b781006e208b56bd23502b2bb49bdfa240317052),Increase sending of navstate and gpsfix to 2 Hz,"New:Fixed-communication-rate
New:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #300
",[29c5c25f4712a85cad9d9eecb880ac0708f20d61](https://github.com/PX4/PX4-Autopilot/commit/29c5c25f4712a85cad9d9eecb880ac0708f20d61),"fix bug in the logging app:
- either sensor combined or the replay topic where copied into
the union buffer but at times the memory was overwritten by other
topics which updated below
- this change makes sure that the two topics are copied into the union
buffer at the correct location in the code",X,memory

"PX4-Autopilot
"," #301
",[9f5e9594f5af5b6424911f20cae20907b48ec261](https://github.com/PX4/PX4-Autopilot/commit/9f5e9594f5af5b6424911f20cae20907b48ec261),"implement ekf instance and block parameter instance as class members
in order to avoid memory management",X,memory

"PX4-Autopilot
"," #302
",[99a682e7a72f43af20003b50f2593d2d26ef1ee2](https://github.com/PX4/PX4-Autopilot/commit/99a682e7a72f43af20003b50f2593d2d26ef1ee2),"fix px4_task_spawn_cmd: memory leak, if one of the pthread_* calls fails",General:C:not_deallocating,memory

"PX4-Autopilot
"," #303
",[27d821ac9ff2f14573f5e5d4e2a2932e21e4b442](https://github.com/PX4/PX4-Autopilot/commit/27d821ac9ff2f14573f5e5d4e2a2932e21e4b442),"fix position_estimator_inav_main: put terrain_estimator on the stack

This fixes a memory leak",General:C:not_deallocating,memory

"PX4-Autopilot
"," #304
",[32cd154d7c479f821400a54bd2cc249934319113](https://github.com/PX4/PX4-Autopilot/commit/32cd154d7c479f821400a54bd2cc249934319113),"Revert ""ESC cal: Increase timeouts""

This reverts commit d2575c25563d5731f6db0a1607d096198d32cabe.","New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #305
",[b9333d95f4a090ada153a485558162c43c0286de](https://github.com/PX4/PX4-Autopilot/commit/b9333d95f4a090ada153a485558162c43c0286de),Navigator: Run faster,Smith:General:Unnecessary_Processing,faster

"PX4-Autopilot
"," #306
",[ffb0d37c8a56c88e83e257b770053fe24946fc48](https://github.com/PX4/PX4-Autopilot/commit/ffb0d37c8a56c88e83e257b770053fe24946fc48),"Commander: Fix reposition handling,  run faster to allow catching of consecutive commands","New:Hard-coded-fine-tuning
New:Hard-coded-timing",faster

"PX4-Autopilot
"," #307
",[d3068b4337d05e2c4e7fa932ec794a5fbae271a4](https://github.com/PX4/PX4-Autopilot/commit/d3068b4337d05e2c4e7fa932ec794a5fbae271a4),px4_task_spawn_cmd: fix memory leak on posix,General:C:not_deallocating,memory

"PX4-Autopilot
"," #308
",[871c112699660a1d96f4caff42fd5e6197a20835](https://github.com/PX4/PX4-Autopilot/commit/871c112699660a1d96f4caff42fd5e6197a20835),"sdlog2: log normal data and replay on Snapdragon

In SITL and on Snapdragon, the logging performance is high enough, so we
can log both: the usual topics, as well as the ekf2 replay fields.

Note that the ekf2 replay still needs to be enabled via param.",X,performance

"PX4-Autopilot
"," #309
",[26596dbe157bf71e380b3c57f5371c5483902a2f](https://github.com/PX4/PX4-Autopilot/commit/26596dbe157bf71e380b3c57f5371c5483902a2f),fix infinite loop when not logging,X,infinite

"PX4-Autopilot
"," #310
",[4ce658ab99992c3988422f04a1c7c56f0ea84e0a](https://github.com/PX4/PX4-Autopilot/commit/4ce658ab99992c3988422f04a1c7c56f0ea84e0a),"logger: move _writer.lock() call after write_changed_parameters()

write_changed_parameters() also takes the lock and thus would deadlock
otherwise.",General:Deadlock,deadlock

"PX4-Autopilot
"," #311
",[cf667dedb8b6f4f314860523627bbc5c796387ef](https://github.com/PX4/PX4-Autopilot/commit/cf667dedb8b6f4f314860523627bbc5c796387ef),"tests: increase stack size from 8000 to 9000

clang failed with:
../src/systemcmds/tests/test_mathlib.cpp:56:5: fatal error: stack frame
size of 7400 bytes in function 'test_mathlib' [-Wframe-larger-than=]
int test_mathlib(int argc, char *argv[])",CI/CD:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #312
",[7a44ee7429161eb1cf5aeb2af0cf919efb55ccac](https://github.com/PX4/PX4-Autopilot/commit/7a44ee7429161eb1cf5aeb2af0cf919efb55ccac),"Added support for external shared libraries

The FC_ADDON drivers are shared libraries that have PX4 wrappers.
The wrappers are built as modules which are static libraries and
cannot have shared library dependencies.

The shared libraries are required to resolve the symbols at runtime
and need to be linked with the libmainapp shared library.

Signed-off-by: Mark Charlebois <charlebm@gmail.com>",X,runtime

"PX4-Autopilot
"," #313
",[5b1273e3348ef705abe1c56bd7c7dc035f338f60](https://github.com/PX4/PX4-Autopilot/commit/5b1273e3348ef705abe1c56bd7c7dc035f338f60),"orb: add optional queuing of messages

This adds two uORB API calls:
- orb_advertise_queue
- orb_advertise_multi_queue

Both add a queue_size parameter to define a maximum number of buffered
item. The existing orb calls use all a queue size of one and thus their
behavior is unchanged. If a writer publishes too fast, the oldest elements
from the queue are silently dropped.
The returned timestamp is always the one from the latest message in the
queue.

Queue size can be set via ioctl during advertisement phase. After that it
cannot be changed anymore.",X,fast

"PX4-Autopilot
"," #314
",[d35814ed992a0e7182a4abb71b4927391cf402e9](https://github.com/PX4/PX4-Autopilot/commit/d35814ed992a0e7182a4abb71b4927391cf402e9),"nuttx px4fmu-v4 config: increase CONFIG_NFILE_DESCRIPTORS to 52

necessary for mavlink receiver. It had the following output:
 mavlink_rcv_if0: node_open as advertiser failed.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #315
",[febe75bb12d8c4fc768b48847916bbf395af553b](https://github.com/PX4/PX4-Autopilot/commit/febe75bb12d8c4fc768b48847916bbf395af553b),"logger: don't use uint8_t buffer[msg_size]; (it's C99 not C++)

Also, it's not clear where the allocation was. It looks like it was on
the heap, but the compiler could decide to put it on the stack. This is
very bad for us because we use fixed size stacks with tights bounds. So if
a user specifies a large topic to log, it could have crashed.

Now the allocation is on the heap and the user can specify any size of
topic to log (as long as there is enough memory).",General:Hard-coding,memory

"PX4-Autopilot
"," #316
",[0fb0f17ccbe44ba480000cdaff99d5d3e42053ec](https://github.com/PX4/PX4-Autopilot/commit/0fb0f17ccbe44ba480000cdaff99d5d3e42053ec),"logger: reduce memory usage, by limiting the nr of added topics to 64 (was 128)",New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #317
",[605f731ac428efcef5c5d8b7261badeb78f626e0](https://github.com/PX4/PX4-Autopilot/commit/605f731ac428efcef5c5d8b7261badeb78f626e0),logger: reduce maximum logged string length to 128 (use less memory),New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #318
",[f68a6eb42cde25a9c41592f5ea4975cca7464930](https://github.com/PX4/PX4-Autopilot/commit/f68a6eb42cde25a9c41592f5ea4975cca7464930),"err/px4_log: switch everything to static function

Instead of having separate log functions for NuttX and POSIX, this now
switches everything to px4_log.h and PX4_INFO/WARN/ERR/DEBUG.

Also, the call mostly used is now a static inline function instead of a
macro which lead to a big increase in flash size for STM32.",X,increase

"PX4-Autopilot
"," #319
",[f4f0892b25447d3e7a20312ebee429b4f8d06fe1](https://github.com/PX4/PX4-Autopilot/commit/f4f0892b25447d3e7a20312ebee429b4f8d06fe1),"sdlog2: no new sessXXX folder on every arm (#4775)

Previously, if no time was set, sdlog2 created a folder like sess001,

sess002 for every logfile. The logfiles would then always be named

log001.px4log and their numbering would not actually increase.



This is now fixed and a new folder is only created per boot.",X,increase

"PX4-Autopilot
"," #320
",[4ef4be2d7012231a070a65d6783949a339d8e3f7](https://github.com/PX4/PX4-Autopilot/commit/4ef4be2d7012231a070a65d6783949a339d8e3f7),"MavlinkReceiver::handle_message_request_data_stream walks into deleted memory when you send the ""stop"" bit on a stream.  It also fails to restart the stream because it deletes the stream when you send the stop command, so restart needs to use stream_list to find the stream again.",X,memory

"PX4-Autopilot
"," #321
",[a73ac821ab4ce909f409c99b6b6ab5e80737eb07](https://github.com/PX4/PX4-Autopilot/commit/a73ac821ab4ce909f409c99b6b6ab5e80737eb07),Fixes shared memory locking bug and eliminates the need for an AppsProm driver to reserve a shared memory region.,CI/CD:Large_change,memory

"PX4-Autopilot
"," #322
",[e7f31393bcf1bc7a96cda34cc2f31d38160b7987](https://github.com/PX4/PX4-Autopilot/commit/e7f31393bcf1bc7a96cda34cc2f31d38160b7987),"orb: reduce size of SubscriberData struct (#4771)

- priority field uses only the lower 8 bits, so we can merge with the

  update_reported flag

- orb_set_interval is not used often, so make the necessary data an

  optional pointer and alloc only when needed.



Memory savings:

- pixracer (w. ekf2): 7.3kB

- pixhawk: 5.3kB",X,memory

"PX4-Autopilot
"," #323
",[a9a3050682b55c0ab1997caa8884dcb1a369bc11](https://github.com/PX4/PX4-Autopilot/commit/a9a3050682b55c0ab1997caa8884dcb1a369bc11),EKF2 HIL gps decrease s_variance_m_s 5.0 -> 1.0 (#4973),New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #324
",[5f18f9bbba75025eaff128e7f8778e2b896061dd](https://github.com/PX4/PX4-Autopilot/commit/5f18f9bbba75025eaff128e7f8778e2b896061dd),"sdlog2: select MIN < MAX bytes to write

Previously, the MAX and MIN were both 512 meaning that usually it would
start writing at > 512 bytes but only write 512 bytes which results in
a 512 bytes write shortly followed by a e.g. 30 bytes write.

Also, performance (measured in missed poll updates) seems slightly
better on Snapdragon with bigger chunks.",New:Hard-coded-fine-tuning,performance

"PX4-Autopilot
"," #325
",[fe91527604ef9cbe473076d50004c7991bedb96e](https://github.com/PX4/PX4-Autopilot/commit/fe91527604ef9cbe473076d50004c7991bedb96e),"sdlog2: poll for sensor and replay on Snappy

This brings better performance, so less missed updates on Snappy, as
well as a bit of a cleanup of the poll and orb_copy logic.",X,performance

"PX4-Autopilot
"," #326
",[544ea72d4c789eac77198b7d54b35db88ff54eeb](https://github.com/PX4/PX4-Autopilot/commit/544ea72d4c789eac77198b7d54b35db88ff54eeb),"Snapdragon: set CPUs scaling to performance mode

Sdlog2 misses least updates when the CPU scaling governor is set at
maximum performance. This is not optimal to save power but the best
effort until there is a RT patched kernel on Snapdragon.",X,performance

"PX4-Autopilot
"," #327
",[fa614a3cc1534c9c5f46de9d2f118ea9b4f4e8e4](https://github.com/PX4/PX4-Autopilot/commit/fa614a3cc1534c9c5f46de9d2f118ea9b4f4e8e4),"RPi: just use RPI instead of RPI2.

The reason for this change is that RPi2 and RPi3 are compatible, and
hopefully all differences coming up can be resolved without ifdefs but
at runtime.",X,runtime

"PX4-Autopilot
"," #328
",[302719527a4213893f094e66be2f7c650eaa3e6e](https://github.com/PX4/PX4-Autopilot/commit/302719527a4213893f094e66be2f7c650eaa3e6e),"nuttx defconfig: increase nr of file descriptors, due to mavlink shell",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #329
",[e287b05d678589650f7e6423dae351f72f006290](https://github.com/PX4/PX4-Autopilot/commit/e287b05d678589650f7e6423dae351f72f006290),NuttX: Add file change which allows really fast log download,X,fast

"PX4-Autopilot
"," #330
",[d748f6ca710139fde08107da96c7a24df3c2d165](https://github.com/PX4/PX4-Autopilot/commit/d748f6ca710139fde08107da96c7a24df3c2d165),"attitude_estimator_q: filter accel and gyro data

Since accel and gyro are not filtered in the drivers anymore, we need to
filter them in this estimator in order to achieve a similar performance.",New:Bad-noise-handling,performance

"PX4-Autopilot
"," #331
",[ea9c8b968a45734e418dbade866dfe6221718b06](https://github.com/PX4/PX4-Autopilot/commit/ea9c8b968a45734e418dbade866dfe6221718b06),"attitude_estimator_q: don't spam console

We should not spam the console just because the input data is
degenerate, it would only make things worse because everything would
slow down due to the printfs.",Smith:General:Unnecessary_Processing,slow

"PX4-Autopilot
"," #332
",[db174cf8b1b108b864724a8448dba80f2440f357](https://github.com/PX4/PX4-Autopilot/commit/db174cf8b1b108b864724a8448dba80f2440f357),"Disable EKF2 3D fusion temporarily in SITL, fix missing fast-init params for some configs",General:Hard-coding,fast

"PX4-Autopilot
"," #333
",[17561daefb4295ec8bf90355ed806c382fd9bede](https://github.com/PX4/PX4-Autopilot/commit/17561daefb4295ec8bf90355ed806c382fd9bede),TAP power: Shut down faster,"New:Hard-coded-fine-tuning
New:Hard-coded-timing",faster

"PX4-Autopilot
"," #334
",[eceb7e21b2cad7bc892c7b594103bcddf1c96350](https://github.com/PX4/PX4-Autopilot/commit/eceb7e21b2cad7bc892c7b594103bcddf1c96350),Include memory in CPU load message,X,memory

"PX4-Autopilot
"," #335
",[8934aaa9124f9384be918f0d6b9fc66e7b688666](https://github.com/PX4/PX4-Autopilot/commit/8934aaa9124f9384be918f0d6b9fc66e7b688666),Load mon: populate memory usage i field for NuttX,X,memory

"PX4-Autopilot
"," #336
",[1a9688c42f096d4e029390b20c94beaea4c6e6a5](https://github.com/PX4/PX4-Autopilot/commit/1a9688c42f096d4e029390b20c94beaea4c6e6a5),Commander: signal high memory usage,X,memory

"PX4-Autopilot
"," #337
",[5786b737720581c1a20616ed252b26f038b9b762](https://github.com/PX4/PX4-Autopilot/commit/5786b737720581c1a20616ed252b26f038b9b762),Tweak startup order for memory,"New:Hard-coded-timing
General:Hard-coding",memory

"PX4-Autopilot
"," #338
",[7cc0b32e74e5b45f50cd8b276769889015773bdb](https://github.com/PX4/PX4-Autopilot/commit/7cc0b32e74e5b45f50cd8b276769889015773bdb),Make altitude more efficient and estimator status safe in terms of memory overflow,X,memory

"PX4-Autopilot
"," #339
",[a7ad722b980165e16020798a7e1a0faea9cfbae6](https://github.com/PX4/PX4-Autopilot/commit/a7ad722b980165e16020798a7e1a0faea9cfbae6),Use less memory for ESC driver,New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #340
",[d810726c6ea53a85dfae9740f6d56b13d7bf5937](https://github.com/PX4/PX4-Autopilot/commit/d810726c6ea53a85dfae9740f6d56b13d7bf5937),EKF2: Only use the memory it needs,New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #341
",[39ce001c41249f5b8725686fff707df22e75f0ce](https://github.com/PX4/PX4-Autopilot/commit/39ce001c41249f5b8725686fff707df22e75f0ce),MAVLink: use only the memory it needs,New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #342
",[6b4c24fb125f6842b169cb7f108451e0a3e5a166](https://github.com/PX4/PX4-Autopilot/commit/6b4c24fb125f6842b169cb7f108451e0a3e5a166),"px4_log: remove __px4_log_level_current

- there is no way to change it at runtime
- it was implemented wrong (<= comparison disabled the PANIC log level)",X,runtime

"PX4-Autopilot
"," #343
",[5a734de3196bc773c92b26b9f660a838cab8f1a2](https://github.com/PX4/PX4-Autopilot/commit/5a734de3196bc773c92b26b9f660a838cab8f1a2),Commander: Increase stack space,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #344
",[cc69dd566546a16ca4c3fe48bfcbf7541d721d42](https://github.com/PX4/PX4-Autopilot/commit/cc69dd566546a16ca4c3fe48bfcbf7541d721d42),"printf format fixes. (#5444)

After I got a compiler warning for a printf format in this file

(which I cannot reproduce anymore; for some reason g++ is usually

quite happy with all the errors in this file), I fixed all 'printf'

formats to match the type of their arguments as follows:



uint8_t         : %hhu

uint16_t        : %hu (or %hx)

uint32_t        : %u (or %x)

int16_t         : %hd

int and int32_t : %d

long int        : %ld



Since this file is C++, what we REALLY should be using is

ostream operator<<'s of course (type safe by design and faster

(compile time type matching, no need for format decoding)).",X,faster

"PX4-Autopilot
"," #345
",[4a5eae23a29d452596ee0c8d0961f661ae635214](https://github.com/PX4/PX4-Autopilot/commit/4a5eae23a29d452596ee0c8d0961f661ae635214),"Increase stack space on posix 64bit architectures. (#5447)

When running a simulation with, for example,

make posix jmavsim

px4 crashed almost 100% reproducable near start up.



This turned out to be a stack overflow. On gitter

it was suggested that the main reason for this could

be stack sizes, as currently used, assume a 32bit pointer

size and that doubling the stack size for everything

but NuttX would be the Right Thing.



This is the solution that I came up with (it makes

my core dumps disappear).",General:Hard-coding,increase

"PX4-Autopilot
"," #346
",[3f07b03911fa197e2dc996a5270b8b823c60a528](https://github.com/PX4/PX4-Autopilot/commit/3f07b03911fa197e2dc996a5270b8b823c60a528),SITL: Tune standard VTOL to have better position control performance & update gazebo,New:Hard-coded-fine-tuning,performance

"PX4-Autopilot
"," #347
",[cbbf5e2e7c550f3c18c1e794d549bd5a9b0410cc](https://github.com/PX4/PX4-Autopilot/commit/cbbf5e2e7c550f3c18c1e794d549bd5a9b0410cc),"filtering files for code check seperately to enable fast use of git pre-commit hook to check code style
ask user to install pre-commit hook when code style is checked",X,fast

"PX4-Autopilot
"," #348
",[937f3477d3c384e62a499150338dcfba0e46556a](https://github.com/PX4/PX4-Autopilot/commit/937f3477d3c384e62a499150338dcfba0e46556a),Syslink memory/deck interface,X,memory

"PX4-Autopilot
"," #349
",[69f6708f37107575f66fe43a2e7261348395ed5e](https://github.com/PX4/PX4-Autopilot/commit/69f6708f37107575f66fe43a2e7261348395ed5e),Increase sensors stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #350
",[f25947b964f31eb55e8f836077bad59973486eef](https://github.com/PX4/PX4-Autopilot/commit/f25947b964f31eb55e8f836077bad59973486eef),"hrt_work_queue posix: only send a wake-up signal if not called from own thread

The simulated timer interrupt always adds a new scheduled work task, which
is called from the work queue thread. Sending the signal creates measurable
overhead (~5% of the px4 CPU runtime) and is unnecessary, since the thread
is not sleeping anyway.",Smith:General:Unnecessary_Processing,runtime

"PX4-Autopilot
"," #351
",[b864983c5e558eab04aaa519025e0e8c1ddacb1c](https://github.com/PX4/PX4-Autopilot/commit/b864983c5e558eab04aaa519025e0e8c1ddacb1c),navio_sysfs_rc_in: avoid dynamic memory allocation for path,General:Hard-coding,memory

"PX4-Autopilot
"," #352
",[bad107a374d297b1c76f23cd6b99c4a8ac2fcb19](https://github.com/PX4/PX4-Autopilot/commit/bad107a374d297b1c76f23cd6b99c4a8ac2fcb19),"navio_sysfs_pwm_out: avoid dynamic memory allocation & fix a memory leak

memory leak was in send_outputs_pwm()","General:Hard-coding
General:C:not_deallocating",memory

"PX4-Autopilot
"," #353
",[605cffc230c944a215ba70fc0252cff44135ab29](https://github.com/PX4/PX4-Autopilot/commit/605cffc230c944a215ba70fc0252cff44135ab29),Fix sensor rail reset on Pixracer. Increase the reset duration to 50 ms to ensure the sensor power has bled off.,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #354
",[ed6295747441fa63ce3e72d590ed408d295fe5c7](https://github.com/PX4/PX4-Autopilot/commit/ed6295747441fa63ce3e72d590ed408d295fe5c7),Increase RC buffer size,New:Fixed-communication-rate,increase

"PX4-Autopilot
"," #355
",[0f763768b137922b4664fdcb37f6716407c118af](https://github.com/PX4/PX4-Autopilot/commit/0f763768b137922b4664fdcb37f6716407c118af),"commander: don't auto-disarm as fast if not flown

It was found inconvenient that auto-disarm triggers too quickly right
after arming when the vehicle has not actually taken off yet.

Therefore, the auto-disarm takes now by a factor of 5 longer if the
vehicle has not taken off yet.",New:Hard-coded-timing,fast

"PX4-Autopilot
"," #356
",[e73218c112e1bb1be84f9ca47a4001a584fef1d8](https://github.com/PX4/PX4-Autopilot/commit/e73218c112e1bb1be84f9ca47a4001a584fef1d8),Increase min agl for flow from 5 to 30 cm to prevent drift on ground.,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #357
",[44b5b52bcbf01c548a30c8dddd5c477c9ce86cb7](https://github.com/PX4/PX4-Autopilot/commit/44b5b52bcbf01c548a30c8dddd5c477c9ce86cb7),Add suport for Memory Constrained systems,New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #358
",[b1e94b98b3154a5a37f92b8cdd585b9209fc7919](https://github.com/PX4/PX4-Autopilot/commit/b1e94b98b3154a5a37f92b8cdd585b9209fc7919),Define tap as a Memory Constrained system,X,memory

"PX4-Autopilot
"," #359
",[ffaed18e679e7eb780518d4c2ec42d1f1747d451](https://github.com/PX4/PX4-Autopilot/commit/ffaed18e679e7eb780518d4c2ec42d1f1747d451),"Reduce the binary size Bebop

The firmware binary is to large to fit into the onboard memory of the Parrot
Bebop. It could be uploaded to the emmc, but for ease of use it would be nice
to have it in /usr/bin. To strip the binary seems to be the best option right now.",X,memory

"PX4-Autopilot
"," #360
",[8e0d548f51d433a472dfc4ba1f655df3e766c302](https://github.com/PX4/PX4-Autopilot/commit/8e0d548f51d433a472dfc4ba1f655df3e766c302),"logger: increase default queue size for mavlink logging to 14

tested on Pixracer: 14 still produces some dropouts once in a while, but I
think it's a fair tradefoff between RAM usage & dropouts. The queue needs
about 3.5KB of RAM.

When topic sizes/logging rates change, this will have to be reevaluated.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #361
",[326800e5a8b3e2057590946f29c7a809d4feef59](https://github.com/PX4/PX4-Autopilot/commit/326800e5a8b3e2057590946f29c7a809d4feef59),"logger: increase stack size

evaluated with: logger start -e -t -m all
and then make sure to get an error printf in the mavlink writer backend,
eg. for an ack timeout.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #362
",[bdfb2bbb8d3655c84dc95702a4948a25e63bc750](https://github.com/PX4/PX4-Autopilot/commit/bdfb2bbb8d3655c84dc95702a4948a25e63bc750),"Fixed hardfault on fast proc

_baro_topic can be null in init sequence
   init call collect before the topic is inited.

I think this pattern is repeated in other drivers. I would suggest
allowing null in orb_publish to just return.",X,fast

"PX4-Autopilot
"," #363
",[3a332bb11a3f0e367a261a0f9a19a33520f93cce](https://github.com/PX4/PX4-Autopilot/commit/3a332bb11a3f0e367a261a0f9a19a33520f93cce),Printing all online nodes within UAVCAN status output. This feature increased memory footprint by about 150 bytes.,X,memory

"PX4-Autopilot
"," #364
",[5899ce715dcfd946fed62e654a472ca72b40d64c](https://github.com/PX4/PX4-Autopilot/commit/5899ce715dcfd946fed62e654a472ca72b40d64c),Navigator: Leverage overlapping fields in logic to save RAM by makeing them overlap in memory as well,X,memory

"PX4-Autopilot
"," #365
",[d0dace7c23b862f6a28e966b5d0dc522bbd777b0](https://github.com/PX4/PX4-Autopilot/commit/d0dace7c23b862f6a28e966b5d0dc522bbd777b0),"uavcan: use math::min instead of std::min

Avoid including <memory> which can cause problems on NuttX",X,memory

"PX4-Autopilot
"," #366
",[25be7aa7cf30b633afd1abeb30f15547719f1471](https://github.com/PX4/PX4-Autopilot/commit/25be7aa7cf30b633afd1abeb30f15547719f1471),incorporate Bill Premerlani's fast rotation handling from MatrixPilot,X,fast

"PX4-Autopilot
"," #367
",[ab43baa02d8e6f0f0b2cc6ae65647ecc2c6bfb1a](https://github.com/PX4/PX4-Autopilot/commit/ab43baa02d8e6f0f0b2cc6ae65647ecc2c6bfb1a),"Clean up Crazyflie
   1) Remove uneeded spi and reset code
   2) Use the Board commin for providing the BOARD_NAME
   3) Add PX4_PWM_ALTERNATE_RANGES in suport of a board agnostic
      way to override the PWM_.*_{MIN|MAX} values
   4) Remove #ifdefs from the IO timers*. Drive the config deltas
      from the crazyflie_timer_config.c and one board agnostic
      ifdef PX4_IO_TIMER_ALTERNATE_RATE that is non board specific

      *I would like to eliminate PX4_IO_TIMER_ALTERNATE_RATE
      as well, but I need HW to validate that the startup
      script can just set the rate on the PWM to 3921 fast
      enough to not effect the motors.",X,fast

"PX4-Autopilot
"," #368
",[2d451991af7b3a0b1f3b2e683bfd53d1c94e1ceb](https://github.com/PX4/PX4-Autopilot/commit/2d451991af7b3a0b1f3b2e683bfd53d1c94e1ceb),"PX4 System change to Remove #ifdefs from the IO timers

   Update the comment, to explain how to achive a different perescale
   value.

   Added PX4_IO_TIMER_ALTERNATE_RATE one board agnostic ifdef
   PX4_IO_TIMER_ALTERNATE_RATE that is non board specific.

   N.B.  I would like to eliminate PX4_IO_TIMER_ALTERNATE_RATE
   as well, but I need crazyflie HW to validate that the startup
   script can just set the rate on the PWM to 3921 fast enough to
   not effect the motors.",X,fast

"PX4-Autopilot
"," #369
",[ef7ed97cbd1b91ed88c2792984d72f0fa08035fc](https://github.com/PX4/PX4-Autopilot/commit/ef7ed97cbd1b91ed88c2792984d72f0fa08035fc),"ekf2: Don't send un-usable mag and baro data to the EKF

Fixes:

1) Invalid data with a zero time stamp could be the EKF ends up in the data buffers and result in loss of 'good' data from the buffers

2) Magnetometer data was arriving at a rate faster than the data buffers could handle resulting in loss of data.",New:Fixed-communication-rate,faster

"PX4-Autopilot
"," #370
",[14fd1b869380f6bf0420e8e3db7cf1aad8f7107a](https://github.com/PX4/PX4-Autopilot/commit/14fd1b869380f6bf0420e8e3db7cf1aad8f7107a),"ulog_stream_ack.msg: lower timeout & increase max retries

We expect a short round-trip time, so lowering the retry timeout will
increase throughput on links with high drop rate.","New:Fixed-communication-rate
New:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #371
",[0eadf26d341e6d62bab4790c1cc24e09d869133a](https://github.com/PX4/PX4-Autopilot/commit/0eadf26d341e6d62bab4790c1cc24e09d869133a),Log download: fix memory leak in generating the list,General:C:not_deallocating,memory

"PX4-Autopilot
"," #372
",[92a5db92a2ece6a1317fa4b1ca347d1b1e08e967](https://github.com/PX4/PX4-Autopilot/commit/92a5db92a2ece6a1317fa4b1ca347d1b1e08e967),"vtol_att_control: initialise pointers and free memory

Signed-off-by: Roman <bapstroman@gmail.com>",General:C:not_deallocating,memory

"PX4-Autopilot
"," #373
",[b020be13f67838047d1c2532cf66a99ceb28cddf](https://github.com/PX4/PX4-Autopilot/commit/b020be13f67838047d1c2532cf66a99ceb28cddf),"flashparams: fix memory leak when saving parameters

A large buffer on the heap was not deallocated when parameters were saved,
but there were no changes to the parameters. In that case
parameter_flashfs_write() was not called, which was previously responsible
for freeing the buffer.

This patch moves the responsibility of freeing the buffer to the calling
side, which already explicitly allocates the buffer.",General:C:not_deallocating,memory

"PX4-Autopilot
"," #374
",[e3537ca6c25ba50b8c0665138a1d833861b1b5f7](https://github.com/PX4/PX4-Autopilot/commit/e3537ca6c25ba50b8c0665138a1d833861b1b5f7),"px4fmu rcS: increase mavlink rate to 100000 for SYS_COMPANION 1500000

Needed for log streaming","New:Hard-coded-fine-tuning
New:Fixed-communication-rate",increase

"PX4-Autopilot
"," #375
",[b0ee5256d5ea0f40fe4e3dded9be27bbc3ffa871](https://github.com/PX4/PX4-Autopilot/commit/b0ee5256d5ea0f40fe4e3dded9be27bbc3ffa871),"Disable LPE in px4fmu-v2_default

With GCC 4.9 the binary is to large for the flash memory.
This is why we disabled LPE on that platform.",X,memory

"PX4-Autopilot
"," #376
",[dda0de09dd2be851bc2b70c0b897a801d55b8863](https://github.com/PX4/PX4-Autopilot/commit/dda0de09dd2be851bc2b70c0b897a801d55b8863),Load monitor: optimize performance of stack checking,Smith:General:Unnecessary_Processing,performance

"PX4-Autopilot
"," #377
",[a0cf938ced797e4ce12afe68666316acb3a4add7](https://github.com/PX4/PX4-Autopilot/commit/a0cf938ced797e4ce12afe68666316acb3a4add7),Load monitor: lock scheduler for stack check and added performance counter for stack checking,Smith:General:Unnecessary_processing,performance

"PX4-Autopilot
"," #378
",[6a6e9d02a312bad94cd164ff7928336472576fec](https://github.com/PX4/PX4-Autopilot/commit/6a6e9d02a312bad94cd164ff7928336472576fec),"navigator: increase stack

The stack size was generally ok but seemed to get exhausted in the case
of a waypoint which is too far away and therefore exercises some more
code in the mission feasability checker.

Generally, we should have more margin in the navigator stack size
because there are a bunch of different code paths that can happen.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #379
",[a096b974558347c31692a605e14344ad624332b8](https://github.com/PX4/PX4-Autopilot/commit/a096b974558347c31692a605e14344ad624332b8),"Revert ""navigator: increase stack""

This reverts commit 6a6e9d02a312bad94cd164ff7928336472576fec.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #380
",[3ac056924ce508288fc34050ee44fc27a6ed7ae8](https://github.com/PX4/PX4-Autopilot/commit/3ac056924ce508288fc34050ee44fc27a6ed7ae8),"navigator: increase stack
The stack size was generally ok but seemed to get exhausted in the case
of a waypoint which is too far away and therefore exercises some more
code in the mission feasability checker.

Generally, we should have more margin in the navigator stack size
because there are a bunch of different code paths that can happen.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #381
",[daa88f69dbcdd8629044b4b318929cd4b408ca18](https://github.com/PX4/PX4-Autopilot/commit/daa88f69dbcdd8629044b4b318929cd4b408ca18),"bebop2 config: updated some positon control params for decent performance

- this is not the final tune!!!

Signed-off-by: Roman <bapstroman@gmail.com>",New:Hard-coded-fine-tuning,performance

"PX4-Autopilot
"," #382
",[d0d9ee373b9eee712a631a1f1e5bb923bdc30e44](https://github.com/PX4/PX4-Autopilot/commit/d0d9ee373b9eee712a631a1f1e5bb923bdc30e44),"bebop config: increase logger buffer from 20kB to 200kB

Signed-off-by: Roman <bapstroman@gmail.com>",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #383
",[df613361b93f9e17465383fde3b0aba4df47cf0d](https://github.com/PX4/PX4-Autopilot/commit/df613361b93f9e17465383fde3b0aba4df47cf0d),LPE: Increase stack to allow enough safe margin,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #384
",[cc7db94edc8bde68251e9fb2e1a8f9d865b23e5a](https://github.com/PX4/PX4-Autopilot/commit/cc7db94edc8bde68251e9fb2e1a8f9d865b23e5a),Sensors app mag voter: Increase stale value detection threshold to accomodate low-noise mag setups,"General:Hard-coding
New:Bad_Noise_Handling",increase

"PX4-Autopilot
"," #385
",[5759fd5726fc40cc4bb49d06f266d428fdacd6f7](https://github.com/PX4/PX4-Autopilot/commit/5759fd5726fc40cc4bb49d06f266d428fdacd6f7),GPS app: Increase stack to ensure 300 bytes headroom,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #386
",[292599d3c9098b56e4a46433325d870af4b9ed45](https://github.com/PX4/PX4-Autopilot/commit/292599d3c9098b56e4a46433325d870af4b9ed45),"Revert ""px4fmu rcS: increase mavlink rate to 100000 for SYS_COMPANION 1500000""

This reverts commit e3537ca6c25ba50b8c0665138a1d833861b1b5f7.

It needs changes on the Linux side, so reverting for now.","New:Fixed-communication-rate
New:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #387
",[c38e378f59a2f0589f17ab2d83c02bf34ef55c7c](https://github.com/PX4/PX4-Autopilot/commit/c38e378f59a2f0589f17ab2d83c02bf34ef55c7c),"bebop config: updated some gains for decent performance

Signed-off-by: Roman <bapstroman@gmail.com>",New:Hard-coded-fine-tuning,performance

"PX4-Autopilot
"," #388
",[e15b67ff7035666049831e83c39b445f086e3d16](https://github.com/PX4/PX4-Autopilot/commit/e15b67ff7035666049831e83c39b445f086e3d16),"HOTFIX:For Data loss on Nuttx serial w/ DMA &  GPIO Flow Control

   This hot fix essentialy revert commit 265af481209d60033f7cd4c4216048b1ce3eb435
   in NuttX/nuttx. The commit STM32 serial: Make input hardware flow-control work with RX DMA.
   From Jussi Kivilinna has broken the DMA on an STM32F4 in a yet TBD way.
   The symptoms are lost data on RX, the DMA count decrements but
   the data ia not written to memory. This looks to be introduced but the
   non circular DMA settings.",X,memory

"PX4-Autopilot
"," #389
",[737e18dccb8d065c536e4384ee967ad90c422330](https://github.com/PX4/PX4-Autopilot/commit/737e18dccb8d065c536e4384ee967ad90c422330),"MAVLink app: Fix VTOL reporting and prevent mission reached spam

The VTOL status reporting and the mission status reporting were both suboptimal. VTOL was too slow, mission reporting too fast","New:Hard-coded-fine-tuning
New:Fixed-communication-rate",slow

"PX4-Autopilot
"," #390
",[1141079a3b50f18d30e80716fa8e1be26184fb9b](https://github.com/PX4/PX4-Autopilot/commit/1141079a3b50f18d30e80716fa8e1be26184fb9b),"Fix Simulator: Set correct rotor count for standard VTOL

The rotor count was incorrect which meant that control surfaces like elevons were scaled incorrectly. This was the main reason for really bad SITL performance",New:Hard-coded-timing,performance

"PX4-Autopilot
"," #391
",[d5082251d95fc1aa3499135d836bab255fb6d9e9](https://github.com/PX4/PX4-Autopilot/commit/d5082251d95fc1aa3499135d836bab255fb6d9e9),controllib decrease blockNameLengthMax to 40,New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #392
",[eac6dfed3cbc4228501a681697aa2ecf74217ebd](https://github.com/PX4/PX4-Autopilot/commit/eac6dfed3cbc4228501a681697aa2ecf74217ebd),"mc_att_control: Sync attitude loops to gyro data

Sync the attitude controller to the raw gyro data to remove the latency in the rate loops caused by the sensor and estimator modules.
Attitude data latency will increase as it will be from the previous EKF update, however attitude loops are less latency sensitive.
Thermal compensation and bias data will be from the previous frame.",New:Hard-coded-timing,increase

"PX4-Autopilot
"," #393
",[f6f145cbe8adddc26d259f0a7373066e7a4cd817](https://github.com/PX4/PX4-Autopilot/commit/f6f145cbe8adddc26d259f0a7373066e7a4cd817),sensors & mc_att_control: increase stack sizes due to recent changes,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #394
",[1beb2911e242d02097cf55cadb95a259112aaf7f](https://github.com/PX4/PX4-Autopilot/commit/1beb2911e242d02097cf55cadb95a259112aaf7f),"init shmem early to avoid random crash in fastrpc (#6407)

* init shmem early to avoid possible crash



* fix_code_style



* Keep the initialziation to NULL, remove the duplicate memory allocation",New:Hard-coded-timing,memory

"PX4-Autopilot
"," #395
",[72ea5c53dbcbfd6c1492c15c7b57d633cac0e4bc](https://github.com/PX4/PX4-Autopilot/commit/72ea5c53dbcbfd6c1492c15c7b57d633cac0e4bc),qurt px4_layer initialize shared memory (#6453),X,memory

"PX4-Autopilot
"," #396
",[7e5f09f40871b8b2bfc02a2849a201fa2e690d8b](https://github.com/PX4/PX4-Autopilot/commit/7e5f09f40871b8b2bfc02a2849a201fa2e690d8b),clang-tidy performance-unnecessary-value-param,X,performance

"PX4-Autopilot
"," #397
",[6f05fec335e810884097912afc28a79f248e2a47](https://github.com/PX4/PX4-Autopilot/commit/6f05fec335e810884097912afc28a79f248e2a47),clang-tidy performance-unnecessary-copy-initialization,X,performance

"PX4-Autopilot
"," #398
",[c559f195eca9a0fd565825172bfd6e54586befea](https://github.com/PX4/PX4-Autopilot/commit/c559f195eca9a0fd565825172bfd6e54586befea),"land_detector: Hotfix to prevent ground contact detection when descending velocity is very slow with manual stick all the way down
Now the stick down check is only done in manual control and the thrust low is again mandatory to detect ground in any case.",X,slow

"PX4-Autopilot
"," #399
",[48e7b941620efdac1f73fa7bcdcdd3e136a47cba](https://github.com/PX4/PX4-Autopilot/commit/48e7b941620efdac1f73fa7bcdcdd3e136a47cba),mavlink : track time offset faster,New:Hard-coded-fine-tuning,faster

"PX4-Autopilot
"," #400
",[df8f0da70c85039b0e0986e023c9e7753472645d](https://github.com/PX4/PX4-Autopilot/commit/df8f0da70c85039b0e0986e023c9e7753472645d),"param & param_shmem: enable locking

We need to protect access to the param_values array. This is dynamically
allocated and resized (utarray_reserve() calls realloc). If some thread
was iterating the array while another was resizing the array, the first one
would iterate on a freed array, thus accessing invalid memory.

On NuttX this could lead to hardfaults in rare conditions.

Unfortunately we need to initialize the semaphore on startup, by calling
sem_init(). This adds a param_init() method called by every board/config
that uses the params (at least I think I've found all of them)",X,memory

"PX4-Autopilot
"," #401
",[7659402fdb974b8a5b9acc2b9f8a3fcc8d69b370](https://github.com/PX4/PX4-Autopilot/commit/7659402fdb974b8a5b9acc2b9f8a3fcc8d69b370),"WIP: valgrind runtime analysis and fixes (#6521)

* Fix several valgrind identified mem leaks



* Added callgrind target.



* px4_posix_tasks use nullptr",General:C:not_deallocating,runtime

"PX4-Autopilot
"," #402
",[51c8e905085cab9fe73f204b0fcdd0c43130c7a2](https://github.com/PX4/PX4-Autopilot/commit/51c8e905085cab9fe73f204b0fcdd0c43130c7a2),FW att control: Increase stack size to ensure limits,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #403
",[2f3b1edbd4ff1ef678028da8c04f20d858db363c](https://github.com/PX4/PX4-Autopilot/commit/2f3b1edbd4ff1ef678028da8c04f20d858db363c),Convergence: increase yaw output in mixer,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #404
",[4ddc7e22fb11bbf041b07f13adce89dcad2a5617](https://github.com/PX4/PX4-Autopilot/commit/4ddc7e22fb11bbf041b07f13adce89dcad2a5617),MC pos ctrl: Force slow landing speed below min loiter altitude,X,slow

"PX4-Autopilot
"," #405
",[b1c11b14a86a1200aeb1f058b0eb9eaa7bc87bfb](https://github.com/PX4/PX4-Autopilot/commit/b1c11b14a86a1200aeb1f058b0eb9eaa7bc87bfb),"ROMFS: common: AeroFC: Do not start MAVLink over USB

STM32 pins are not exposed in AeroFC, so lets save some memory here.",X,memory

"PX4-Autopilot
"," #406
",[ef228b82aaca18d280d4a6fafd8a6f7747631dd0](https://github.com/PX4/PX4-Autopilot/commit/ef228b82aaca18d280d4a6fafd8a6f7747631dd0),"boards: AeroFC: Make it a memory constrained system

The maximum number of missions was increased in almost 8 times in
recent commit: 9369262e63 navigator: allow more mission items.

As this board loads missions in RAM, now it don't have enough memory
to allocate causing dataman start to fail, so mark it as a memory
constrained system and reduce the number of maximum missions
supported.",X,memory

"PX4-Autopilot
"," #407
",[cfa84954ea64995e1beaf3630041f77a569892d3](https://github.com/PX4/PX4-Autopilot/commit/cfa84954ea64995e1beaf3630041f77a569892d3),"param_get: add null-pointer check

If param_find() returned PARAM_INVALID, and this was directly passed to
param_get(), param_get_value_ptr() returned null and we read garbage data
(or segfaulted on systems with virtual memory).
On px4fmu-v2, this happened for the param ATT_VIBE_THRESH in sensors.
Because of the recently added parameter scoping, this param got pruned, as
it's defined in attitude_estimator_q.

credits for finding this go to Jeyong Shin (jeyong).",X,memory

"PX4-Autopilot
"," #408
",[54c8e3b26b50d66a5adc95a4f7295e7c2f19d2f9](https://github.com/PX4/PX4-Autopilot/commit/54c8e3b26b50d66a5adc95a4f7295e7c2f19d2f9),"commander: fix excessive orb_advertise calls for vehicle_status_flags

vehicle_status_flags_pub passed to publish_status_flags() was always null,
thus orb_advertise() was called each time.

Note that it did not produce a memory leak.",X,memory

"PX4-Autopilot
"," #409
",[2220c3a60d622fbd3c48b47cfc4f92f95638e92c](https://github.com/PX4/PX4-Autopilot/commit/2220c3a60d622fbd3c48b47cfc4f92f95638e92c),"ekf2: use sensors timestamp for published topics when in replay mode

when doing fast replay, hrt_absolute_time() will not match the replayed time
thus we just use the same timestamp as the input sensors.",X,fast

"PX4-Autopilot
"," #410
",[1d93b1bce300e5d3b180380d4ca8fa7883fe66f8](https://github.com/PX4/PX4-Autopilot/commit/1d93b1bce300e5d3b180380d4ca8fa7883fe66f8),"nuttx configs: increase CONFIG_NFILE_DESCRIPTORS from 51 to 53

this is needed due to the additional topics logged with the logger",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #411
",[bc91005e7aef64ca5e89f72baceee7128678f1d3](https://github.com/PX4/PX4-Autopilot/commit/bc91005e7aef64ca5e89f72baceee7128678f1d3),voted_sensors_update: increase accel & gyro timeout in HIL mode,New:Hard-coded-timing,increase

"PX4-Autopilot
"," #412
",[b1e27f43953d0578a246e3f5c19420ac663f0192](https://github.com/PX4/PX4-Autopilot/commit/b1e27f43953d0578a246e3f5c19420ac663f0192),"simulator: handle ctrl-c during startup correctly

This makes sure the px4 process does not hang when Ctrl-C is pressed
during startup.",General:Hard-coding,hang

"PX4-Autopilot
"," #413
",[cfcc75d444f3df23166f4777819ed26261efb85d](https://github.com/PX4/PX4-Autopilot/commit/cfcc75d444f3df23166f4777819ed26261efb85d),"mavlink shell: check if there's enough free buffer to send the mavlink message

if there is not, the process on the other end of the pipe will just block.
This improves reliability over slow links.",New:Fixed-communication-rate,slow

"PX4-Autopilot
"," #414
",[66d9d56525acda594029bc4447b8342f212f2101](https://github.com/PX4/PX4-Autopilot/commit/66d9d56525acda594029bc4447b8342f212f2101),"modules: dataman: Share memory between backends

Also having just a boolean to track if backend is running.",X,memory

"PX4-Autopilot
"," #415
",[e2aae04c95af32680dfd9dc097671f9942445ca6](https://github.com/PX4/PX4-Autopilot/commit/e2aae04c95af32680dfd9dc097671f9942445ca6),"modules: dataman: Add a ram_flash backend

This backend will keep all updated data in RAM and
persist the data between reboots using flash memory.

Using only flash memory would result in a slow backend that
would decrease the lifetime of the flash memory, using both
we can reduce the several cycles of erase & write into flash
and keep the performance of the backend almost as fast
as the RAM only backend.

Note: Do not use this backend on a sector from the same flash memory
bank as the memory bank that STM32 read instructions or it can block
the CPU from fetching instructions from flash during the erase and
write operations and cause your drone crash.",Known:Where_was_I,performance

"PX4-Autopilot
"," #416
",[f61b830ae9bcf9ecf78357e163578e6b675e2879](https://github.com/PX4/PX4-Autopilot/commit/f61b830ae9bcf9ecf78357e163578e6b675e2879),"nuttx-configs: aerofc: Enable CONFIG_STM32_FLASH_WORKAROUND_DATA_CACHE_CORRUPTION_ON_RWW

Now AeroFC is making use of both flash memory banks so it need this
workaround.",X,memory

"PX4-Autopilot
"," #417
",[5a66539b361fa584cfe15596d0c39c4d8505b5a8](https://github.com/PX4/PX4-Autopilot/commit/5a66539b361fa584cfe15596d0c39c4d8505b5a8),"HOTFIX:Backport Memory corruption due to stack coloring overreach

   Backport of upstream NuttX PR 264

   As discovered by dcabecinhas. This fix assume the 8 byte
   alignment options for size stack size or this will overwrite
   the first word after TOS
   See https://github.com/PX4/Firmware/issues/6613#issuecomment-285869778",X,memory

"PX4-Autopilot
"," #418
",[404719953c58523a311e5cf78e4caa7ff5c7807d](https://github.com/PX4/PX4-Autopilot/commit/404719953c58523a311e5cf78e4caa7ff5c7807d),"commander: fix abs bug / trigger POSCTL both ways

The check if stick were touched was only working in one direction (per
axis) because fabsf was used incorrectly.

However, this check is still only a differential check triggered by
fast movement and does not trigger if someone slowly moves a stick to
the side. Also, the sensitivity depends on the rate of the commander
loop and/or the RC update loop. The correct solution would be a proper
filtering and trigger for movement.",X,fast

"PX4-Autopilot
"," #419
",[2873d973de0e47d007018603f9fe06261b6f7e3a](https://github.com/PX4/PX4-Autopilot/commit/2873d973de0e47d007018603f9fe06261b6f7e3a),"mavlink: increase parameter rate from 120 to 300Hz

This speeds up parameter loading. Slow links like telemetry are unaffected,
since the mavlink loop runs only with ~100Hz.

Tested on various links, like:
- telemetry link
- pixracer WiFi
- pixracer USB
- SITL","New:Hard-coded-fine-tuning
New:Hard-coded-timing",slow

"PX4-Autopilot
"," #420
",[b4290b6b52708c631673cc03af9adee8333062ec](https://github.com/PX4/PX4-Autopilot/commit/b4290b6b52708c631673cc03af9adee8333062ec),"params: make param_t uint16_t on NuttX

param_t is only used as an offset and we have <1000 params, so an uint16_t
is enough.
This saves roughly 1KB of RAM. We only do that on NuttX because normal
integers have better performance in general.
Previously on amd64, this was even 64bits because it was an uintptr_t.",X,performance

"PX4-Autopilot
"," #421
",[0e650638e40ce62ab11a4977729695a90096e29c](https://github.com/PX4/PX4-Autopilot/commit/0e650638e40ce62ab11a4977729695a90096e29c),"param: implement RW locking

This allows concurrent read access, which are much more common; reducing
potential lock contention and increasing concurrency.

Taking a lock is expensive, and the reader lock is now even more expensive.
An RCU synchronization scheme would reduce the overhead of the readers to
increasing/decreasing an atomic counter.
Thus this should only be an intermediate step until we move towards RCU.

Tested on SITL & Pixracer.",X,overhead

"PX4-Autopilot
"," #422
",[21e04c9f7afd56adf21d02b76c89ae06fe1fc5a7](https://github.com/PX4/PX4-Autopilot/commit/21e04c9f7afd56adf21d02b76c89ae06fe1fc5a7),"UAVCAN performance audit (#6829)

* UAVCAN ESC output: removing ESC output channels from published message that are always zero. This allows the UAVCAN stack to always transfer only the minimum number of output values, avoiding redundant zeroes and the associated increase in bus load and CPU time



* Added a separate mixer file for CAN quadrotor



* Sampling profiler improvements



* PMSP: Output more endpoints



* Matrix update



* libc usage workaround



* Removed UAVCAN perfcounters","General:Hard-coding
Smith:General:Unnecessary_Processing",performance

"PX4-Autopilot
"," #423
",[c20b85e6adc2ff212bfdc83810283fae1964d510](https://github.com/PX4/PX4-Autopilot/commit/c20b85e6adc2ff212bfdc83810283fae1964d510),"Revert ""UAVCAN performance audit (#6829)"" (#6846)

This reverts commit 21e04c9f7afd56adf21d02b76c89ae06fe1fc5a7.",X,performance

"PX4-Autopilot
"," #424
",[2b2c307eac8af452f8b770996ff5648225000dcd](https://github.com/PX4/PX4-Autopilot/commit/2b2c307eac8af452f8b770996ff5648225000dcd),"Performance audit (intentionally duplicates #6829) (#6847)

* UAVCAN ESC output: removing ESC output channels from published message that are always zero. This allows the UAVCAN stack to always transfer only the minimum number of output values, avoiding redundant zeroes and the associated increase in bus load and CPU time



* Added a separate mixer file for CAN quadrotor



* Sampling profiler improvements



* PMSP: Output more endpoints



* Matrix update



* libc usage workaround



* Removed UAVCAN perfcounters



* Matrix submodule update","General:Hard-coding
Smith:General:Unnecessary_Processing",performance

"PX4-Autopilot
"," #425
",[7d62aa6a6d9b64977319bbfe66aab23e67884072](https://github.com/PX4/PX4-Autopilot/commit/7d62aa6a6d9b64977319bbfe66aab23e67884072),"HOTFIX:Backport Memory corruption due to stack coloring overreach complete (#6848)

Backport of upstream NuttX



       86400a252dcbe6e4aef3ecca000b469a0fe96b67

       08e92abb0ba744927ed0b32294859b0f47726f82

       4b65817e99cbdf04fefad883eca0e7c8a9add63c



       Improper rounding in redundant stack coloring

       routines could overwriting the TOS+1 and BOS-1

       depending on the value of CONFIG_ARCH_INTERRUPTSTACK



       This applies the compelet upstream set of fixes from

       David Cabecinhas <david.cab+bitbucket@gmail.com>



       Improper rouding in redundant stack coloring

       routines was overwriting the TOS+1 and BOS-1



       The legacy OABI 4 byte stack alingment was removed

       Only the EABI 8 byte alinement is supported

       The redundant interrupt stack coloring. up_initalize

       had the correct implemantation (last verson of patch)

       and the redundant version in the

       arch/arm/src/stmxxx/stmxx_irq.c was calculating the size

       wrong.



       This is fixed by rounding up CONFIG_ARCH_INTERRUPTSTACK

       by 4 bytes when allocated and alining on a 8 byte boundry",X,memory

"PX4-Autopilot
"," #426
",[a6dcbc3a222c22006b4c26e8d2280072b5c399d5](https://github.com/PX4/PX4-Autopilot/commit/a6dcbc3a222c22006b4c26e8d2280072b5c399d5),"HOTFIX:Fixes improper restoration of base_priority

   Backport of upstream:

   7601a27cee348f70bebcac95e8e8372fe0651bbf David Sidrane Thu Mar 16 14:16:18 2017 -1000  sem_holder:The logic for the list version is unchanged
   3cc2a4f7c9bb495da6c59f373f8d0e7672e4ee13 David Sidrane Wed Mar 15 14:02:55 2017 -1000  sem_holder: Fixes improper restoration of base_priority
   caf8bac7fb9452f25a3297147e7b414d46e74c6f David Sidrane Mon Mar 13 22:54:13 2017 +0000  missing semi
   d66fd9f965f27eb0446d6aed24b8758674f98b53 David Sidrane Mon Mar 13 12:34:39 2017 -1000  semaphore:sem_boostholderprio prevent overrun of pend_reprios
   3c00651cfef3a0d90bb9e6522463965ad8989e6c David Sidrane Mon Mar 13 11:56:31 2017 -1000  semaphore:sem_holder sem_findholder missing inintalization of pholder
   4d760c5ea44c5f8d30a1a595800e9fbf4874e705 David Sidrane Mon Mar 13 10:46:26 2017 -1000  semaphore:sem_holder add DEBUGASSERTs
   modified 399f3067441941072664bdbfa1bfec8ff35aa449 Gregory Nutt  Sat Mar 11 08:57:34 2017 -0600  A few cosmetic changes (removed file that had nothing to do with semaphore commit by OA)
   60d8606b19a7e7c1285a0ef5e8addaaedf26b95f David Sidrane Fri Mar 10 06:38:17 2017 -1000  Priority Inversion fixes:Initalization
   6cc8f9100b3c8026e73ca738aaa5120bd78dae74 David Sidrane Fri Mar 10 06:37:46 2017 -1000  Priority Inversion fixes:typo
   360539afacc83132acdb83da8f20c468dbe4c63d Gregory Nutt  Fri Mar 10 09:30:15 2017 -0600  Priority inheritance:  When CONFIG_SEM_PREALLOCHOLDERS==0, there is only a single, hard-allocated holder structure.
                                                                                          This is problem because in sem_wait() the holder is released, but needs to remain in the holder container
   a93e46d00c1bc3447fb290b866ed21d8f9c8e146 Gregory Nutt  Fri Mar 10 08:54:50 2017 -0600  Cosmetic (missleading OA commit message) Using !pholder is now  pholder == NULL

   sem_holder: Fixes improper restoration of base_priority
   in the case of CONFIG_SEM_PREALLOCHOLDERS=0

   Original code did not take into accout that 2 holder are needed
   and failed silently when a slot could not be allocated

   The call to sem_restorebaseprio_task context switches in the
   sem_foreachholder(sem, sem_restoreholderprioB, stcb); call
   prior to releasing the holder. So the running task is left
   as a holder as is the started task. Leaving both slots filled
   Thus failing to perforem the boost/or restoration on the
   correct tcb.

   This PR fixes this by releasing the running task slot prior
   to reprioritization that can lead to the context switch.
   To faclitate this, the interface to sem_restorebaseprio
   needed to take the tcb from the holder prior to the
   holder being freed. In the failure case where sched_verifytcb
   fails it added the overhead of looking up the holder.

   There is also the additional thunking on the foreach to
   get from holer to holder->tcb.",X,overhead

"PX4-Autopilot
"," #427
",[0d6f9941456d405fcdec7068719e80f3d02f188e](https://github.com/PX4/PX4-Autopilot/commit/0d6f9941456d405fcdec7068719e80f3d02f188e),"mc_pos_control: slow down in auto when close to target

mc_pos_control: move limit vel xy after velocity controller",General:Hard-coding,slow

"PX4-Autopilot
"," #428
",[72fb7a5062989dcebc7607ebab0e870b72584106](https://github.com/PX4/PX4-Autopilot/commit/72fb7a5062989dcebc7607ebab0e870b72584106),"mc_pos_control: added gradual landing speed logic
depending on two altitudes that can get set as parameter
the logic linearly slows down from higher land altitude 1 to slower land altitude 2",General:Hard-coding,slower

"PX4-Autopilot
"," #429
",[eac72051b8572fe6c7ed40e3ef22f6598fe6c51a](https://github.com/PX4/PX4-Autopilot/commit/eac72051b8572fe6c7ed40e3ef22f6598fe6c51a),"Backport of stm32f7 add DTCM to heap and use it on F7 (#6865)

* Backport:stm32f7: stm32_allocateheap: allow use DTCM memory for heap



   Back port of upstrem contrib by Jussi Kivilinna <jussi.kivilinna@haltian.com>



   stm32f7: stm32_allocateheap: allow use DTCM memory for heap



   STM32F7 has up to 128KiB of DTCM memory that is currently left unused.



   This patch adds DTCM to main heap if CONFIG_STM32F7_DTCMEXCLUDE is not enabled.



* px4fmu-v5_default:Enable inclusion of the DTCM in the heap



  CONFIG_MM_REGIONS=3 adds the DTCM region to the heap.",X,memory

"PX4-Autopilot
"," #430
",[5c6264ae3554e34c5ee1add2e9c1ee155fa7231e](https://github.com/PX4/PX4-Autopilot/commit/5c6264ae3554e34c5ee1add2e9c1ee155fa7231e),"Backport:stm32_flash changes from upsteam

  PX4 contrib from <jose.souza@intel.com>

  1) stm32: Fix erase sector number for microcontrolers with
     more than 11 sectors

     Erase a sector from the second bank cause the bit 4 of SNB being set
     but never unsed, so trying to erase a sector from the first bank
     was acually eraseing a sector from the second bank.
  2) stm32: Make up_progmem thread safe

   Writing to a flash sector while starting the erase of other sector
   have a undefined behavior so lets add a [staticaly initalized]
   semaphore and syncronize access to Flash registers.

  3) Add workaround for flash data cache corruption on
     read-while-write

    This is a know hardware issue on some STM32 see the errata
    of your model and if you make use of both memory banks you
    should enable it.

  4) Greg's cleanup

  5) PX4 clean up

    stm32_flash:Need conditional on non F4 targets",X,memory

"PX4-Autopilot
"," #431
",[d72133a380e64b92820ebf8052497406003da4ec](https://github.com/PX4/PX4-Autopilot/commit/d72133a380e64b92820ebf8052497406003da4ec),"rcS: increase log buffer by 4kB

To reduce dropouts, and because we have enough RAM :)",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #432
",[358bcb6ae04d7d04a614d2166af7cd8282bb1048](https://github.com/PX4/PX4-Autopilot/commit/358bcb6ae04d7d04a614d2166af7cd8282bb1048),"visibility.h: add #pragma GCC poison getenv setenv putenv

Just to make sure that it will never be used on NuttX. This is not an
architectural limitation, just a memory optimization, since we call
clearenv() on NuttX.",X,memory

"PX4-Autopilot
"," #433
",[412f956636f9f98a3b681e76c5a123e7f609c988](https://github.com/PX4/PX4-Autopilot/commit/412f956636f9f98a3b681e76c5a123e7f609c988),clang-tidy enable performance-type-promotion-in-math-fn,X,performance

"PX4-Autopilot
"," #434
",[c46274043f4a1514668ec745246a198d80e5b83b](https://github.com/PX4/PX4-Autopilot/commit/c46274043f4a1514668ec745246a198d80e5b83b),"printload: use sched_lock to protect access to tcb

what could have gone wrong before? A scheduling switch during the printload
could have led to a task exit, rendering the tcb invalid. After switching
back, printload would access invalid memory.

This keeps the sched_lock() section as small as possible, just grabbing the
tcb variables we need.",X,memory

"PX4-Autopilot
"," #435
",[23d03559795975ee74b4b990a1c7a01aa4dcc167](https://github.com/PX4/PX4-Autopilot/commit/23d03559795975ee74b4b990a1c7a01aa4dcc167),"printload: reduce memory usage of print_load_s

assuming CONFIG_MAX_TASKS = 32, this saves 256B of RAM",X,memory

"PX4-Autopilot
"," #436
",[4b01e5b6b62959ad97ad5691602ea6fa885009b8](https://github.com/PX4/PX4-Autopilot/commit/4b01e5b6b62959ad97ad5691602ea6fa885009b8),"printload: add print_load_buffer() method

Instead of printing to an fd, this prints to a buffer and calls a callback
for each line. To avoid code duplication, the print_load has been refactored
to print to a buffer first, then print to an fd. The overhead is not
noticable, and the behavior of print_load is unchanged.",X,overhead

"PX4-Autopilot
"," #437
",[446c734edc92c57be6a4b60320f02cd8e4025ce5](https://github.com/PX4/PX4-Autopilot/commit/446c734edc92c57be6a4b60320f02cd8e4025ce5),"perf_counter: use a mutex to protect concurrent access to the perf_counters linked list

perf_counters is read from and written to by different threads and thus
requires synchronization. Without it we risk accessing invalid memory.

There are still remaining issues (see comment in code), they will not lead
to a crash however.",X,memory

"PX4-Autopilot
"," #438
",[0158f1d506c145444cd5004a9ac9d6aec7da9b98](https://github.com/PX4/PX4-Autopilot/commit/0158f1d506c145444cd5004a9ac9d6aec7da9b98),"VTOL Standard transition improvements (#6904)



 * FW actuators fully on the entirety of front and back transition

 * back transition ramp up to full MC weight half way through back transition

 * increase maximum front and back transition times

 *  navigator don't reset transition altitude",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #439
",[12182ec1fc5355d75e12672cc5a7b155fe99f4a1](https://github.com/PX4/PX4-Autopilot/commit/12182ec1fc5355d75e12672cc5a7b155fe99f4a1),"Increase max yawrate default parameters for standard delta VTOL

MC_YAWRATE_MAX 20  => 50

Signed-off-by: bresch <brescianimathieu@gmail.com>",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #440
",[6ef2ae29993c02f926c8719d29d84202b1fe3142](https://github.com/PX4/PX4-Autopilot/commit/6ef2ae29993c02f926c8719d29d84202b1fe3142),"Reduce USART1 tx buffer by 8 bytes to fix aligment issue

   The recent changes to the timers increased memory by 8 bytes.
   and should have ONLY added 8 bytes
   was  20000dc0	40	20000E00
   is:  20000dc8	40	20000E08
   s/b  20000E08       1f3      next symbol

   But for some unknown reason the linker skipped to the next alignment
   of 256 and wasted 246 bytes.

   20000F00     1f3     next symbol

   Even with .align 8 in the .S file and . = ALIGN(4); in the linker
   script I could not move the allocation back only up to the next
   512 alighment.

   So this is a hack to shift things back 8 bytes.",New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #441
",[61cd89efc1827a21debd43a1dd8f46acf3456040](https://github.com/PX4/PX4-Autopilot/commit/61cd89efc1827a21debd43a1dd8f46acf3456040),"Land detector: Since multicopters take off and land slower than 0.7 m/s, setting the default detection threshold to 0.5 m/s is a much safer default",X,slower

"PX4-Autopilot
"," #442
",[3b743fbbe97bdc264455944fb16e6cee7e7c9db8](https://github.com/PX4/PX4-Autopilot/commit/3b743fbbe97bdc264455944fb16e6cee7e7c9db8),"MC position control: Smoother takeoff

This patch ramps up the throttle to hover throttle instead of a fixed value and limits the vertical takeoff speed to the value set in the parameter. This should ensure smoother, slower takeoffs, in particular in autonomous flight modes.",General:Hard-coding,slower

"PX4-Autopilot
"," #443
",[7f0db95f870fb9ce4602d6b9ed66422a3cb6e7e6](https://github.com/PX4/PX4-Autopilot/commit/7f0db95f870fb9ce4602d6b9ed66422a3cb6e7e6),"logger: reduce CPU load by ~1.5%

Reduces CPU load from ~6.9% to 5.3% (tested on Pixracer & Pixhawk). The
method is only used once, so it does not increase flash usage.",X,increase

"PX4-Autopilot
"," #444
",[9eb0e62787d4bc6e9334f20d14aa83960c8d68ff](https://github.com/PX4/PX4-Autopilot/commit/9eb0e62787d4bc6e9334f20d14aa83960c8d68ff),Support calibration of fast+slow gyros #6998,X,slow

"PX4-Autopilot
"," #445
",[56f4f2b41f2a20e26936d09023a3a0e383cc7893](https://github.com/PX4/PX4-Autopilot/commit/56f4f2b41f2a20e26936d09023a3a0e383cc7893),"Fix top output, indentation for #7020

Previously load stats were stored outside of the printloop, but
with the refactoring to save memory state was reset and used in
the first loop before the actual load calculations were valid.

Fixed by moving the summary info to the bottom of the top printout
after everything is computed. Also restructured the callback to
not depend on a line counter and fixed astyle glitches.",X,memory

"PX4-Autopilot
"," #446
",[57fa031e2b52cd9f0cd3429bdd368fed7ea13486](https://github.com/PX4/PX4-Autopilot/commit/57fa031e2b52cd9f0cd3429bdd368fed7ea13486),Fixes problem preventing params on snapdragon platforms from being saved to flash memory.,General:Hard-coding,memory

"PX4-Autopilot
"," #447
",[2a34bde0e9fd941551cab31d8f6e1c757611e538](https://github.com/PX4/PX4-Autopilot/commit/2a34bde0e9fd941551cab31d8f6e1c757611e538),"Tools/ecl_ekf: Update EKF log analysis

Add assessment of IMU bias and mag field estimation
Reduce warning false positives by adjusting thresholds and eliminating use of peak value plots for output observer monitoring
Clear each figure after saving to reduce memory usage",X,memory

"PX4-Autopilot
"," #448
",[5012dffeaede4228d2109358b1d08adfafdd4d19](https://github.com/PX4/PX4-Autopilot/commit/5012dffeaede4228d2109358b1d08adfafdd4d19),"Potentially infinite and deleted loops found by PVS-Studio (#7100)

 - Fixed V712

 - The compiler can optimize this code by creating an infinite loop, or simply deleting it.

 - There is need to add a volatile qualifier to the '_ExitFlag' and 'sim_delay' variables.",X,infinite

"PX4-Autopilot
"," #449
",[60fe87aac252f5b20922be07ff5f76f8106d3cb5](https://github.com/PX4/PX4-Autopilot/commit/60fe87aac252f5b20922be07ff5f76f8106d3cb5),commander : preflight checks increase max_mags to 4,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #450
",[f04f1d6b03146c5db6bdfaed773b864a2f39848a](https://github.com/PX4/PX4-Autopilot/commit/f04f1d6b03146c5db6bdfaed773b864a2f39848a),"sensors HIL increase gyro and accel timeout

 - fixes #7050",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #451
",[9a162a24bb31c8d7f5e89507a2099f984a68f6a4](https://github.com/PX4/PX4-Autopilot/commit/9a162a24bb31c8d7f5e89507a2099f984a68f6a4),"mc_pos_control: improved smooth takeoff and used it for manual takeoff as well
adresses:
there were setpoint twitches at the beginning and end of my smooth takeoff routine
it was to slow and not configurable
it was only available for automatic takeoff",General:Hard-coding,slow

"PX4-Autopilot
"," #452
",[d1dd6a16f20e4fb28ff096ab882c9a11c362e57d](https://github.com/PX4/PX4-Autopilot/commit/d1dd6a16f20e4fb28ff096ab882c9a11c362e57d),"IO v2: disable interrupt stack

This avoids burning significant memory in a configuration that is not actually using parallel tasks",New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #453
",[dbf754eab1833a5f83bc3d99f9644bbe49d77667](https://github.com/PX4/PX4-Autopilot/commit/dbf754eab1833a5f83bc3d99f9644bbe49d77667),"ROMFS: If UAVCAN is enabled, reduce log buffer size

This is necessary to make the space for UAVCAN in memory and doing it this way avoids negatively impacting users who do not use UAVCAN.",New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #454
",[33f2897f00130daa9c4a8615a1f2313d11f34444](https://github.com/PX4/PX4-Autopilot/commit/33f2897f00130daa9c4a8615a1f2313d11f34444),"px4fmu-v4:Configure timer IO pins with pull downs

  When the CCER is cleared the IO pin tends to float. The FMUV4
  HW has no TXS0108 and if cut off while high will decay.

  By adding the pull down the pins will seek the low state faster.
  13.8 us from off to decabe below threshold.",X,faster

"PX4-Autopilot
"," #455
",[8ea0b2d3c51a48a7f45440583301f04e52665b02](https://github.com/PX4/PX4-Autopilot/commit/8ea0b2d3c51a48a7f45440583301f04e52665b02),"commander: rework posvel validity checks

Move into functions.
Reset probation time and recalculate checks if a mode change is demanded to give the operator ability to regain control as soon as possible after nav performance is regained. (+11 squashed commits)
Squashed commits:
[a4bb800] commander: enable pilot to quickly recover from loss of position accuracy
[19e16a0] commander: rework postal probation time
[f96284e] commander: rework bad pos and vel test probation time
[00d5f0c] commander: Allow EKF preflight checks to pass with moving vehicle

Separates the 'is using GPS' and the GPS quality checks.
Uses a reasonable subset of the GPS quality checks which allows checks to pass if the vehicle is moving.
[4cdfb5c] commander: remove unused variable
[349385a] commander: add EKF GPS quality checks to pre-arm checking

Only perform check if GPs checking is activated by parameter setting.
Display fault messages that makes it clear if EKF quality checks are failing or the EKF is not using GPS for another reason. We do not want to confuse this with GPS lock.
[340ae29] commander: make position invalid fail-safe more sticky

Require check to pass for 7 seconds before exiting failsafe. This is required because if GPs is failing innovation tests for a prolonged period, the EKF will periodically reset to the GPS and report good accuracy at the time of reset.
Adding this delay gives time for an underlying error condition (eg bad IMU or compass) to be re-detected.
[b04ac95] commander: Increase RAM allocation to eliminate low stack warnings
[9dca12f] commander: add missing position invalid fail-safe responses
[69f264d] commander: Update position invalid fail-safe responses

Replace separate logic for each case with a generic function
Add velocity checks.
[8e8cef1] commander: rework position validity checks

Consolidate existing checks for global and local position validity and add checking of velocity accuracy.
Enable checks to be bypassed using the CBRK_VELPOSERR parameter.",New:Hard-coded-fine-tuning,performance

"PX4-Autopilot
"," #456
",[0d7f475bd01111c5866e8ccb556ea3d5012f5307](https://github.com/PX4/PX4-Autopilot/commit/0d7f475bd01111c5866e8ccb556ea3d5012f5307),"ecl: minor updates

Initialisation changes to address valgrind errors
Change to default GPS and Airspeed time delay (these are overwritten by ekf2_main parameter settings)
Increase sensitivity of bad accelerometer checks",X,increase

"PX4-Autopilot
"," #457
",[65baf9983232a5697b7748c8df52e4abb6e7f067](https://github.com/PX4/PX4-Autopilot/commit/65baf9983232a5697b7748c8df52e4abb6e7f067),"Logger hotfix: Allocate buffer on logging

This enables to use the RAM normally consumed by the log buffer to be used for calibration and other memory-intense tasks.
These run typically only disarmed when logging is not enabled.",X,memory

"PX4-Autopilot
"," #458
",[1bb56e775e0b8feb4c0e6e37107b2d6d5cad195f](https://github.com/PX4/PX4-Autopilot/commit/1bb56e775e0b8feb4c0e6e37107b2d6d5cad195f),"IO: Fix access to free memory

The free memory was accessed from interrupt context where it should not be accessed from. We build the statistic now at a fixed rate while not armed.",X,memory

"PX4-Autopilot
"," #459
",[981dac8e955b3a4194421605dda7a09b7c16bbc5](https://github.com/PX4/PX4-Autopilot/commit/981dac8e955b3a4194421605dda7a09b7c16bbc5),Navigator: Increase RAM size,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #460
",[68e76d8ed3a1974aa3365d0eb4b2314e9cc09067](https://github.com/PX4/PX4-Autopilot/commit/68e76d8ed3a1974aa3365d0eb4b2314e9cc09067),"FMUv5: Increase logging throughput considerably.

This will help to understand the sensor selection on FMUv5 in different airframes. We do have the RAM and CPU to do this on this platform.",X,increase

"PX4-Autopilot
"," #461
",[3c62f7a3eb1e3427e194a85a32c3ceb69cc7494d](https://github.com/PX4/PX4-Autopilot/commit/3c62f7a3eb1e3427e194a85a32c3ceb69cc7494d),"stm32:drv_input_capture bug fixes.

   Filter for channel 4 was modifying channel 1
   capture and overflow reads were using wrong paramaters
   in macros and addressing junk in memory.
   up_input_capture_get_filter was shifing results the wrong way.",X,memory

"PX4-Autopilot
"," #462
",[cfa61c58411f2257b9b5e09a7e4fb16b8bcdbb2d](https://github.com/PX4/PX4-Autopilot/commit/cfa61c58411f2257b9b5e09a7e4fb16b8bcdbb2d),"MavlinkReceiver: add mission manager, param manager, ftp and log handler

This makes also a slight stack size increase necessary (was 284 bytes left)",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #463
",[2a79ddd621355690e174f134e3421e7bf67bddb1](https://github.com/PX4/PX4-Autopilot/commit/2a79ddd621355690e174f134e3421e7bf67bddb1),"MavlinkLogHandler: increase MAX_BYTES_SEND to 256kb

It increases the throughput on UDP (from around 2Mb to 2.5Mb), while the
rate via USB & telemetry stay the same.","New:Hard-coded-fine-tuning
Fixed_Communication_Rate",increase

"PX4-Autopilot
"," #464
",[5a96490c689d36d319248468799644cc53b9c22a](https://github.com/PX4/PX4-Autopilot/commit/5a96490c689d36d319248468799644cc53b9c22a),sensors : fix race condition triggered by slow-to-boot external sensors,X,slow

"PX4-Autopilot
"," #465
",[32068dcd171ac6a372860ce5aaaeaa261b346e23](https://github.com/PX4/PX4-Autopilot/commit/32068dcd171ac6a372860ce5aaaeaa261b346e23),px4io increase stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #466
",[63cbce6bd383c431251179adb9a0764e6da9560e](https://github.com/PX4/PX4-Autopilot/commit/63cbce6bd383c431251179adb9a0764e6da9560e),ekf2: Increase RAM to remove stack space warnings,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #467
",[c8b9f8afa8836ce921d92b3aba198f04bbab673c](https://github.com/PX4/PX4-Autopilot/commit/c8b9f8afa8836ce921d92b3aba198f04bbab673c),F7 nuttx configs: increase CONFIG_STM32F7_BBSRAM_FILES to 5,X,increase

"PX4-Autopilot
"," #468
",[6eff7deb7edc5419bdeef3ddf2ce26fdc02a6960](https://github.com/PX4/PX4-Autopilot/commit/6eff7deb7edc5419bdeef3ddf2ce26fdc02a6960),"Extend the delay ensure post reset pulse delayed.

Given the original poster's comment that ""It happens very consistently for us."" I suspect the motor spin observed in https://github.com/PX4/Firmware/issues/7457 is not caused by the original issue of slow decay on the PWM pins at reset, but the post reset pulse of 3.1 Ms arriving in a window that the ESC considers it valid.



The results from testing, indicated that the if the PWM pins were clamped low for > 300 Ms, prior to reset the motors did not spin. This would delay the the post reset pulse of 3.1 Ms out by > 300 Ms.



This change delays the reset and therefore the pulse by at least 400 Ms.","New:Hard-coded-fine-tuning
New:Hard-coded-timing",slow

"PX4-Autopilot
"," #469
",[f45b9048aa8662865ef95703e51fcdc70544254b](https://github.com/PX4/PX4-Autopilot/commit/f45b9048aa8662865ef95703e51fcdc70544254b),GPS driver increase stack (244 bytes left),New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #470
",[75faf5c7bd1e154fa7487cba09afcad668e704a6](https://github.com/PX4/PX4-Autopilot/commit/75faf5c7bd1e154fa7487cba09afcad668e704a6),Preflight checks: Increase accel warn limit range,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #471
",[585984fa0c846d1a1c4e63e9e9501cfff9d87cda](https://github.com/PX4/PX4-Autopilot/commit/585984fa0c846d1a1c4e63e9e9501cfff9d87cda),fmuservo increase stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #472
",[10f54e718eed24cd225231d653d1b1b9a07e3fd9](https://github.com/PX4/PX4-Autopilot/commit/10f54e718eed24cd225231d653d1b1b9a07e3fd9),"modules: dataman: Optimize memory usage

Use the size of each item type instead of the biggest one.

In AeroFC that runs is constrained mode it was using 7860 bytes
and now it uses 6930 bytes almost 1KB less.",General:Hard-coding,memory

"PX4-Autopilot
"," #473
",[71136dcedf9c4006f036022652a698db9b38f092](https://github.com/PX4/PX4-Autopilot/commit/71136dcedf9c4006f036022652a698db9b38f092),"Log_writer_file: Increase stack size

Test flights reported the warning `[load_mon] log_writer_file low on stack! (292 bytes left)`

Increase stack size from 1060  to 1072 (=8 + 1060 rounded to next multiple of 8).",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #474
",[a6c682ce504a33f64a3bde83e5f9004c252a476a](https://github.com/PX4/PX4-Autopilot/commit/a6c682ce504a33f64a3bde83e5f9004c252a476a),"mavlink_ftp: fix stack overflow & add root dir prefix

- change memory allocation from stack to a malloc'd buffer. This avoids
  increasing the stack size. And since FTP is rarely used, the buffers
  are only allocated upon use and freed after a time of 2s inactivity.
- adds PX4_ROOTFSDIR as root directory prefix. This does not change
  anything on NuttX, but in SITL it will avoid enumerating the whole
  disk tree when using QGC (which enumerates all files recursively).",X,memory

"PX4-Autopilot
"," #475
",[f746f9a9b3ab349659a4efd26cba8a9d87a19964](https://github.com/PX4/PX4-Autopilot/commit/f746f9a9b3ab349659a4efd26cba8a9d87a19964),UAVCAN: Reduce memory footprint,General:performance:Hard-coding,memory

"PX4-Autopilot
"," #476
",[2815c62acff650a0299e8f08f1faf3eec66d45b9](https://github.com/PX4/PX4-Autopilot/commit/2815c62acff650a0299e8f08f1faf3eec66d45b9),"fix power button shutdown: use an orb topic instead of a work queue call

px4_shutdown_request() was called from the power button IRQ callback, which
invoked a work queue callback. But on NuttX, the work queue uses a
semaphore, and thus it cannot be called from IRQ context.
This patch switches to publishing an uORB msg instead, which is handled in
the commander main thread.

To increase failure resistance, we could subscribe to the same topic in
another module for redundancy, in case commander runs wild.",X,increase

"PX4-Autopilot
"," #477
",[dcb5f80180aa89533db89c96a02d6395d1641d75](https://github.com/PX4/PX4-Autopilot/commit/dcb5f80180aa89533db89c96a02d6395d1641d75),"shutdown: increase the max timeout to 5s

To make sure slow param writes will finish before we hit the timeout. I've
seen param write durations of around 2s.","New:Hard-coded-fine-tuning
New:Hard-coded-timing",slow

"PX4-Autopilot
"," #478
",[529def11e8959373e4a644d1ded7be5ff242b0e0](https://github.com/PX4/PX4-Autopilot/commit/529def11e8959373e4a644d1ded7be5ff242b0e0),CMake / Clang: Increase warning level,X,increase

"PX4-Autopilot
"," #479
",[03d86054a48d3ebf1d4a8f21ce5e4d3d4efb4f08](https://github.com/PX4/PX4-Autopilot/commit/03d86054a48d3ebf1d4a8f21ce5e4d3d4efb4f08),landdetector: decrease land detection to 0.3,New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #480
",[52ca49c6826c243136a09d5105156430a4570f97](https://github.com/PX4/PX4-Autopilot/commit/52ca49c6826c243136a09d5105156430a4570f97),"geofence: remove fence & fence_vertex messages

- this was never read
- it was implemented wrong, leading to memory access violations in
  publishFence (an integer was passed instead of the fence_s struct)",X,memory

"PX4-Autopilot
"," #481
",[1a3315e397d7a8104eef6a68b42f2b419bc6a3a8](https://github.com/PX4/PX4-Autopilot/commit/1a3315e397d7a8104eef6a68b42f2b419bc6a3a8),"msg: Fix build in python3

We can afford a slower performance in this parsers with python2 to
keep compability with python3.
http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html#xrange",X,performance

"PX4-Autopilot
"," #482
",[afb01d015e246a93b7ebccc2d45bccd4a9920d51](https://github.com/PX4/PX4-Autopilot/commit/afb01d015e246a93b7ebccc2d45bccd4a9920d51),"px4fmu-v2:Use simple HW versioning API to differentiate V2 variant at runtime.

   There are several boards that share the px4fmu-v2 build as px4fmu-v3 build.

   It was initially envisioned, that the build would be binary compatable and
   the RC script would probe different sensors and determine at runtime the
   HW type. Unfortunately, a failed sensor, can result in mis-detection
   of the HW and result in an improper start up and not detect the HW
   failure.

   All these boards's bootloader report board type as px4fmu-v2.
   This precludes and automated selection of the correct fw if it
   had been built, by a different build i.e. px4fmu-cube etc.

   We need a way to deal with the slight differences in HW that effect
   the operations of drivers and board level functions that are different
   from the FMUv2 pinout and bus utilization.

   1) FMUv3 AKA Cube 2.0 and Cube 2.1 Bothe I2C busses are external.
      This effected the mag on GPS2 not reporting Internal and
      having the wrong rotation applied.

   2) FMUv3 does not performa a SPI buss reset correctly.
      FMUv2 provides a SPI1 buss reset. But FMUv3 is on
      SPI4. To complicate matters the CS cross bus
      boundries.

   3) PixhawkMini reused a signal that was associated with SPI4
      as a SPI1 ready signal.

   Based on hardware differnce in the use of PB4 and PB12 this code
   detects: FMUv2,  the Cube, and PixhawkMini and provides the
   simple common API for retriving the type, version and revision.

   On FmuV5 this same API will be used.",X,runtime

"PX4-Autopilot
"," #483
",[490f40bee161112c55c09c865ce9be9e96ea65d6](https://github.com/PX4/PX4-Autopilot/commit/490f40bee161112c55c09c865ce9be9e96ea65d6),"Sensors: Use temperature for airspeed validation to avoid false positives for high-performance airspeed sensors

This is required to enable new high-performance sensors which otherwise would provide incorrect readings.",X,performance

"PX4-Autopilot
"," #484
",[cc1b76682443f6de28cd07180a39ba8a6d0edb5d](https://github.com/PX4/PX4-Autopilot/commit/cc1b76682443f6de28cd07180a39ba8a6d0edb5d),"Fix memory leaks identified by cppcheck

* Add `free` / `delete`
* Add comment explaining the (presumed) motivation for the use of new instead of
  allocating on the stack",General:C:not_deallocating,memory

"PX4-Autopilot
"," #485
",[9dea515eaaf758abcc0131c0c368078358972f69](https://github.com/PX4/PX4-Autopilot/commit/9dea515eaaf758abcc0131c0c368078358972f69),frsky_telemetry S.Port: refactor to use less memory & allocations,X,memory

"PX4-Autopilot
"," #486
",[a2bfcb94ef1c03b586c55d91fffec36b8d504b8b](https://github.com/PX4/PX4-Autopilot/commit/a2bfcb94ef1c03b586c55d91fffec36b8d504b8b),"frsky_telemetry D protocol: refactor to use less memory & allocations

Also add the vehicle_gps_position & flight mode information",X,memory

"PX4-Autopilot
"," #487
",[98396a0bc57ebfdc85ff6ff54c097968387fe620](https://github.com/PX4/PX4-Autopilot/commit/98396a0bc57ebfdc85ff6ff54c097968387fe620),"frsky_telemetry: cleanup static vars, use less memory & fix process priority",New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #488
",[9644f855e3dc7be4ffdb561218338a30ab774746](https://github.com/PX4/PX4-Autopilot/commit/9644f855e3dc7be4ffdb561218338a30ab774746),"common:Define default BOARD_NUMBER_I2C_BUSES and BOARD_I2C_BUS_CLOCK_INIT

   Define the default I2C buss frequncies that are backward compatible
   with the existing code. While allowing it the defaults to be overridden
   by a board config.

   Based on the legacy STM32 code, the I2C buss numbering starts at 1.
   The bus frequency is stored in a 0 based array. If px4_i2cbus_initialize
   returns a valid device, then the _bus-1 will act as the index to the
   busses frequency.

   A board may define BOARD_NUMBER_I2C_BUSES - the number of I2C busses
   it supports* and BOARD_I2C_BUS_CLOCK_INIT to initalize the bus
   clocks for a given busses.

   BOARD_NUMBER_I2C_BUSES - the number of busses including the *highest
                            number bus. If the board has 2 I2C
                            busses I2C1 and I2C3 BOARD_NUMBER_I2C_BUSES
                            would be set to 3

   BOARD_I2C_BUS_CLOCK_INIT - Initalization for the bus frequencies
                              by bus. A call init, with a frequency
                              less then the value used for the
                              Initalization will result in the device
                              not starting becuase the buss runs too
                              fast for it.",X,fast

"PX4-Autopilot
"," #489
",[281ee5e5afcbde6dbad46068cfae975cc216aa3e](https://github.com/PX4/PX4-Autopilot/commit/281ee5e5afcbde6dbad46068cfae975cc216aa3e),vmount: increase stack size,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #490
",[55a2930cdb1e3162751d78193400a0983131238c](https://github.com/PX4/PX4-Autopilot/commit/55a2930cdb1e3162751d78193400a0983131238c),vmount: reduce stack size to 1900 as recommended by @bkueng (maximum used memory observed: 1552),New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #491
",[83643a719ab472f1ddac0943c868c0f33399adfc](https://github.com/PX4/PX4-Autopilot/commit/83643a719ab472f1ddac0943c868c0f33399adfc),"nuttx config: increase CONFIG_NFILE_DESCRIPTORS from 53 to 54

This is needed when logger is logging to file and ulog streaming gets
activated.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #492
",[79f49fd851bf14d65c4b3b50bc37eca349883bef](https://github.com/PX4/PX4-Autopilot/commit/79f49fd851bf14d65c4b3b50bc37eca349883bef),"bugfix:px4fmu-v5 (STM32F7) random sd write failures

   This is a back port of upstream NuttX PX4 contrib of

   ef42c25 stm32f7:SDMMC add dcache alignment check in dma{recv|send}setup
                   In the where CONFIG_SDIO_PREFLIGHT is not used and dcache
                   write-buffed mode is used (not write-through) buffer alignment
                   is required for DMA transfers because a) arch_invalidate_dcache
                   could lose buffered writes data and b) arch_flush_dcache could
                   corrupt adjacent memory if the buffer and the bufflen, are not on
                   ARMV7M_DCACHE_LINESIZE boundaries.

   1e7ddfe  stm32f7:SDMMC remove widebus limitation on DMA
                    There is no documantation for the STM32F7 that limits DMA on
                    1 bit vrs 4 bit mode.

   dffab2f  stm32f7:DMA add dcache alignment check in stm32_dmacapable
                    In the case dcache write-buffed mode is used (not write-through)
                    buffer alignment is required for DMA transfers because
                    a) arch_invalidate_dcache could lose buffered writes data and
                    b) arch_flush_dcache could corrupt adjacent memory if the
                    maddr and the mend+1, the next next address are not on
                    ARMV7M_DCACHE_LINESIZE boundaries.

   38cbf1f  stm32f7:DMA correct comments and document stm32_dmacapable
            Updated comment to proper refernce manual for STM32F7 not STM32F4.
            Added stm32_dmacapable input paramaters documentation.",X,memory

"PX4-Autopilot
"," #493
",[a9b12cc8b40ba4b3c253d7922fb8377fdacf165a](https://github.com/PX4/PX4-Autopilot/commit/a9b12cc8b40ba4b3c253d7922fb8377fdacf165a),Changed the default behavior for the client launching as a infinite loop,X,infinite

"PX4-Autopilot
"," #494
",[fb7b33e75510a81620fc9b4189d1d0315ea1f1e1](https://github.com/PX4/PX4-Autopilot/commit/fb7b33e75510a81620fc9b4189d1d0315ea1f1e1),"Use updated micro-CDR with memory leak fix (#7838)

* Fixed memory leak (indicated by cppcheck) upstream",General:C:not_deallocating,memory

"PX4-Autopilot
"," #495
",[5f5dca480430bb9af3056768ae05b17e80af5f5d](https://github.com/PX4/PX4-Autopilot/commit/5f5dca480430bb9af3056768ae05b17e80af5f5d),"vdev: replace static list with an std::map

VDev::getDev() is used in px4_access, which is used in orb_exists. And if
the topic does not exist, it iterates over all 500 indexes, which is slow.
It was slow even if the topic existed, the map reduces runtime from linear
to logarithmic (there are around 80 items in the container).
This is only used on posix.",X,runtime

"PX4-Autopilot
"," #496
",[2b714e079b97976da1b6f633699f7b79f1c01389](https://github.com/PX4/PX4-Autopilot/commit/2b714e079b97976da1b6f633699f7b79f1c01389),"driver: vdev_posix, increase PX4_MAX_FD (#7905)

 - avoid ""exceeded maximum number of file descriptors"" when ""make posix gazebo_typhoon_h480""

 - closes #7892",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #497
",[9dc505150485fd6fe9fbdb70ac1643269b90f3c0](https://github.com/PX4/PX4-Autopilot/commit/9dc505150485fd6fe9fbdb70ac1643269b90f3c0),mc_pos_control auto: use current velocity if smaller than velocity setpoint when slowing down,X,slowing

"PX4-Autopilot
"," #498
",[540c0bdafb181b790136737041b7c443545665ab](https://github.com/PX4/PX4-Autopilot/commit/540c0bdafb181b790136737041b7c443545665ab),mc_pos_control: accelerate faster,X,faster

"PX4-Autopilot
"," #499
",[3f73a56f5a0af0810c86c9ccb4b4647c6001b00c](https://github.com/PX4/PX4-Autopilot/commit/3f73a56f5a0af0810c86c9ccb4b4647c6001b00c),mc_pos_control: accelerate faster in auto and increase speed at 90degrees angle,New:Hard-coded-fine-tuning,faster

"PX4-Autopilot
"," #500
",[807d45c99c3c224df4e3660494ecf7a4069ad0f5](https://github.com/PX4/PX4-Autopilot/commit/807d45c99c3c224df4e3660494ecf7a4069ad0f5),mc_pos_control slowing down close to target take over previous setpoint if low,X,slowing

"PX4-Autopilot
"," #501
",[19e7ba63eee330da07da68e4da650cb273534d98](https://github.com/PX4/PX4-Autopilot/commit/19e7ba63eee330da07da68e4da650cb273534d98),"param: use separate param save lock

param save is an expensive operation that can take several 100ms. And
previously it was possible that a param_get() caller was blocked on a
save operation. If this happened due to a param change notification,
important modules, such as sensors, could have been blocked for a longer
period (and affecting the flight performance).
With this patch, this situation is not possible anymore, because a param
save now uses the reader lock and a separate file lock.

However it is still possible that a param_set() needs to wait for a save
operation, thus blocking for a longer time. param_set() thus needs to be
avoided in important modules when the system is armed.
In the case of mavlink it works, since it does not affect the flight if
the mavlink receiver is blocked over a longer time. It is only problematic
if a joystick is used as input or in offboard control.",X,performance

"PX4-Autopilot
"," #502
",[d6df692b7a69460642f1efaad967538f8b6ef1c2](https://github.com/PX4/PX4-Autopilot/commit/d6df692b7a69460642f1efaad967538f8b6ef1c2),"param MPC_MAN_TILT_MAX: decrease maximum from 90 to 85 degrees

At 90 degrees the yaw is extremely unstable (tested with HIL), it
overshoots and only very slowly converges to the correct value.
This behavior is also noticable with lower angles, but not so extreme.
It definitely needs to be looked into further, but for now this makes it
safer.",New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #503
",[ea0dd5827bc69ef588654308f030881b9978c51c](https://github.com/PX4/PX4-Autopilot/commit/ea0dd5827bc69ef588654308f030881b9978c51c),"esc35-v1 nsh: increase CONFIG_NFILE_DESCRIPTORS from 53 to 54

   Updated to match master
   This is needed when logger is logging to file and ulog streaming gets
   activated",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #504
",[c2394053835fa8e5a56fae8debfbd4311555818c](https://github.com/PX4/PX4-Autopilot/commit/c2394053835fa8e5a56fae8debfbd4311555818c),"nxphlite-v3 nsh: increase CONFIG_NFILE_DESCRIPTORS from 53 to 54

   Updated to match master
   This is needed when logger is logging to file and ulog streaming gets
   activated",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #505
",[054d489b96948b05371d49e1885cb359d10bc432](https://github.com/PX4/PX4-Autopilot/commit/054d489b96948b05371d49e1885cb359d10bc432),"px4-stm32f4discovery nsh: increase CONFIG_NFILE_DESCRIPTORS from 53 to 54

   Updated to match master
   This is needed when logger is logging to file and ulog streaming gets
   activated",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #506
",[0f5c75b4c6d8dedce159cd1e14c27558f123ddd0](https://github.com/PX4/PX4-Autopilot/commit/0f5c75b4c6d8dedce159cd1e14c27558f123ddd0),"px4esc-v1 nsh: increase CONFIG_NFILE_DESCRIPTORS from 53 to 54

   Updated to match master
   This is needed when logger is logging to file and ulog streaming gets
   activated",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #507
",[4e86bc7620bb7aaf655cd84587ca855028ac8ad0](https://github.com/PX4/PX4-Autopilot/commit/4e86bc7620bb7aaf655cd84587ca855028ac8ad0),"px4nucleoF767ZI-v1 nsh: increase CONFIG_NFILE_DESCRIPTORS from 53 to 54

   Updated to match master
   This is needed when logger is logging to file and ulog streaming gets
   activated",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #508
",[72cdf1de12c5ef71bb650bf7ceb84cf2463bce01](https://github.com/PX4/PX4-Autopilot/commit/72cdf1de12c5ef71bb650bf7ceb84cf2463bce01),"sim nsh: increase CONFIG_NFILE_DESCRIPTORS from 53 to 54

   Updated to match master
   This is needed when logger is logging to file and ulog streaming gets
   activated",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #509
",[edd741ea76c802563bbdf1d23dcb50b056209baf](https://github.com/PX4/PX4-Autopilot/commit/edd741ea76c802563bbdf1d23dcb50b056209baf),"tap-v1 nsh: increase CONFIG_NFILE_DESCRIPTORS from 53 to 54

   Updated to match master
   This is needed when logger is logging to file and ulog streaming gets
   activated",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #510
",[4fdce9bf2172c5e35e46079ea0de5d7209d956b4](https://github.com/PX4/PX4-Autopilot/commit/4fdce9bf2172c5e35e46079ea0de5d7209d956b4),"px4-same70xplained-v1 nsh: increase CONFIG_NFILE_DESCRIPTORS from 53 to 54

   Updated to match master
   This is needed when logger is logging to file and ulog streaming gets
   activated",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #511
",[f83df2a9a6a27b4566ed6ddd8ee433529df673a3](https://github.com/PX4/PX4-Autopilot/commit/f83df2a9a6a27b4566ed6ddd8ee433529df673a3),"Updated nuttx submodule 7.22+

  Updated to latest upstream with PX4 contrib for STM32 I2C that
  fixes an hang in driver.",X,hang

"PX4-Autopilot
"," #512
",[bb71e47ddf5106587df83273364fbf451153ae05](https://github.com/PX4/PX4-Autopilot/commit/bb71e47ddf5106587df83273364fbf451153ae05),"Updated nuttx submoulde 7.22+ w/i2c fix ==px4_firmware_nuttx-master

   Latest nuttx 7.22+ with PX4 contrib for stm32 f4 I2C hang.",X,hang

"PX4-Autopilot
"," #513
",[55da07d3c42ac48f16c7a587ab42dcc73ef507d2](https://github.com/PX4/PX4-Autopilot/commit/55da07d3c42ac48f16c7a587ab42dcc73ef507d2),"mc_att_control: fix computation of yaw weight for attitude control

Previously, the yaw weight was based on the tilt angle of the attitude
setpoint (R_sp(2, 2) == cos(tilt angle)). This makes no sense, it means
the weight is low for high tilt angles even if there is no roll-pitch error
at all.

This patch changes the weight computation to be based on the tilt angle
error: the yaw weight is 1 if there is no roll-pitch error (independent
from current tilt angle), and is reduced for higher tilt angle errors.

The weight was added in 05e9a30573f50dd271f10, without any explanation or
derivation of how and why the weight is chosen that way.

However this patch works much better in practice. The yaw control is
improved, though it can be a bit slow to converge if you do continuous &
fast roll-pitch motions (which is expected).",X,slow

"PX4-Autopilot
"," #514
",[f5d9155ab29ffbb7413bd05b0e50567447cfc3f4](https://github.com/PX4/PX4-Autopilot/commit/f5d9155ab29ffbb7413bd05b0e50567447cfc3f4),"mc_att_control params: reduce default max acro rates from 360 to 120 deg/s

360 is too fast if you just want to hover. Next step is to add expo(),
so that we still have fine-grained control at the center and high rates
at the edges.",New:Hard-coded-fine-tuning,fast

"PX4-Autopilot
"," #515
",[98893c9f4f80de7eaa194adce09cfb5717b3b8df](https://github.com/PX4/PX4-Autopilot/commit/98893c9f4f80de7eaa194adce09cfb5717b3b8df),"mc_att_control params: increase max roll/pitch/yaw rates to 1800

If you want to go to the limit of what the vehicle can do, you need to be
able to set it so large that it is guaranteed that it's never limited by
software.

Tests showed that it's not a problem to increase it to very high numbers.",General:Lack_of_documentation,increase

"PX4-Autopilot
"," #516
",[29e85edac8311ccd6de5db63c3436a9e2d12da31](https://github.com/PX4/PX4-Autopilot/commit/29e85edac8311ccd6de5db63c3436a9e2d12da31),"Revert ""param MPC_MAN_TILT_MAX: decrease maximum from 90 to 85 degrees""

This reverts commit d6df692b7a69460642f1efaad967538f8b6ef1c2.

The changes to attitude controller improve this a lot.",New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #517
",[2246b54e2bf9a41afb6323434fefc7bd190e549a](https://github.com/PX4/PX4-Autopilot/commit/2246b54e2bf9a41afb6323434fefc7bd190e549a),FMUv5: Increase USB buffer to increase transfer rates,"New:Hard-coded-fine-tuning
New:Fixed_Communication_Rate",increase

"PX4-Autopilot
"," #518
",[791e420d420e005154c6c66e531bad68e2ee99f8](https://github.com/PX4/PX4-Autopilot/commit/791e420d420e005154c6c66e531bad68e2ee99f8),increase max num params per block because of ekf2,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #519
",[d096ec0b6107cea5a7c0c34e41e207f53ad66ea7](https://github.com/PX4/PX4-Autopilot/commit/d096ec0b6107cea5a7c0c34e41e207f53ad66ea7),"vdev_posix: change filemap into a static list of objects instead of pointers

to avoid dynamic memory allocations & frees (specifically in orb_exists)",X,memory

"PX4-Autopilot
"," #520
",[d930ad4e9e50007505ab8d6f8c5e2a4faf8d1b76](https://github.com/PX4/PX4-Autopilot/commit/d930ad4e9e50007505ab8d6f8c5e2a4faf8d1b76),"mavlink_orb_subscription: reduce orb_exists() check from 10Hz to 3Hz

Checking with 3Hz for new topics should be fast enough.","New:Hard-coded-fine-tuning
New:Fixed_Communication_Rate
Smith:Is_Everything_OK",fast

"PX4-Autopilot
"," #521
",[44839208f747c5b1eba95103983dacefc3281b76](https://github.com/PX4/PX4-Autopilot/commit/44839208f747c5b1eba95103983dacefc3281b76),"jmavsim_run.sh: add more aggressive GC option

This reduces memory usage by roughly 100MB on my laptop",New:Hard-coded-timing,memory

"PX4-Autopilot
"," #522
",[b569a8c2b9f6cc1a6f3b5d440f43f0519a744f08](https://github.com/PX4/PX4-Autopilot/commit/b569a8c2b9f6cc1a6f3b5d440f43f0519a744f08),fw_pos_control_l1 increase stack by 110 Bytes (#8348),New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #523
",[4f5d70bbe55af9d0a38a2c19d410789ccc7d7369](https://github.com/PX4/PX4-Autopilot/commit/4f5d70bbe55af9d0a38a2c19d410789ccc7d7369),Increase fixed-wing l1 navigation radius limit,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #524
",[66d4a1b3fd5cae58b67ace2d4a1860d06cd9937c](https://github.com/PX4/PX4-Autopilot/commit/66d4a1b3fd5cae58b67ace2d4a1860d06cd9937c),Jenkins increase timeout to 30 minutes for now,"New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #525
",[f63c8218e48eed6614dffc4c343a3d3ffca7f1e0](https://github.com/PX4/PX4-Autopilot/commit/f63c8218e48eed6614dffc4c343a3d3ffca7f1e0),Jenkins increase test timeout,"New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #526
",[fedc9abb02d8fdc558c05f3d87c5d3cb7bf30350](https://github.com/PX4/PX4-Autopilot/commit/fedc9abb02d8fdc558c05f3d87c5d3cb7bf30350),vtol_att_control increase stack by 30 Bytes (1200 -> 1230),New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #527
",[ddc544aabe80ae1266d9becf97d49c71079f2dcc](https://github.com/PX4/PX4-Autopilot/commit/ddc544aabe80ae1266d9becf97d49c71079f2dcc),Jenkinsfile parallel builds fail fast,X,fast

"PX4-Autopilot
"," #528
",[86ad2ada71360baa7d8f6817dce8416770465f9b](https://github.com/PX4/PX4-Autopilot/commit/86ad2ada71360baa7d8f6817dce8416770465f9b),"Jenkins remove fast fail

 - this saves build resources, but makes finding the actual failure rather hard (with the current blue ocean gui).",X,fast

"PX4-Autopilot
"," #529
",[eeff52cda7e7be5b1393ecaba3c4e6069c2e5590](https://github.com/PX4/PX4-Autopilot/commit/eeff52cda7e7be5b1393ecaba3c4e6069c2e5590),"uorb_graph: add .gitignore, change graph file for sitl runtime config",X,runtime

"PX4-Autopilot
"," #530
",[ec57832a8fc2e848264ecb56c402916eff0ee655](https://github.com/PX4/PX4-Autopilot/commit/ec57832a8fc2e848264ecb56c402916eff0ee655),FW land detector increase trigger time and cleanup (#8486),"New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #531
",[f69a6af9899a280ff6ce9960fee901defbb9bbc9](https://github.com/PX4/PX4-Autopilot/commit/f69a6af9899a280ff6ce9960fee901defbb9bbc9),Commander: increase stack to ensure enough margin remains,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #532
",[2eb3392c39cba63fa9afb7d8b471c9daad64d3fc](https://github.com/PX4/PX4-Autopilot/commit/2eb3392c39cba63fa9afb7d8b471c9daad64d3fc),PWM out sim: Increase stack as needed,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #533
",[c8a1050323c89f8e776c1ad5f3689505d7130710](https://github.com/PX4/PX4-Autopilot/commit/c8a1050323c89f8e776c1ad5f3689505d7130710),libled: allow infinite flashing mode,New:Hard-coded-fine-tuning,infinite

"PX4-Autopilot
"," #534
",[976b890c56f2028d33a86ad5f5ea19366eb49c9d](https://github.com/PX4/PX4-Autopilot/commit/976b890c56f2028d33a86ad5f5ea19366eb49c9d),commander increase stack by 90 bytes (3160 -> 3250),New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #535
",[0b9025b2d228e899625b2975efa79250efe2dcca](https://github.com/PX4/PX4-Autopilot/commit/0b9025b2d228e899625b2975efa79250efe2dcca),"px4fmu-v2: Build individual distance sensors

We are running out of flash memory in px4fmu-v2 so removing all the
distance sensors from binary and adding then individually.
Right now only LeddarOne is not being buid.",X,memory

"PX4-Autopilot
"," #536
",[4bf1980ff64ab49f50a9e57219b6032dd8b7b706](https://github.com/PX4/PX4-Autopilot/commit/4bf1980ff64ab49f50a9e57219b6032dd8b7b706),"MC_ROLL_P, MC_PITCH_P: increase maximum value to 12

- use the same value for both
- lower control latency allows increasing these gains",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #537
",[40675bd1f432490d76a5fe741572c28510f1d8c3](https://github.com/PX4/PX4-Autopilot/commit/40675bd1f432490d76a5fe741572c28510f1d8c3),"logger: fix potential semaphore counter overflow

When the timer callback is called at a higher rate than the logger can
execute the main loop (which is never the case under normal conditions),
the semaphore counter will increase unbounded, and eventually lead to
an assertion failure in NuttX.
The maximum semaphore counter is 0x7FFF, and when the logger runs at
default rate (3.5ms), the logger task must be blocked for 0x7FFF*3.5/1000
= 114 seconds continuously for an overflow to happen.

I see 2 cases where that could happen:
- the logger execution blocks somehow, or busy-loops in an inner loop
- a higher-prio task runs busy and hogs the CPU over a long period of time",X,increase

"PX4-Autopilot
"," #538
",[bf097d7fa4fcc7a1f35951e4e3180171e8bfad25](https://github.com/PX4/PX4-Autopilot/commit/bf097d7fa4fcc7a1f35951e4e3180171e8bfad25),"convergence config: increase idle speed in mc mode

- this makes sure that all motors are idling in mc mode. having this too
low can lead to a motor stopping in flight which is critical for
attitude control
- experienced loss of attitude control in RTL during descent prior to this
change

Signed-off-by: Roman <bapstroman@gmail.com>",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #539
",[5a7885610d4a70e99864cdb8e7c9bf7aaa05256c](https://github.com/PX4/PX4-Autopilot/commit/5a7885610d4a70e99864cdb8e7c9bf7aaa05256c),"fmu: fix PPM publication if RC_SERIAL_PORT is not defined

Before, the RC channel was published as fast as the fmu was running
(around 200Hz in unarmed state).

And fix code style.",X,fast

"PX4-Autopilot
"," #540
",[ff66605a8a09d4c6034dcf2988cea34038650bba](https://github.com/PX4/PX4-Autopilot/commit/ff66605a8a09d4c6034dcf2988cea34038650bba),Fix: Increase pwmsim module stack by 100 bytes again because load_mon was giving warning about low stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #541
",[2bcc5cf3e58a5f29ca13b025e28bb64627a5d04b](https://github.com/PX4/PX4-Autopilot/commit/2bcc5cf3e58a5f29ca13b025e28bb64627a5d04b),"imu filter defaults: set IMU_GYRO_CUTOFF to 80 and MC_DTERM_CUTOFF to 30

tested on at least 5 different vehicles, including AeroFC. The values
should be conservative, good setups (with low vibrations) can increase
these values even further.

increasing IMU_GYRO_CUTOFF allows for better tuning gains (increased P).",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #542
",[cb30d66cefee4052e3fcc7b37fa919967175779b](https://github.com/PX4/PX4-Autopilot/commit/cb30d66cefee4052e3fcc7b37fa919967175779b),"convergence config: increase multirotor idle speed

- increase the minimum pwm value for multirotor mode since we experienced
the rear motor stalling in certain situations when throttle was low

Signed-off-by: Roman <bapstroman@gmail.com>",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #543
",[b5aded0db2c680ce8e95260c6cc6b69c69d3975d](https://github.com/PX4/PX4-Autopilot/commit/b5aded0db2c680ce8e95260c6cc6b69c69d3975d),update vtol mission tests to increase length,X,increase

"PX4-Autopilot
"," #544
",[01340df54521f06dc4a69070abd34cda9b941efc](https://github.com/PX4/PX4-Autopilot/commit/01340df54521f06dc4a69070abd34cda9b941efc),"Jenkins cleanup build creation

 - cleanup workspace when done and increase retention",X,increase

"PX4-Autopilot
"," #545
",[8a4d51c630fc7d09842464cd79efa7b9e5995666](https://github.com/PX4/PX4-Autopilot/commit/8a4d51c630fc7d09842464cd79efa7b9e5995666),FlightTasks: replaced all hrt_elapsed() calls and unneeded hrt_ calls to safe performance,Smith:General:How_Many_Times_Do_I_Have_to_Tell_You,performance

"PX4-Autopilot
"," #546
",[b5ecf9824d9dd7db7e9709dac614af64906626a3](https://github.com/PX4/PX4-Autopilot/commit/b5ecf9824d9dd7db7e9709dac614af64906626a3),"flight tasks: use placement new to reduce memory overhead and the need for dynamic allocations

In addition, we will need some shared data structure for the uorb
subscriptions.",X,memory

"PX4-Autopilot
"," #547
",[2b6e356c9175743f4b43c425ad527da4a4e361ab](https://github.com/PX4/PX4-Autopilot/commit/2b6e356c9175743f4b43c425ad527da4a4e361ab),FlightTaskManual: fix for the sideways oscillations in fast foward flight when using the vehicle yaw estimate,X,fast

"PX4-Autopilot
"," #548
",[59f3de192f8c553a45aa8f1c54c1ee840df57d60](https://github.com/PX4/PX4-Autopilot/commit/59f3de192f8c553a45aa8f1c54c1ee840df57d60),ManualSmoothingXY: velocity as criteria for direction change to prenvent fast acceleration at low spped,X,fast

"PX4-Autopilot
"," #549
",[7ac3c97aad041bd38b601db33d0f905a91878014](https://github.com/PX4/PX4-Autopilot/commit/7ac3c97aad041bd38b601db33d0f905a91878014),"Improve the Crazyflie MAVLink tunnel to increase efficiency

This change fragments MAVLink packets more efficiently and therefore increases the net throughput. This in turn makes the connection significantly more stable and the Crazyflie experience overall more usable.","New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #550
",[da57dbbce0c6985a51bba156d72d6a833d4bcac1](https://github.com/PX4/PX4-Autopilot/commit/da57dbbce0c6985a51bba156d72d6a833d4bcac1),Increase the MavLink module stack size,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #551
",[c16e17f47b5ac50c72ca90c37ac6a5936f782027](https://github.com/PX4/PX4-Autopilot/commit/c16e17f47b5ac50c72ca90c37ac6a5936f782027),mag_calibration: only allocate as much memory as needed,General:Hard-coding,memory

"PX4-Autopilot
"," #552
",[e7e791fb1a9a8b06e33f58661bbf03dab080c622](https://github.com/PX4/PX4-Autopilot/commit/e7e791fb1a9a8b06e33f58661bbf03dab080c622),"tailsitter: use forward transition throttle for climb-rate controlled mode

- the mc pos controller will decrease throttle during the transition
and thus the vehicle will not pick up enough airspeed to complete the
transition

Signed-off-by: Roman <bapstroman@gmail.com>",X,decrease

"PX4-Autopilot
"," #553
",[694df08b37fa14b520ad3b61f8bcb924926e3d9b](https://github.com/PX4/PX4-Autopilot/commit/694df08b37fa14b520ad3b61f8bcb924926e3d9b),"posix-configs: better tailsitter front transition parameters

- reduce height increase during front transition

Signed-off-by: Roman <bapstroman@gmail.com>",X,increase

"PX4-Autopilot
"," #554
",[7fa91ad3dd29816ff11bd85103b67604fdeb5f9f](https://github.com/PX4/PX4-Autopilot/commit/7fa91ad3dd29816ff11bd85103b67604fdeb5f9f),"posix-configs: increase tailsitter land speed

Signed-off-by: Roman <bapstroman@gmail.com>",X,increase

"PX4-Autopilot
"," #555
",[58c757a9db1b93051416f4919df7adb4d92db410](https://github.com/PX4/PX4-Autopilot/commit/58c757a9db1b93051416f4919df7adb4d92db410),"mc_att_control_params: increase max acro rates to 1800

This matches the maximum rates for the attitude controller.",X,increase

"PX4-Autopilot
"," #556
",[f2703abce0f3f689f3791ea6534e6c469df7e6d9](https://github.com/PX4/PX4-Autopilot/commit/f2703abce0f3f689f3791ea6534e6c469df7e6d9),"top: increase process priority to 255

Helps debugging busy-looping tasks.",General:Hard-coding,increase

"PX4-Autopilot
"," #557
",[f49fd2acc75608bc9962897435ab84f4d57e35c6](https://github.com/PX4/PX4-Autopilot/commit/f49fd2acc75608bc9962897435ab84f4d57e35c6),crazyflie: increase imu reading rate,"New:Fixed_Communication_Rate
New:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #558
",[8b54346d52c4b3af9893b95b329fe1896e4104fd](https://github.com/PX4/PX4-Autopilot/commit/8b54346d52c4b3af9893b95b329fe1896e4104fd),mpu9250: decrease sampling rate when using i2c,"New:Hard-coded-fine-tuning
New:Fixed_Communication_Rate",decrease

"PX4-Autopilot
"," #559
",[384028aa7bae5e2461739caf2ba5add3aba66d4d](https://github.com/PX4/PX4-Autopilot/commit/384028aa7bae5e2461739caf2ba5add3aba66d4d),decrease rollrate P gain due to gimbal oscillations,New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #560
",[aee05d0ac5dae6aae0827210b5ca1d87abbf3cc9](https://github.com/PX4/PX4-Autopilot/commit/aee05d0ac5dae6aae0827210b5ca1d87abbf3cc9),FMU: Increase stack space as needed (shown by instrumentation) to retain a 300 bytes buffer.,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #561
",[a76c82f5f2e8455cd1db36b3145357b1d3f04221](https://github.com/PX4/PX4-Autopilot/commit/a76c82f5f2e8455cd1db36b3145357b1d3f04221),"airframes: update 4050 generic 250 racer defaults

- P and D gains are too high for a racer
- default I gain is too low (0.25 is still quite low)
- use the thrust curve param instead of TPA
- improve responsiveness in Manual & increase max tilt angle to 60 degrees
- enable one-shot
- enable high-rate logging profile
- disable RC filter",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #562
",[fc29e789781f62880ae998fdcc35068cc5f19c23](https://github.com/PX4/PX4-Autopilot/commit/fc29e789781f62880ae998fdcc35068cc5f19c23),"Update submodule ecl to latest Sat Jun  9 15:26:38 CDT 2018

    - ecl in PX4/Firmware (f7937d783496e954efc52439148ef66824d9c80a): https://github.com/PX4/ecl/commit/1fdf33b343e361de6410515a0359f3cb7f34d499
    - ecl current upstream: https://github.com/PX4/ecl/commit/d177e96508d2572f6fa8eb7ff41852749c882548
    - Changes: https://github.com/PX4/ecl/compare/1fdf33b343e361de6410515a0359f3cb7f34d499...d177e96508d2572f6fa8eb7ff41852749c882548

    d177e96 2018-06-08 Paul Riseborough - EKF: Fix bug causing slow drift when high rate flow data is used
ee2dc7d 2018-05-30 Paul Riseborough - EKF: Rework optical flow selection logic
e383b6a 2018-05-29 Paul Riseborough - EKF: rework optical flow selection logic
487e6a0 2018-05-28 Paul Riseborough - EKF: enable user selection of auto mag free operation
6bdbe03 2018-05-28 Paul Riseborough - EKF: Fallback to optical flow for all in-flight loss of navigation scenarios
b4d2b8c 2018-05-19 Mohammed Kabir - EKF : introduce new architechture for navigation limits
8a71339 2018-05-19 Paul Riseborough - EKF: Improve ground effect compensation
39697f1 2018-05-18 Paul Riseborough - EKF: rework optical flow switching
1cfe845 2018-05-18 Paul Riseborough - EKF: rework GPS quality check
99a8038 2018-05-18 Paul Riseborough - EKF: improve optical flow GPS quality checking
7f36add 2018-05-18 Paul Riseborough - EKF: scale GPS vertical accuracy check when using optical flow
fc9f532 2018-05-18 Paul Riseborough - EKF: relax range finder data continuity check
93c456f 2018-05-18 Paul Riseborough - EKF: Improve protection against badly conditioned dVel bias covariances
225057a 2018-05-18 Paul Riseborough - EKF: Fix bug preventing use of terrain estimator
adb4a09 2018-05-17 Paul Riseborough - EKF: Fix bug causing large yaw innovations when GPS is lost
f59cd0f 2018-05-16 Paul Riseborough - EKF: Don't make detection of indoor operation dependent on optical flow
1562a82 2018-05-16 Paul Riseborough - EKF: Add parameter to adjust on-ground movement detector sensitivity
ea9e824 2018-05-16 Paul Riseborough - EKF: Improve detection of indoor flight condition
565f992 2018-05-16 Paul Riseborough - EKF: Reduce effect of yaw gyro bias when using optical flow indoors
e10798b 2018-05-16 Paul Riseborough - EKF: Add on ground movement detector
2d3b652 2018-05-15 Paul Riseborough - EKF: Reset yaw gyro bias learning when resuming use of magnetometer
8191068 2018-05-15 Paul Riseborough - EKF: Don't start using mag if optical flow use is interrupted
4889e84 2018-05-15 Paul Riseborough - EKF: Don't fuse multi rotor drag if yaw angle is bad
092a8d8 2018-05-15 Paul Riseborough - EKF: Fix GPS validity time check error
0160aaa 2018-05-15 Paul Riseborough - EKF: Don't use magnetometer with optical flow only nav if GPS checks are failing
8451676 2018-05-14 Paul Riseborough - EKF: Use stricter GPS accuracy test when optical flow is being used
a80b3ab 2018-05-27 Daniel Agar - set MODULE define for each library",X,slow

"PX4-Autopilot
"," #563
",[753ad0e0dff612a424652d8dfcaff397dfd903de](https://github.com/PX4/PX4-Autopilot/commit/753ad0e0dff612a424652d8dfcaff397dfd903de),Fixed-wing autoland: Fix bug that could cause a steep pitch increase and thus aircraft stall during the flare (#9674),X,increase

"PX4-Autopilot
"," #564
",[84841236cbe26fdfdcd9ac05af93ad8bd0c9f45a](https://github.com/PX4/PX4-Autopilot/commit/84841236cbe26fdfdcd9ac05af93ad8bd0c9f45a),"mavlink: allow resetting mavlink streams to default via MAV_CMD_SET_MESSAGE_INTERVAL

This implementation does not need more resources.
It's not super efficient in terms of runtime, but it's also not something
that is called often.",X,runtime

"PX4-Autopilot
"," #565
",[bb8e653469e67afb43dbb9ecf3899cf50ef6162f](https://github.com/PX4/PX4-Autopilot/commit/bb8e653469e67afb43dbb9ecf3899cf50ef6162f),"mc_att_control: keep integral enabled based on land detector

Previously the rate controller disabled updating the integral below 20%
throttle. This is not ideal for several reasons:
- some racers already hover with 20% throttle.
- for acro it is important to always keep the integral enabled, it has a
  noticeable effect on flight performance.",X,performance

"PX4-Autopilot
"," #566
",[8825bbed298a234087db2410393553cd491f1da8](https://github.com/PX4/PX4-Autopilot/commit/8825bbed298a234087db2410393553cd491f1da8),Increase the stack size for the IridiumSBD driver,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #567
",[a76c4c55d43122b769b9e114e1c0b39ba06e7147](https://github.com/PX4/PX4-Autopilot/commit/a76c4c55d43122b769b9e114e1c0b39ba06e7147),"Decrease default flare altitude. The previous value was way too high for any small aircraft. It was also unsafe because after the flar, pitch is currently controlled open-loop, which means that stall can potentially happen during the flare",New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #568
",[74c20a0fd536e1b8725c4e91a3ba28c6baf9ecce](https://github.com/PX4/PX4-Autopilot/commit/74c20a0fd536e1b8725c4e91a3ba28c6baf9ecce),ADIS16477 reset on init and increase delay,"New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #569
",[1feccfcc817220707adec19486ac03a649a9d2e9](https://github.com/PX4/PX4-Autopilot/commit/1feccfcc817220707adec19486ac03a649a9d2e9),"frsky_telemetry: increase stack size by 52 bytes

As indicated in previous logs (268 bytes left).",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #570
",[21cc34befbf18c52d4f9add0466044592638d89e](https://github.com/PX4/PX4-Autopilot/commit/21cc34befbf18c52d4f9add0466044592638d89e),GPS driver increase stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #571
",[e1a74727389a9e3abf1021128960476fe72eea71](https://github.com/PX4/PX4-Autopilot/commit/e1a74727389a9e3abf1021128960476fe72eea71),"MavlinkOrbSubscription::update: improve performance & fix corner case

- reorders operations, such that the most expensive one (orb_copy) is done
  only when really needed.
- corner case: when the topic was not advertised yet, orb_stat() would fail
  and then update() was called, which succeeds for the first advertisement.
  In that case the timestamp was incorrectly set to 0 and true was
  returned.
  The next call would again return true, because the timestamp was updated,
  but the topic data was still the same.

Reduces CPU load by ~2% on a Pixracer.",Smith:General:Unnecessary_Processing,performance

"PX4-Autopilot
"," #572
",[9362f844f498dd41ae26889570f7fd1d9555867f](https://github.com/PX4/PX4-Autopilot/commit/9362f844f498dd41ae26889570f7fd1d9555867f),"position control: fix failsafe thrust

invert direction to point upwards and increase to 70% of throttle range between min and hover",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #573
",[1db1155697d8ea7ff9a33d82401df39290a11d5a](https://github.com/PX4/PX4-Autopilot/commit/1db1155697d8ea7ff9a33d82401df39290a11d5a),"px4fmu-v5:Comment and define SAFETY LED and Button so FMU can use

  Safety Switch is HW version dependent on having an PX4IO
  So we init to a benign state with the _INIT definition
  and provide the the non _INIT one for the driver to make a run time
  decision to use it.

  We also define the FMU GPIO_BTN_SAFETY and GPIO_LED_SAFETY alias
  so the px4fmu will drrive will be built with the safety switch
  code at compile time and have runtime control via the manifest",X,runtime

"PX4-Autopilot
"," #574
",[3ea3c1f537171a9a790a2b18384b4d1ec1bf0523](https://github.com/PX4/PX4-Autopilot/commit/3ea3c1f537171a9a790a2b18384b4d1ec1bf0523),"px4fmu-v5:Runtime Safety LED support.

   Safety Switch is HW version dependent on having an PX4IO
   So we init to a benign state with the _INIT definition
   and use the non _INIT verion in the driver if the run time
   decision is we do not have a PX4IO",X,runtime

"PX4-Autopilot
"," #575
",[fc16dce8f1856f9b9ae26e32bc0e65d15dde7a70](https://github.com/PX4/PX4-Autopilot/commit/fc16dce8f1856f9b9ae26e32bc0e65d15dde7a70),"spektrum_rssi: initialize rssi lookup as constexpr

Rather than initializing the rssi percentage lookup table at runtime
on the heap, we would like it to be stored in flash.

This change pre-computes the rssi lookup table.",X,runtime

"PX4-Autopilot
"," #576
",[7753dd4b4e5a8e72caede3a1c066ee9d9c1de347](https://github.com/PX4/PX4-Autopilot/commit/7753dd4b4e5a8e72caede3a1c066ee9d9c1de347),"refactor uorb: inline orb_publish_auto

It is a very small core function that needs to be fast.",X,fast

"PX4-Autopilot
"," #577
",[c6190093645b5e926cfb66dfb91e8062c8ffb4d1](https://github.com/PX4/PX4-Autopilot/commit/c6190093645b5e926cfb66dfb91e8062c8ffb4d1),"FlightTask StraightLine: replace powf(x,2) with x*x

Apparently this is faster",X,faster

"PX4-Autopilot
"," #578
",[d7b2b48baddfea9a65fbd30ed3312aab660836a0](https://github.com/PX4/PX4-Autopilot/commit/d7b2b48baddfea9a65fbd30ed3312aab660836a0),tap_esc increase stack 1100 -> 1180 bytes,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #579
",[0069141ffc38f277f53a20860e2ab5a9bfc0e476](https://github.com/PX4/PX4-Autopilot/commit/0069141ffc38f277f53a20860e2ab5a9bfc0e476),px4fmu increase actuator controls poll timeout,"New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #580
",[00ebffb0dd9796a6dea0d24b82a0c33159316041](https://github.com/PX4/PX4-Autopilot/commit/00ebffb0dd9796a6dea0d24b82a0c33159316041),"uorb tests: run at max priority & increase stack size

- running at max priority significantly decreases jitter for the latency
  test, providing more consistent results
- stack size increase is required for the latency test",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #581
",[e989c80205e22d11e5346bda3d11f90cdf294dfc](https://github.com/PX4/PX4-Autopilot/commit/e989c80205e22d11e5346bda3d11f90cdf294dfc),"replay: fix potential invalid memory access

_subscriptions is a vector that is resized when needed. However there could
still be references to elements in the vector when the resize happens.
These references then become invalid.
Using a vector of pointers fixes that.",X,memory

"PX4-Autopilot
"," #582
",[9551dcb49714c6783b449774f81af4287ade05d5](https://github.com/PX4/PX4-Autopilot/commit/9551dcb49714c6783b449774f81af4287ade05d5),logger increase log_writer_file stack 1072 -> 1150,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #583
",[f414d0c41377e7846a7e5b7d23e9266f3f27e08d](https://github.com/PX4/PX4-Autopilot/commit/f414d0c41377e7846a7e5b7d23e9266f3f27e08d),SYS_COMPANION: add 1500000 baud to metadata & increase the data rate,"New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #584
",[30fb82d9b4157b74c741ec7e1e16d7408e5dfa3f](https://github.com/PX4/PX4-Autopilot/commit/30fb82d9b4157b74c741ec7e1e16d7408e5dfa3f),"fmu-v5 defconfig: increase USART3 from 1500 to 3000

This is needed for companions with high baudrate and high data rate.
Tested with 1500000 Baudrate and mavlink TX rate of ~120KB/s: no drops.

I did not test the exact limit, something like 2500 might be enough. But
we (still) have enough free RAM on FMU-v5.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #585
",[e356fd89b01d5c120f090e114c0048c620daa491](https://github.com/PX4/PX4-Autopilot/commit/e356fd89b01d5c120f090e114c0048c620daa491),"CI mission tests add FW and cleanup (#10250)

* jenkins: decrease VTOL mission alt and FW mission use simple land wps

* startup: decrease min airspeed scaling factor for landing

* jenkins: FW mission include loiter_to_alt cmd",X,decrease

"PX4-Autopilot
"," #586
",[a24fdb93c38cdedc91041bdc81238815b9d4b023](https://github.com/PX4/PX4-Autopilot/commit/a24fdb93c38cdedc91041bdc81238815b9d4b023),FlightTaskManual: increase rc timeout to 1.5 x COM_RC_LOSS_T,"New:Hard-coded-timing
General:Hard-coding",increase

"PX4-Autopilot
"," #587
",[4f2aa517679bf442adf2b506b2ae7784cabf0a6e](https://github.com/PX4/PX4-Autopilot/commit/4f2aa517679bf442adf2b506b2ae7784cabf0a6e),"px4_impl_os:Use the defconfig CONFIG_ARMV7M_STACKCHECK

  To enable coherent runtime stack checking use the boards
  CONFIG_ARMV7M_STACKCHECK setting",X,runtime

"PX4-Autopilot
"," #588
",[1b6e933176cf0e011f9f8a720b9007654997e082](https://github.com/PX4/PX4-Autopilot/commit/1b6e933176cf0e011f9f8a720b9007654997e082),"Make.defs.in:Runtime Stack Checking in Nuttx Build

  Use CONFIG_ARMV7M_STACKCHECK to add the instrumentation
  for runtime stack checking",X,runtime

"PX4-Autopilot
"," #589
",[ac298664c7f451f13f938b900e6a463fd39b58ef](https://github.com/PX4/PX4-Autopilot/commit/ac298664c7f451f13f938b900e6a463fd39b58ef),nuttx-configs increase idle thread stack size to 750 bytes,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #590
",[b75fa645cef4c3cafb0a44a0c253423cad5c8231](https://github.com/PX4/PX4-Autopilot/commit/b75fa645cef4c3cafb0a44a0c253423cad5c8231),bmp280 increase MAIN stack,General:Hard-coding,increase

"PX4-Autopilot
"," #591
",[2dd71fa73c76977f3a68ebd98cd82000f9d32d4c](https://github.com/PX4/PX4-Autopilot/commit/2dd71fa73c76977f3a68ebd98cd82000f9d32d4c),mpu6000 increase MAIN stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #592
",[1a0472dfab6d3d62e38f3aeeca6962084e8e1d8a](https://github.com/PX4/PX4-Autopilot/commit/1a0472dfab6d3d62e38f3aeeca6962084e8e1d8a),sensors increase MAIN stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #593
",[ea73284a1fce0a43ac757200da2530743f6f2a95](https://github.com/PX4/PX4-Autopilot/commit/ea73284a1fce0a43ac757200da2530743f6f2a95),uORB tests increase stack sizes,X,increase

"PX4-Autopilot
"," #594
",[6abd0c2672db415b5f62dc36942e58f84a08ae7e](https://github.com/PX4/PX4-Autopilot/commit/6abd0c2672db415b5f62dc36942e58f84a08ae7e),BMI055 increase MAIN stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #595
",[ee90eb6c92b03c27f6a123f5c36d2df9b9bedc7e](https://github.com/PX4/PX4-Autopilot/commit/ee90eb6c92b03c27f6a123f5c36d2df9b9bedc7e),IST8310 increase MAIN stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #596
",[2dbc95382edf08eb125e775b6fc69dc545e019c0](https://github.com/PX4/PX4-Autopilot/commit/2dbc95382edf08eb125e775b6fc69dc545e019c0),rgbled increase MAIN stack,General:Hard-coding,increase

"PX4-Autopilot
"," #597
",[d6fd1c48115c8849d593216e65de4983a40ebda3](https://github.com/PX4/PX4-Autopilot/commit/d6fd1c48115c8849d593216e65de4983a40ebda3),rgbled_pwm increase MAIN stack,General:Hard-coding,increase

"PX4-Autopilot
"," #598
",[d7580aa676b502b755281a0c7a7e5780b1df9066](https://github.com/PX4/PX4-Autopilot/commit/d7580aa676b502b755281a0c7a7e5780b1df9066),px4fmu-v5 increase CONFIG_USERMAIN_STACKSIZE slightly,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #599
",[3996ab1fc551140dc91b7d92500662ca98d00e0b](https://github.com/PX4/PX4-Autopilot/commit/3996ab1fc551140dc91b7d92500662ca98d00e0b),frsky_telemetry increase MAIN stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #600
",[066ca50ddff7d0552437ad9909b4ae04e5b0a5d9](https://github.com/PX4/PX4-Autopilot/commit/066ca50ddff7d0552437ad9909b4ae04e5b0a5d9),"mission test temporarily increase landed timeout 60s -> 120s (#10596)

 - revert once #10590 is resolved properly",X,increase

"PX4-Autopilot
"," #601
",[72f85e4b2d9addf893aeee24e778855ed7054d65](https://github.com/PX4/PX4-Autopilot/commit/72f85e4b2d9addf893aeee24e778855ed7054d65),"ekf2: Handle blending of dissimilar rate GPS data (#10570)

A filtered update update interval is calculated for each receiver.

If dissimilar interval data is detected, blending occurs when data is received from the slower of the receivers.

If similar interval data is detected, blending occurs when receiver data with similar time stamps is available.

If no data is received from either receiver for longer than 300msec, then no blending will be performed and the most recent data will be used instead.",New:unstable_and_slow_noise_handling,slower

"PX4-Autopilot
"," #602
",[b83cb795960c7ad752586f74b60cac7231bb7d39](https://github.com/PX4/PX4-Autopilot/commit/b83cb795960c7ad752586f74b60cac7231bb7d39),"Update submodule DriverFramework to latest Sun Sep 30 08:37:23 EDT 2018 (#10604)

    - DriverFramework in PX4/Firmware (1ce7e8d89a16262afe07d7487e55a2ec05985627): https://github.com/PX4/DriverFramework/commit/721ace3e797f141f0950144bace6a30f6aa1325a

    - DriverFramework current upstream: https://github.com/PX4/DriverFramework/commit/9f456acb3c8d70df3cd8906123388935dd6303f6

    - Changes: https://github.com/PX4/DriverFramework/compare/721ace3e797f141f0950144bace6a30f6aa1325a...9f456acb3c8d70df3cd8906123388935dd6303f6



    9f456ac 2018-09-30 Bart Slinger - Increase DriverFramework priority to SCHED_PRIORITY_MAX",General:Hard-coding,increase

"PX4-Autopilot
"," #603
",[6647471238280fae789927f451e15258a286159a](https://github.com/PX4/PX4-Autopilot/commit/6647471238280fae789927f451e15258a286159a),"ekf2: increase maximum of EKF2_MAG_YAWLIM. This is needed on some fw platforms
in order to not constantly switch mag fusion mode in gusty winds.",X,increase

"PX4-Autopilot
"," #604
",[d6e820fe671922813d17ac190a6bd2232ea61c6f](https://github.com/PX4/PX4-Autopilot/commit/d6e820fe671922813d17ac190a6bd2232ea61c6f),"logger: add mission file to LogWriterFile backend

Not used yet, it should not affect anything, except for slight RAM
increase.",X,increase

"PX4-Autopilot
"," #605
",[234ec7f2a21d408251784b8653bd42f2803db530](https://github.com/PX4/PX4-Autopilot/commit/234ec7f2a21d408251784b8653bd42f2803db530),"logger: add mission log to frontend, configurable via SDLOG_MISSION

- mission logs are stored in a separate directory mission_log
- It's disabled by default
- Does not increase RAM usage if disabled (if enabled, only 300 bytes)
- Log rotate does not apply to the mission logs",X,increase

"PX4-Autopilot
"," #606
",[95cc6a06f310061c3261bfb422f97a14187166ad](https://github.com/PX4/PX4-Autopilot/commit/95cc6a06f310061c3261bfb422f97a14187166ad),"mc_att_control: separate attitude controller from rate controller update

This will allow to run the rate controller faster than the attitude
controller.",X,faster

"PX4-Autopilot
"," #607
",[bec43b0b28e6817fb23e0ef323ed929ce65360ed](https://github.com/PX4/PX4-Autopilot/commit/bec43b0b28e6817fb23e0ef323ed929ce65360ed),"mc_att_control: run rate controller first and increase fmu prio by one

The rate controller is now run directly after a gyro publication, and
as soon as it publishes the actuator controls, the output driver (fmu/...)
runs.

Test on a Pixracer:
Reduces fmu control latency from 219us to 134us.
If we run the rate controller last (same order as before, just increase
the prio), the latency is 201us.

CPU load is unchanged.

The drawback is that the attitude to rate setpoint generation is delayed
by one cycle (4ms), but it will be reduced to 1ms as soon as we run at
1kHz.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #608
",[428c2f72bded828499e4113d4392be258d114e2f](https://github.com/PX4/PX4-Autopilot/commit/428c2f72bded828499e4113d4392be258d114e2f),"mavlink: always acknowledge a param write

This change has two effects:
1. We always acknowledge a param write no matter if the value was
   actually changed or not. This is according to the spec:
   https://mavlink.io/en/services/parameter.html#write-parameters
2. This fixes the bug where int32 parameters were not actually acked
   because the memory of the param value was casted directly to float
   and then compared. In the case of a int32 parameter set from 0 to 1
   it would mean that the cast to float of the memory representation
   was still 0 and therefore it was assumed to be ""no change"" and the
   ack was omitted.",New:rounded_numbers,memory

"PX4-Autopilot
"," #609
",[e91db7b4d2694cd7a1c11b07e979fbbbb5561e99](https://github.com/PX4/PX4-Autopilot/commit/e91db7b4d2694cd7a1c11b07e979fbbbb5561e99),"uORBDeviceNode: move flags from SubscriberData to UpdateIntervalData

As there is only one bit used in 'flags', and it is only used in case
update_interval is not null, we can move the bit to UpdateIntervalData.

The size of UpdateIntervalData does not increase (on 32 bit).

Reduces RAM usage by 3.6KB (tested on a Pixracer).",X,increase

"PX4-Autopilot
"," #610
",[c9e52d43862b6854d4396b2190cb4b9f1b957c0b](https://github.com/PX4/PX4-Autopilot/commit/c9e52d43862b6854d4396b2190cb4b9f1b957c0b),"MPC_MAN_TILT_MAX: increase max limit from 90 to 180 degrees

This is especially useful for testing (the vehicle must behave correctly
even at high tilt angles).",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #611
",[d852ce20e6504abc02e6aba38b9755540f5de101](https://github.com/PX4/PX4-Autopilot/commit/d852ce20e6504abc02e6aba38b9755540f5de101),MPC - Increase max velocity integral gain to 3.0,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #612
",[8566b6b53e95ad8f4b16acb9e48308ecf7ef5040](https://github.com/PX4/PX4-Autopilot/commit/8566b6b53e95ad8f4b16acb9e48308ecf7ef5040),AV-X increase logger buffer,X,increase

"PX4-Autopilot
"," #613
",[93802c27102dc4c06c2128c5939605676ad09750](https://github.com/PX4/PX4-Autopilot/commit/93802c27102dc4c06c2128c5939605676ad09750),hysteresis test increase time on cygwin (#10958),General:Hard-coding,increase

"PX4-Autopilot
"," #614
",[cf6665625847e2ec237e78ce971b4ddd8098fa03](https://github.com/PX4/PX4-Autopilot/commit/cf6665625847e2ec237e78ce971b4ddd8098fa03),"mixer multirotor: add unit-tests

To run:
cd src/lib/mixer
make tests

This will validate the C++ implementation by taking the python
implementation as ground-truth. It runs through various actuator control
command values for all airmode variations and several mixer types.

The python script also allows to prototype new mixer algorithms.

It is not integrated into the existing build system, because it's easier
to use that way, with less dependencies, and faster testing workflow.
It could however be a bit more integrated.

Reference: https://github.com/Auterion/Flight_Control_Prototyping_Scripts/tree/master/control_allocation",X,faster

"PX4-Autopilot
"," #615
",[d676325ea50288b8d106a2ccc83f5783d9dfb445](https://github.com/PX4/PX4-Autopilot/commit/d676325ea50288b8d106a2ccc83f5783d9dfb445),Update Nuttx with env out of memory fix,X,memory

"PX4-Autopilot
"," #616
",[3b3752b753c09a587646505dd89f1d6b2de888f6](https://github.com/PX4/PX4-Autopilot/commit/3b3752b753c09a587646505dd89f1d6b2de888f6),"pmw3901 increase publish rate and max_ground_distance (#11066)

* increase pmw3901 publish rate and max_ground_distance

* set work queue to high priority",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #617
",[8cdb65eed90371029bad943a6d1dd912eb5d46ec](https://github.com/PX4/PX4-Autopilot/commit/8cdb65eed90371029bad943a6d1dd912eb5d46ec),"lockstep_scheduler: simplify LockstepScheduler::cond_timedwait & reduce locking

- the loop is not needed
- we optimize for the fast case and lock only if really needed",X,fast

"PX4-Autopilot
"," #618
",[ecbe2a3e0bf422dc6a4504762bc57757cd602869](https://github.com/PX4/PX4-Autopilot/commit/ecbe2a3e0bf422dc6a4504762bc57757cd602869),"drv_hrt posix: improve performance for hrt_absolute_time()

Previously hrt_absolute_time() was at around 5% of the total CPU usage, now
it's around 0.35%.",X,performance

"PX4-Autopilot
"," #619
",[95eff332632f59ad3584a25169ce92691f7b0222](https://github.com/PX4/PX4-Autopilot/commit/95eff332632f59ad3584a25169ce92691f7b0222),GPS increase task stack 1530 -> 1600 bytes,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #620
",[b7bcec2d8c06ce8f1797a24d21229bc4b0dc1d28](https://github.com/PX4/PX4-Autopilot/commit/b7bcec2d8c06ce8f1797a24d21229bc4b0dc1d28),"HRT: Create new separate call for atomic HRT elapsed time calculation
This call rarely needs to be truly atomic and the involved CPU overhead in making it atomic was unnecessary and introduces a lot of IRQ jitter with no value-add. The call has been moved to be non-atomic and the codebase will be inspected and changed in follow-up commits for the few instances where it is truly needed.",Smith:General:Unnecessary_Processing,overhead

"PX4-Autopilot
"," #621
",[46390a150833be226a7ab298aa414b748580cea9](https://github.com/PX4/PX4-Autopilot/commit/46390a150833be226a7ab298aa414b748580cea9),"HRT: Drop volatile specifier from function call for non-atomic mode

This allows the compiler to optimize better without loosing any performance / accuracy.",X,performance

"PX4-Autopilot
"," #622
",[88d0b163b52803a38e9c316f1ccaf43b4ffd3818](https://github.com/PX4/PX4-Autopilot/commit/88d0b163b52803a38e9c316f1ccaf43b4ffd3818),"common:board_crashdump must end in reset!

   Upstream changes defer the board reset based on the vaule of
   CONFIG_BOARD_RESET_ON_ASSERT
      0 (or not defined) Do not reset on assert
      >= 1 reset if assertion is in an interrupt handler or the idle task
      >= 2 on any asertion.

  up_assert is called from up_hardfault or an asertion failure.
  Part 1 of up_assert will call out to the board_crashdump
  Part 2 on return from board_crashdump will then perform
  the reset.

  board_crashdump needs a chunk of ram to save the complete
  context in. It uses  &_sdata which is the lowest memory and
  it will corrupt that memeory.  We can therfore can not allow
  return to the OS, as it could depend on that area of RAM.

  So all boards need to do a reset at the end of board_crashdump",X,memory

"PX4-Autopilot
"," #623
",[e7bf0e03d29edbe962e0d432e71884d291a3d93b](https://github.com/PX4/PX4-Autopilot/commit/e7bf0e03d29edbe962e0d432e71884d291a3d93b),"px4_nuttx_tasks:Support future removal of env.

   CONFIG_DISABLE_ENVIRON can prevent task having to allocate
   memory for the env.",X,memory

"PX4-Autopilot
"," #624
",[d49f6a3acadcc96f0173eb2b4915bf977bdd3dd9](https://github.com/PX4/PX4-Autopilot/commit/d49f6a3acadcc96f0173eb2b4915bf977bdd3dd9),"mavlink increase STACK_MAIN and STACK_MAX

 - needed if NuttX networking enabled",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #625
",[6f9a9b3d2c90faca79ff42b7dd08df6e97051c00](https://github.com/PX4/PX4-Autopilot/commit/6f9a9b3d2c90faca79ff42b7dd08df6e97051c00),"px4_fmu-v4: add runtime external SPI4 detection to support pmw3901 (#11301)

 * The build is built with SPI4. At run time the signal GPIO_8266_GPIO2 it tested. If it is low the SPI4 is configured. If it is high SPI4 is not configured.

 * board_common: Add Notion of Board has bus manifest",X,runtime

"PX4-Autopilot
"," #626
",[298049b0fb8382a43baeefd9c190888f95b01c01](https://github.com/PX4/PX4-Autopilot/commit/298049b0fb8382a43baeefd9c190888f95b01c01),px4_fmu-v4_stackcheck sync with default and increase pmw3901 main stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #627
",[c6e60c21893e026ec5a7d005681526a266f92487](https://github.com/PX4/PX4-Autopilot/commit/c6e60c21893e026ec5a7d005681526a266f92487),"Update submodule ecl to latest Sun Feb  3 07:37:55 EST 2019

    - ecl in PX4/Firmware (0dc2ccb130e891b387b4e0d6ea4492473339e142): https://github.com/PX4/ecl/commit/721f5e61a5965a08a34b2875d2bdc0b5d3b80601
    - ecl current upstream: https://github.com/PX4/ecl/commit/dd58e695494acab73fb6fcec7074291edb5c226b
    - Changes: https://github.com/PX4/ecl/compare/721f5e61a5965a08a34b2875d2bdc0b5d3b80601...dd58e695494acab73fb6fcec7074291edb5c226b

    dd58e69 2019-01-30 Paul Riseborough - EKF: Ensure FW yaw alignment method is used on first in-air reset
3accab1 2019-01-28 Paul Riseborough - EKF: protect declination fusion from badly conditioned earth field estimates
7bddbd1 2019-01-28 Paul Riseborough - EKF: Update cleaned up autocode fragment with sign error fix and missing LD
fe378fd 2019-01-22 Paul Riseborough - EKF: Prevent unwanted declination fusion when re-starting 3-axis fusion
bd1647a 2019-01-22 Paul Riseborough - EKF: Rework use of fuseDeclination()
d52f536 2019-01-17 Paul Riseborough - EKF: Save mag field covariance data before reset
82ce7a8 2019-01-17 Paul Riseborough - EKF: Save mag field covariance information on startup
708c79e 2019-01-17 Paul Riseborough - EKF: Ensure mag field state covariance data is always available for re-use
8839e4e 2019-01-17 Paul Riseborough - EKF: Don't discard declination certainty information when resuming 3-axis fusion.
25148e1 2019-01-17 Paul Riseborough - EKF: Prevent rapid changes in declination estimate after a reset
6e7c119 2019-01-16 CarlOlsson - EKF: limit yaw variance increase to 0.01 rad^2 to prevent a badly conditioned covariance matrix
0896f7b 2019-01-16 CarlOlsson - EKF: Also fill in lower part of covariance matrix in increaseQuatYawErrVariance()
4b3140e 2019-01-16 Paul Riseborough - EKF: Fix rebase error
911d4d8 2019-01-16 Paul Riseborough - EKF: Fix sign error in increaseQuatYawErrVariance function
a0b9cb0 2018-12-24 Paul Riseborough - EKF: Use consistent method for recording completion of in-flight yaw alignment
ef5a87c 2018-12-21 Paul Riseborough - EKF: Rework quaternion yaw reset.
fc2a089 2018-12-21 Paul Riseborough - EKF: Add function to un-correlate quaternion states
bce1b96 2018-12-21 Paul Riseborough - EKF: Add function enabling yaw variance to be increased
bf1f3a2 2018-12-21 Paul Riseborough - EKF: Derive equations enabling yaw variance to be increased
81eabc1 2019-01-29 Daniel Agar - Jenkins update all containers to latest tag 2019-01-28
a5e6191 2019-01-29 Daniel Agar - EKF add clarity brackets to avoid potential confusion",X,increase

"PX4-Autopilot
"," #628
",[daae9e85b89a035faad32f6e2458c5bdbb54887b](https://github.com/PX4/PX4-Autopilot/commit/daae9e85b89a035faad32f6e2458c5bdbb54887b),Jenkins hardware increase test timeout and update container version,X,increase

"PX4-Autopilot
"," #629
",[2b16be92813ba5a136b07d5a0b48ca30c085ea94](https://github.com/PX4/PX4-Autopilot/commit/2b16be92813ba5a136b07d5a0b48ca30c085ea94),"Jenkins hardware test remove px4_fmu-v4 stackcheck

- the stackcheck build is too slow to be useful

- will be recreated with fmu-v5",X,slow

"PX4-Autopilot
"," #630
",[6a08c1b6f16365fd2d3d59da64eb0b10aabe266b](https://github.com/PX4/PX4-Autopilot/commit/6a08c1b6f16365fd2d3d59da64eb0b10aabe266b),Jenkins SITL tests increase test history from 2 -> 5,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #631
",[b01e470ff9b72665d157881f8d49141d19eaa4db](https://github.com/PX4/PX4-Autopilot/commit/b01e470ff9b72665d157881f8d49141d19eaa4db),"refactor ecl ekf analysis (#11412)

* refactor ekf analysis part 1: move plotting to functions



* add plot_check_flags plot function



* put plots in seperate file



* use object-oriented programming for plotting



* move functions for post processing and pdf report creation to new files



* add in_air_detector and description as a csv file



* refactor metrics and checks into separate functions



* refactor metrics into seperate file, seperate plotting



* ecl-ekf tools: re-structure folder and move results table generation



* ecl-ekf-tool: fix imports and test_results_table



* ecl-ekf tools: bugfix output observer tracking error plot



* ecl-ekf-tools: update batch processing to new api, fix exception handling



* ecl-ekf-tools: use correct in_air_detector



* ecl-ekf-tools: rename csv file containing the bare test results table



* ecl-tools: refactor for improving readability



* ecl-ekf tools: small plotting bugfixes



* ecl-ekf tools: small bugfixes in_air time, on_ground_trans, filenames



* ecl-ekf-tools: fix amber metric bug



* ecl-ekf-tools: remove custom function in inairdetector



* ecl-ekf-tools: remove import of pandas



* ecl-ekf-tools: add python interpreter to the script start



* ecl-ekf-tools pdf_report: fix python interpreter line



* px4-dev-ros-kinetic: update container tag to 2019-02-13



* ecl-ekf-tools python interpreter line: call python3 bin directly



* ecl-ekf-tools: change airtime from namedtuple to class for python 3.5



* ecl-ekf-tools: update docker image px4-dev-ros-kinetic



* ecl-ekf-tools: fix memory leak by correctly closing matplotlib figures",X,memory

"PX4-Autopilot
"," #632
",[703e28f7a8544fe12e70d9ec012d6a94e79a8db6](https://github.com/PX4/PX4-Autopilot/commit/703e28f7a8544fe12e70d9ec012d6a94e79a8db6),Jenkins increase history retention,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #633
",[12d442e8ddf9e3d13b99a15d662f4ac8dcd1d287](https://github.com/PX4/PX4-Autopilot/commit/12d442e8ddf9e3d13b99a15d662f4ac8dcd1d287),"px4_fmuv5:Stack Check build Increase to 2624

   The cause of the stack detection fault is because of the
   level of nesting in the start up script. We need to
   determine the worst case configuration and set the
   bar there.

   This fault occurred some 42 calls deep due to script
   calling script (repeat).

   The HW stack check requires as a margin of 204 bytes. That is
   ISR HW stacking of CPU(8) FPU(18) registers and SW stacking of
   CPU(11) and FPU(16) registers. Total CPU(19) registers is
   68 bytes and the total FPU(34) registers is 136 bytes.  On
   a system with a separate ISR stack This only needs to be 104
   so there is 100 bytes of headroom. But as coded the detection
   will give a false positive detection and fault. This does not
   mean that the stack will be corrupted.

   Adjustments to that stack can have no effect due to rounding.
   A stack size of 2608 and 2616 can yield the exact same size stack.
   So even when the failure is due to a 4 byte overflow, it can take
   greater than a 16 bytes increase to fix it. Because the final
   stack size is calculated with an 8 byte alignment after a 4 byte
   decrease. So 2624 becomes 2620 at runtime and will boot
   with SYS_AUTOSTART=4001.",New:General:Hard-coded-fine-tuning,runtime

"PX4-Autopilot
"," #634
",[63a6ab34f7e37c6eac48fae85fb84c84c5d77b97](https://github.com/PX4/PX4-Autopilot/commit/63a6ab34f7e37c6eac48fae85fb84c84c5d77b97),FlightTaskManualAltitude: slow down when landing manually,X,slow

"PX4-Autopilot
"," #635
",[f794ee0c8a1ed033549e436ddd10031dc97839eb](https://github.com/PX4/PX4-Autopilot/commit/f794ee0c8a1ed033549e436ddd10031dc97839eb),"FlightTaskManualAltitude: add slow upwards start

when still close to ground",X,slow

"PX4-Autopilot
"," #636
",[c9d32578e358b2f24dba4ec86527ef6ed286dd9f](https://github.com/PX4/PX4-Autopilot/commit/c9d32578e358b2f24dba4ec86527ef6ed286dd9f),"fix bmi055: increase DLPF from 62.5 to 500

With a DLPF of 62.5 Hz, the sampling rate is apperently not 1 kHz anymore,
because the driver got duplicate samples and published only at 128 Hz.
We have to increase the filter back to 500 Hz so that we get 1 kHz sampling
rate, with 250 Hz publications.","New:Fixed_Communication_Rate
New:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #637
",[6648937789fbcab9e2e0591e39f5935e38c9a7a5](https://github.com/PX4/PX4-Autopilot/commit/6648937789fbcab9e2e0591e39f5935e38c9a7a5),logger increase stack 3600 -> 3700 bytes,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #638
",[7a27284d750b9a642a1f35660b47cfdefb394fa0](https://github.com/PX4/PX4-Autopilot/commit/7a27284d750b9a642a1f35660b47cfdefb394fa0),"Update submodule ecl to latest Thu Apr  4 00:38:15 UTC 2019

    - ecl in PX4/Firmware (3a004d13dc13d81403ae3873d5109c0503a4f964): https://github.com/PX4/ecl/commit/a892ececf8490b21aa8917bc243b2bc441af6a87
    - ecl current upstream: https://github.com/PX4/ecl/commit/f95cd4b3584d029c35b288a39180ddf25b2dd004
    - Changes: https://github.com/PX4/ecl/compare/a892ececf8490b21aa8917bc243b2bc441af6a87...f95cd4b3584d029c35b288a39180ddf25b2dd004

    f95cd4b 2019-01-22 Roman - ground effect: removed dependency on local position
7845ff4 2019-01-23 CarlOlsson - EKF: increase wind process noise scaler to 0.5
32ca6f7 2018-10-24 CarlOlsson - ekf: scale wind process noise with low pass filtered height rate
938c8ad 2019-02-04 CarlOlsson - EKF: use hagl estimate if valid for when to trigger yaw reset on takeoff
8b4ae48 2019-03-05 Hamish Willee - README: Fix link to EKF/ECL tuning guide
f0889c1 2019-03-18 Carl Olsson - EKF: fixed some comment typos
6e77b19 2019-03-14 Todd Stellanova - Add DataValidatorGroup tests, add more DataValidator tests (#592)",X,increase

"PX4-Autopilot
"," #639
",[911df49045b97544eb362447efdf8470886e5f8f](https://github.com/PX4/PX4-Autopilot/commit/911df49045b97544eb362447efdf8470886e5f8f),increase stacks in drivers identified by stackcheck builds,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #640
",[1454694bddd0a40a9da3c4170b0d28f5ab1efcf5](https://github.com/PX4/PX4-Autopilot/commit/1454694bddd0a40a9da3c4170b0d28f5ab1efcf5),"FlightTaskAuto: separate default speed and limit

It wasn't possible to fly faster than cruise speed even if planned
in the mission.

Limiting the planned cruise speed is necessary because
the smoothed trajectory mission plans to the _mc_cruise_speed and
if that's higher than the maximum it gets capped for safety by the
position controller and the result is a jerky flight.",X,faster

"PX4-Autopilot
"," #641
",[dc3341db59feb30ada0901141e7170071e5ad6da](https://github.com/PX4/PX4-Autopilot/commit/dc3341db59feb30ada0901141e7170071e5ad6da),Fix uninitialized memory found using Valgrind,X,memory

"PX4-Autopilot
"," #642
",[4c56994d7a84268ea3b29930e0ad814db5fcd3e0](https://github.com/PX4/PX4-Autopilot/commit/4c56994d7a84268ea3b29930e0ad814db5fcd3e0),"mavlink_system: set update_counter for safe points

This variable was not set and lead to uninitialized memory being written
to dataman.",X,memory

"PX4-Autopilot
"," #643
",[ffeeedc310a1026057b8364322fd556053fa8423](https://github.com/PX4/PX4-Autopilot/commit/ffeeedc310a1026057b8364322fd556053fa8423),"init.d-posix: raise timeouts for fast SITL

When simulating with lockstep we can raise the speed by setting the env
variable `PX4_SIM_SPEED_FACTOR`. Some inputs like RC, MAVLink heartbeats
from a ground station, or offboard controls via MAVLink are still at the
normal speed which leads to timeouts getting detected in PX4.

To work around this issue we can automatically multiply the timeout
parameters by the speed factor.",X,fast

"PX4-Autopilot
"," #644
",[fac3e1c3f9e30c911208d799a999e3a413e6843c](https://github.com/PX4/PX4-Autopilot/commit/fac3e1c3f9e30c911208d799a999e3a413e6843c),"mc_pos_control: switch back to velocity ramp

But fix the two crucial problems:
- When to begin the ramp?
There's a calculation now for the velocity ramp initial value
such that the resulting thrust is zero at the beginning.
- When to end the ramp?
The ramp is applied to the upwards velocity constraint and it
just ramps from the initial value to the velocity constraint
which is applied during flight. Slower/going down is always possible.",General:Hard-coding,slower

"PX4-Autopilot
"," #645
",[d68dcb9cf725ac35d5b56a4efe29361d0a08df6c](https://github.com/PX4/PX4-Autopilot/commit/d68dcb9cf725ac35d5b56a4efe29361d0a08df6c),"log_writer_file: increase stack size by 20 bytes

Seems to be due to the console buffer.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #646
",[26e041c43c1cf5345a863089c5e0d9ca58cef9be](https://github.com/PX4/PX4-Autopilot/commit/26e041c43c1cf5345a863089c5e0d9ca58cef9be),WQ increase stacks from 1200 to 1250 bytes,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #647
",[0655f7603bf32c908bda2ccaa0cb26bbe19501f5](https://github.com/PX4/PX4-Autopilot/commit/0655f7603bf32c908bda2ccaa0cb26bbe19501f5),FailureDetector - Increase min value of FD_FAIL_P/R to 60 degrees,X,increase

"PX4-Autopilot
"," #648
",[fcec3b3efcbfb954b80340fc49d994a37d84be9c](https://github.com/PX4/PX4-Autopilot/commit/fcec3b3efcbfb954b80340fc49d994a37d84be9c),px4_fmu-v4: increase uart buffer sizes for vision algorithms (#12199),New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #649
",[bef7a9ba8e9382a1497cf35cfe2f9a4b5ff97a28](https://github.com/PX4/PX4-Autopilot/commit/bef7a9ba8e9382a1497cf35cfe2f9a4b5ff97a28),NuttX boards increase task limit 32 -> 64 (#12230),New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #650
",[5f20d3cf3b13ce9b57837f7a122bacdea0489499](https://github.com/PX4/PX4-Autopilot/commit/5f20d3cf3b13ce9b57837f7a122bacdea0489499),"Jenkins HIL increase boot timeout for stackcheck build

 - px4_fmu-v5_stackcheck remove extra drivers (to try and get the system
usuable)","New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #651
",[ea31f34d09b542fcad7087aa9c9d9c27ddad6ce9](https://github.com/PX4/PX4-Autopilot/commit/ea31f34d09b542fcad7087aa9c9d9c27ddad6ce9),"mc rate controller: add I term reduction factor

Reduce the I gain for high rate errors to reduce bounce-back effects after
flips. Up to 200 degrees the gain is almost not reduced (<25%), so this
will only take noticeable effects for large errors (setpoint changes),
where we actually want to have an effect.

This allows to increase the MC_*RATE_I parameters w/o negative effects
when doing flips (i.e. bounce-back after flips).

The 400 degrees limit and the x^2 are empirical.

The better the rate tracking in general (high P gain), the less this is
required (because of the lower tracking error). At the same time it also
does not harm, as the i_factor will always be close to 1.",X,increase

"PX4-Autopilot
"," #652
",[64ac8c18d2549b7c165a5a62346281867c893dfa](https://github.com/PX4/PX4-Autopilot/commit/64ac8c18d2549b7c165a5a62346281867c893dfa),"mc airframes: increase I gains a bit

Previous commit allows to increase them again.
Partially reverts commit 6c3e79f3614f0060d5998c39be358512101252ff.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #653
",[5002b13bda7fd679d29fe8210ebac8766616aa8a](https://github.com/PX4/PX4-Autopilot/commit/5002b13bda7fd679d29fe8210ebac8766616aa8a),"mc_att_control: Increase default rate integral gain

@bkueang and me realized that on every frame we tune the integral gain for
the roll and pitch rate controller is much too low. Usually it needs to be
increased to 0.3 or even 0.4 to have better ""locked in"" flight performance
and 0.2 seems like a good compromise for a safe default.",New:Hard-coded-fine-tuning,performance

"PX4-Autopilot
"," #654
",[7f9415ba4615200cf0c21487e79cb4509ad06620](https://github.com/PX4/PX4-Autopilot/commit/7f9415ba4615200cf0c21487e79cb4509ad06620),"systemcmds/top: increase stack 200 bytes

 - this is necessary after most boards increased CONFIG_MAX_TASKS 32 -> 64",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #655
",[9b46c1d8a90315419876fb62114b2dea1e1fa36c](https://github.com/PX4/PX4-Autopilot/commit/9b46c1d8a90315419876fb62114b2dea1e1fa36c),"Upated Babyshark VTOL config and vtol_defaults

Updated the babyshark default  parameters for improved flight performance,
as well as two MPC parameters in vtol_defaults for smoother hovering with VTOLS""

Signed-off-by: Silvan Fuhrer <silvan@auterion.com>",General:Hard-coding,performance

"PX4-Autopilot
"," #656
",[7ace66a2b9b7ddc91f1f8460a168ebf5a397b050](https://github.com/PX4/PX4-Autopilot/commit/7ace66a2b9b7ddc91f1f8460a168ebf5a397b050),Jenkins hardware increase timeout 10 -> 20 minutes,"New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #657
",[4e5974f1ca27df11b6f23dd8c6a556454ba81479](https://github.com/PX4/PX4-Autopilot/commit/4e5974f1ca27df11b6f23dd8c6a556454ba81479),"srf02 driver: Move member variable initialization to declarations, standardize against other drivers and format. (#11891)

* Migrate variable initialization from constructor list to declarations, standardize whitespace formatting, and alphabetize/organize order of methods and variables in srf02.cpp.



* Increase stack allocation size for the srf02 driver main.",General:Hard-coding,increase

"PX4-Autopilot
"," #658
",[8aad10526545a8d67a7e6e239b4c753f832b03c9](https://github.com/PX4/PX4-Autopilot/commit/8aad10526545a8d67a7e6e239b4c753f832b03c9),mc_pos_control: increase stack size by 100 bytes,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #659
",[c15e54445efe710bd70cea591935d64bde29caa4](https://github.com/PX4/PX4-Autopilot/commit/c15e54445efe710bd70cea591935d64bde29caa4),increase cutoff margin for alias matching,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #660
",[f0cdd9be6091e15cc2a6cc434cf4409647bcd3a5](https://github.com/PX4/PX4-Autopilot/commit/f0cdd9be6091e15cc2a6cc434cf4409647bcd3a5),"MPC_Z_VEL_I: changed default from 0.02 to 0.1
- generally better attitude tracking
- much better altitude control immediately after takeoff (hover throttle offset)
- faster landing detection

Signed-off-by: RomanBapst <bapstroman@gmail.com>",New:Hard-coded-fine-tuning,faster

"PX4-Autopilot
"," #661
",[a8071589bc87d97fd31cb810a93ee425c839275e](https://github.com/PX4/PX4-Autopilot/commit/a8071589bc87d97fd31cb810a93ee425c839275e),"increase default fixed wing rate controller I term

Signed-off-by: RomanBapst <bapstroman@gmail.com>",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #662
",[0e949a36ee104b8ace10eedaa1fcd83a00e3265a](https://github.com/PX4/PX4-Autopilot/commit/0e949a36ee104b8ace10eedaa1fcd83a00e3265a),task_stack_info increase task_name length to match NuttX CONFIG_TASK_NAME_SIZE,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #663
",[e0893c383d8dc1f3cc1cacea00454d43d1defb08](https://github.com/PX4/PX4-Autopilot/commit/e0893c383d8dc1f3cc1cacea00454d43d1defb08),increase mc_pos_control stack from 1300 to 1500,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #664
",[5421ef5535d79b5f5108a8545def46f9e5e9358f](https://github.com/PX4/PX4-Autopilot/commit/5421ef5535d79b5f5108a8545def46f9e5e9358f),NuttX increase HPWORK and LPWORK stack by 256 bytes,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #665
",[d70b024ec7a6d72de87f4ddc7de087d716929144](https://github.com/PX4/PX4-Autopilot/commit/d70b024ec7a6d72de87f4ddc7de087d716929144),"GTest functional tests that include parameters and uORB messaging (#12521)

* Add kdevelop to gitignore



* Add test stubs



* Rename px4_add_gtest to px4_add_unit_gtest



* Add infrastructure to run functional tests



* Add example tests with parameters and uorb messages



* Fix memory issues in destructors in uORB manager and CDev



* Add a more real-world test of the collision prevention",X,memory

"PX4-Autopilot
"," #666
",[166639be3a21be00ef80eb619aa23fbc8751ac3e](https://github.com/PX4/PX4-Autopilot/commit/166639be3a21be00ef80eb619aa23fbc8751ac3e),"logger: unconditionally call _writer.notify()

The file writer thread could get into a state where it blocked infinitely
on pthread_cond_wait() (or rather until the logging stops).

This is very rare and the following conditions must be met:
- the buffer is almost empty (<4KB filled), so that the writer thread does
  not write anything.
- an fsync call is scheduled (happens once every second)
- the fsync call takes a long time (several 100ms), during which time the
  complete log buffer fills up.

The main thread would then get into dropout state where it does not call
_writer.notify() anymore.

Notifying the writer thread on every loop update of the main thread fixes
that.

It does not increase resource usage.",X,increase

"PX4-Autopilot
"," #667
",[ccdc2dffa976c480e76a96a3afb3caa6933077a5](https://github.com/PX4/PX4-Autopilot/commit/ccdc2dffa976c480e76a96a3afb3caa6933077a5),WQ decrease att_pos_ctrl stack,New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #668
",[690aeef1868380f96ab774fe676557714e39c3c2](https://github.com/PX4/PX4-Autopilot/commit/690aeef1868380f96ab774fe676557714e39c3c2),drivers/gps: increase task stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #669
",[78ef8aab2df33cd00e2c969bbff37ffd82bcf385](https://github.com/PX4/PX4-Autopilot/commit/78ef8aab2df33cd00e2c969bbff37ffd82bcf385),STACK_MAIN increase default 1024 -> 2048,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #670
",[891aae03774e4fb2f59aad526eb0147972e93a0b](https://github.com/PX4/PX4-Autopilot/commit/891aae03774e4fb2f59aad526eb0147972e93a0b),"commander increase cpu overload threshold

 * the large 20% margin is no longer appropriate now that nearly all work in the system is

scheduled (moved out of ISRs) and represented in the load percentage

 * closes https://github.com/PX4/Firmware/issues/12753",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #671
",[c67a7536d464b7f788cf20c8be0decb19b2d82ee](https://github.com/PX4/PX4-Autopilot/commit/c67a7536d464b7f788cf20c8be0decb19b2d82ee),"Update submodule matrix to latest Sun Sep 22 08:37:30 EDT 2019

    - matrix in PX4/Firmware (8b1f9546aabfe6ab2a0431f1d5af6dcc976d4f59): https://github.com/PX4/Matrix/commit/60c9c99dcc44ea12bed0c3f9b95d01e2aa6d7d9e
    - matrix current upstream: https://github.com/PX4/Matrix/commit/c34e8dc98fd05ea55dcd4c9fc551b11a3d23a601
    - Changes: https://github.com/PX4/Matrix/compare/60c9c99dcc44ea12bed0c3f9b95d01e2aa6d7d9e...c34e8dc98fd05ea55dcd4c9fc551b11a3d23a601

    c34e8dc 2019-09-17 Matthias Grob - helper: consider matrices with the same NANs and INFINITYs equal
bbaa938 2019-09-17 Matthias Grob - helper: consider NAN equal to NAN such that vectors can be compared exactly
33a6291 2019-09-17 Matthias Grob - Matrix: add proper print function testing
b0b7d72 2019-09-17 Matthias Grob - Multiplication test: fix division resulting in NAN
3747232 2019-09-17 Matthias Grob - LeastSquaresSolver: Fix nasty GCC compile optimization error
5844b0e 2019-09-16 Matthias Grob - Implement one float equality check and use it everywhere
1e80807 2019-09-16 Matthias Grob - test: Add uncovered equality checks with NAN and INFINITE
a374f37 2019-09-16 Matthias Grob - Include helper_functions like all other library components",X,infinite

"PX4-Autopilot
"," #672
",[07d656e971a72d1202651dfd3b4642736fb078d7](https://github.com/PX4/PX4-Autopilot/commit/07d656e971a72d1202651dfd3b4642736fb078d7),"Guidance feature for Collision Prevention (#13017)

* add guidance



* remove COL_PREV_ANG and replace with COL_PREV_CNG



* safe max ranges per bin



* increase default value for colprev delay to account for tracking delay



* update parameter description



* fix and extend testing



* add handling for overlapping sensor data



* fix decision process for overlapping sensors",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #673
",[637d52c74fa8725b1a787f8b9ac093bc42b6c565](https://github.com/PX4/PX4-Autopilot/commit/637d52c74fa8725b1a787f8b9ac093bc42b6c565),frsky_telemetry: increase stack by 60 bytes,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #674
",[69c10dcaaca2d343aa045328dec80737c0dffbf2](https://github.com/PX4/PX4-Autopilot/commit/69c10dcaaca2d343aa045328dec80737c0dffbf2),"dshot: move implementation to a separate directory & library

So that the static memory overhead is not added to targets w/o dshot",X,memory

"PX4-Autopilot
"," #675
",[182efaa7576ccbf682d892ebac93105059e52793](https://github.com/PX4/PX4-Autopilot/commit/182efaa7576ccbf682d892ebac93105059e52793),"dshot: reduce static buffer size

And handle failures of up_dshot_init().

On Omnibus: reduces memory usage if dshot is enabled by ~1.0KB.
The buffer is roughly 1KB in size.",X,memory

"PX4-Autopilot
"," #676
",[17551a99f8d414bbb22a637f14274214cb7a4eca](https://github.com/PX4/PX4-Autopilot/commit/17551a99f8d414bbb22a637f14274214cb7a4eca),io_timer: fix potential invalid memory access,X,memory

"PX4-Autopilot
"," #677
",[25aded36ec9337e274062eb7b4a46eb104ada021](https://github.com/PX4/PX4-Autopilot/commit/25aded36ec9337e274062eb7b4a46eb104ada021),"WorkQueue: avoid potential semaphore counter overflow

This could happen in the following cases:
- IRQ/publisher rate is faster than the processing rate, and therefore
  WorkQueue::Add is called at a higher rate
- a long-running or stuck task that blocks the work queue a long time

Both cases are not expected to happen under 'normal' circumstances (if the
system runs as expected).",X,faster

"PX4-Autopilot
"," #678
",[687a3a15c572f2e9787274a244016df927882700](https://github.com/PX4/PX4-Autopilot/commit/687a3a15c572f2e9787274a244016df927882700),"top: decrease priority below IMU sensor WQ threads

 - otherwise top can potentially disrupt with sensor sampling",General:Hard-coding,decrease

"PX4-Autopilot
"," #679
",[981f8d5d904f303c14348dea7d183cd8ecba456a](https://github.com/PX4/PX4-Autopilot/commit/981f8d5d904f303c14348dea7d183cd8ecba456a),systemcmds/tests: IntrusiveQueue and List fix memory leaks,X,memory

"PX4-Autopilot
"," #680
",[f7e62349b39c111b65cc7062a9bfe9efc1ebfd8b](https://github.com/PX4/PX4-Autopilot/commit/f7e62349b39c111b65cc7062a9bfe9efc1ebfd8b),"px4_posix: increase posix stack overhead (mostly for ASan)

 - sync address sanitizer SITL tests",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #681
",[e2cf501f9d5bc947a683086e9f20bd2a2d7e99b6](https://github.com/PX4/PX4-Autopilot/commit/e2cf501f9d5bc947a683086e9f20bd2a2d7e99b6),"boards: increase CONFIG_MAX_TASKS 32->64 on all F7s (#13285)

On more complicated setups it's still possible to exceed 32 tasks. For example fmu-v5 with mavlink on every telem (+ USB), external spi usage (pmw3901), gimbal (vmount), multiple i2c sensors, and camera feedback is 35 tasks (with top running). This is a fairly extreme case, so I'm only going to increase CONFIG_MAX_TASKS on newer F7 boards.",General:Hard-coding,increase

"PX4-Autopilot
"," #682
",[d545825bf0a53d412db449614c950a377f79d192](https://github.com/PX4/PX4-Autopilot/commit/d545825bf0a53d412db449614c950a377f79d192),clang-tidy: enable performance-unnecessary-value-param and fix,X,performance

"PX4-Autopilot
"," #683
",[5491f9b8f953664273c63547a8ee5ce794b3c3c7](https://github.com/PX4/PX4-Autopilot/commit/5491f9b8f953664273c63547a8ee5ce794b3c3c7),"px_uploader.py: increase estimated erase time

The 9 seconds to erase a board probably still come from the FMU-v1 and
Pixhawks with only 1 MB flash. By now, many targets have 2 MB flash and
take a bit longer to erase. Therefore, we can increase the estimated
time a bit and don't need to resort to the timeout notice.","New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #684
",[32359168d6f3af80470a2b541dadee9298faedc2](https://github.com/PX4/PX4-Autopilot/commit/32359168d6f3af80470a2b541dadee9298faedc2),"smbus: fix invalid memory access in read_word()

read_word() expected 3 bytes (uint16_t + PEC byte), but was passed an
address to an uint16_t value.

write_word() is changed to be type-safe as well.",X,memory

"PX4-Autopilot
"," #685
",[11287712f8bfc1ce896cc618323a2fb318ca1731](https://github.com/PX4/PX4-Autopilot/commit/11287712f8bfc1ce896cc618323a2fb318ca1731),"fmuk66-v3:Fix hang on SDIO card removal/reinsertion

   The interrupt driven card detect logic was enabled
   but the auto mounter was not. That interrupt was
   calling mmcsd_mediachange.

   There is a reentrancy issues in the kinetis callback logic.
   Toplevel calls mmcsd_mediachange calls SDIO_CALLBACKENABLE
   that calls kinetis_callbackenable that calls kinetis_callback
   that calls mmcsd_mediachange.",X,hang

"PX4-Autopilot
"," #686
",[69694ab000f923106931612fa34f8d689b1732fc](https://github.com/PX4/PX4-Autopilot/commit/69694ab000f923106931612fa34f8d689b1732fc),px4io-v2:Resonable Def config memory - verified by inspection,New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #687
",[8ce2f30aa6894cf0e2bfadfbc9c787029599cfd1](https://github.com/PX4/PX4-Autopilot/commit/8ce2f30aa6894cf0e2bfadfbc9c787029599cfd1),"NuttX cmake improve dependencies between configure and runtime

 - attempting to make the build slightly more robust to incomplete configures or other bad states.",X,runtime

"PX4-Autopilot
"," #688
",[82fac4a0a7f5ea28a6402dd14daa846431f7ad10](https://github.com/PX4/PX4-Autopilot/commit/82fac4a0a7f5ea28a6402dd14daa846431f7ad10),cmake NuttX linker print memory usage,X,memory

"PX4-Autopilot
"," #689
",[cbea76f62a80caff29b2db3457c42b84ad1ef7ad](https://github.com/PX4/PX4-Autopilot/commit/cbea76f62a80caff29b2db3457c42b84ad1ef7ad),"navigator: fix triplet resetting/publication logic (#13534)

The navigator has a notion of resetting the triplets which means the

triplet setpoints are set to invalid and therefore not to be used by

downstream modules such as flight tasks.



However, before this patch, the triplets were not published if invalid

meaning that a valid triplet would stay the truth until a new valid

triplet would get published.



E.g. this lead to the corner case case where we publish a valid triplet

with an IDLE setpoint on ground in HOLD and then don't update the

triplet while flying in POSCTL mode. Later, when RTL is engaged, the

flight task will use IDLE until navigator (which runs slower) has

published the next triplet.



The fix involves two main changes:

- Publish invalid triplets to avoid stale triplets.

- Avoid publishing the triplet on every iteration in manual modes by not

  setting `_pos_sp_triplet_published_invalid_once = false`.



When testing this I realized that a mission upload during RTL would stop

RTL. This is because the mission is updated while the mission navigation

mode is not active and reset_triplets() is called from there. This is

now only done for the case where we are actually in mission navigation

mode. The fact that a mission is updated when not active also seems

wrong and is something to fix another time.",X,slower

"PX4-Autopilot
"," #690
",[2811307293a9bc6118f861d87f6a3a840a795b98](https://github.com/PX4/PX4-Autopilot/commit/2811307293a9bc6118f861d87f6a3a840a795b98),px4_work_queue: increase wq:hp_default stack 1500->1800 bytes (found by stackcheck),New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #691
",[1cbcb445abb21e69c5af2b590147b5c72601b823](https://github.com/PX4/PX4-Autopilot/commit/1cbcb445abb21e69c5af2b590147b5c72601b823),"gyro calibration: speedup from 20s to 1s

It's not required to take that many samples, 1 second is enough.
This is confirmed by looking at the standard deviation over 10 calibrations:
it is in the same order as with 20 seconds (the effect of temperature
increase has a bigger effect).",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #692
",[4e7dedede79872401f50c733bd74e5ddf1fa41f1](https://github.com/PX4/PX4-Autopilot/commit/4e7dedede79872401f50c733bd74e5ddf1fa41f1),"bloaty show full demangle, increase number of lines, and combine segments + sections",X,increase

"PX4-Autopilot
"," #693
",[634e8d206a7651b09930f9091839b5df7b8e7420](https://github.com/PX4/PX4-Autopilot/commit/634e8d206a7651b09930f9091839b5df7b8e7420),"tiltrotor SITL config: increase transition time from 1.5 to 5 seconds
- avoids tilting the motors forward too fast

Signed-off-by: RomanBapst <bapstroman@gmail.com>",New:Hard-coded-fine-tuning,fast

"PX4-Autopilot
"," #694
",[31456419e9a77c26e4e4c5b8efe2f1c6472653bd](https://github.com/PX4/PX4-Autopilot/commit/31456419e9a77c26e4e4c5b8efe2f1c6472653bd),"px4_fmu-v5x:Add 4096 for ism330dlc to BOARD_DMA_ALLOC_POOL_SIZE

   ISM330DLC uses 4096 of memory allocated from DMA pool.
   This depleted the pool to the point the next allocation
   for FAT would fail. Unfortuanly this is the logger
   on a later open.",New:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #695
",[1d3f722201c39dfc14dfd85c80875c57427a2fbb](https://github.com/PX4/PX4-Autopilot/commit/1d3f722201c39dfc14dfd85c80875c57427a2fbb),px4_work_queue: increase hp_default stack 1800 -> 1900 bytes,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #696
",[808061519141d0bcf8ef8c77a3e4b945c2f78ddb](https://github.com/PX4/PX4-Autopilot/commit/808061519141d0bcf8ef8c77a3e4b945c2f78ddb),"PreFlightChecker: add spike limit argument for innovation check and
increase optical flow test limits.",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #697
",[735749e341e51c31abe843593da7ba8f3bc97e0d](https://github.com/PX4/PX4-Autopilot/commit/735749e341e51c31abe843593da7ba8f3bc97e0d),"Revert ""SITL shell: Do math using the shell""

This reverts commit be35c4857be2483050d9a34987aeda3c6935b516.

This would only work for integer math, so for simulation speed-up. For
speeds slower than realtime we need floating point.",New:Hard-coded-timing,slower

"PX4-Autopilot
"," #698
",[3387c9599cc09c1171a41617d1d30c4c7b01fd22](https://github.com/PX4/PX4-Autopilot/commit/3387c9599cc09c1171a41617d1d30c4c7b01fd22),"mavsdk_tests: don't constrain speed factor to int

Speed factors slower than 1 should also be possible.",X,slower

"PX4-Autopilot
"," #699
",[4d831707463628ec61af99bd0caac29fe08492f9](https://github.com/PX4/PX4-Autopilot/commit/4d831707463628ec61af99bd0caac29fe08492f9),"mc_pos_control: do not ignore EKF vz with terrain following

This caused bad altitude control performance when enabling
terrain following. It even leads to complete vertical control
instability in case dist_bottom is inaccurate.

Relying on the estimator states is the way to go instead of
silently using one altitude source as state.",X,performance

"PX4-Autopilot
"," #700
",[dc05ceaad2d3786d1c4929dbe867c044fbffe1dd](https://github.com/PX4/PX4-Autopilot/commit/dc05ceaad2d3786d1c4929dbe867c044fbffe1dd),"create temperature_compensation module

 - this is a new module for temperature compensation that consolidates the functionality previously handled in the sensors module (calculating runtime thermal corrections) and the events module (online thermal calibration)

 - by collecting this functionality into a single module we can optionally disable it on systems where it's not used and save some flash (if disabled at build time) or memory (disabled at run time)",Smith:General:Unnecessary_Processing,memory

"PX4-Autopilot
"," #701
",[0d8ac51bcccce3bf7885e7608200dc862cd68797](https://github.com/PX4/PX4-Autopilot/commit/0d8ac51bcccce3bf7885e7608200dc862cd68797),"Coverage tests: Run faster
We want the coverage tests to run at the maximum speedup factor the CI machine can deliver.",X,faster

"PX4-Autopilot
"," #702
",[962716a7c3073df28dbc66d1402a47746c672d4d](https://github.com/PX4/PX4-Autopilot/commit/962716a7c3073df28dbc66d1402a47746c672d4d),nxp_fmurt1062-v1:Performance tuning,X,performance

"PX4-Autopilot
"," #703
",[78c7f98ef199b48e8ab90a915ada3c07124baf07](https://github.com/PX4/PX4-Autopilot/commit/78c7f98ef199b48e8ab90a915ada3c07124baf07),nxp_fmurt1062-v1:Memory Reorg,X,memory

"PX4-Autopilot
"," #704
",[c78572b47149919f661f026b3313ac662998be16](https://github.com/PX4/PX4-Autopilot/commit/c78572b47149919f661f026b3313ac662998be16),"px4io: fix array regs[] size (#14135)

may cause memory override if _max_controls larger then _max_actuators",General:Hard-coding,memory

"PX4-Autopilot
"," #705
",[22499effb976e75c5be01a14b6bf38d0ed61993d](https://github.com/PX4/PX4-Autopilot/commit/22499effb976e75c5be01a14b6bf38d0ed61993d),"invensense icm20602 improvements

 - checked register mechanism and simple watchdog
    - driver checks for errors gradually and can reconfigure itself
 - respect IMU_GYRO_RATEMAX at the driver level
 - fixed sensor INT16_MIN and INT16_MAX handling (y & z axis are flipped before publishing)
 - increased sensor_gyro_fifo max size (enables running the driver much slower, but still transferring all raw data)
 - PX4Accelerometer/PX4Gyroscope remove unnecessary memsets",X,slower

"PX4-Autopilot
"," #706
",[d7e502ec72af023b870fd41a83e1ec6e86561768](https://github.com/PX4/PX4-Autopilot/commit/d7e502ec72af023b870fd41a83e1ec6e86561768),uORB_tests increase stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #707
",[d7a9b123e6b84df4a7c01daaac64706c39abd3d7](https://github.com/PX4/PX4-Autopilot/commit/d7a9b123e6b84df4a7c01daaac64706c39abd3d7),logger: fix thread deadlock,General:Deadlock,deadlock

"PX4-Autopilot
"," #708
",[505afc6063b39adb29c360447b9b6cf97d6f2b9e](https://github.com/PX4/PX4-Autopilot/commit/505afc6063b39adb29c360447b9b6cf97d6f2b9e),boards: increase LPWORKSTACKSIZE 1536 -> 1600,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #709
",[9585055e9e87ef565efd19fa429e175423ac81e3](https://github.com/PX4/PX4-Autopilot/commit/9585055e9e87ef565efd19fa429e175423ac81e3),"uORB: add bitset for faster orb_exists check and remove uORB::Subscription lazy subscribe hack/optimization

 - add PX4 bitset and atomic_bitset with testing

 - add uORB::Subscription constructor to take ORB_ID enum

 - move orb test messages into msg/",X,faster

"PX4-Autopilot
"," #710
",[190ee042eb65f0301c32c5ad70cf49bb063902e9](https://github.com/PX4/PX4-Autopilot/commit/190ee042eb65f0301c32c5ad70cf49bb063902e9),"Update submodule sitl_gazebo to latest Wed Mar 11 12:38:07 UTC 2020

    - sitl_gazebo in PX4/Firmware (88c9761f1fd6124955a9c218bdc5528a4ee15ab1): https://github.com/PX4/sitl_gazebo/commit/8569aec5bb709acb2fec7ccb5a5a4405f0cdec2a
    - sitl_gazebo current upstream: https://github.com/PX4/sitl_gazebo/commit/458e58f7973df2e211648e78b7277deefa59eca6
    - Changes: https://github.com/PX4/sitl_gazebo/compare/8569aec5bb709acb2fec7ccb5a5a4405f0cdec2a...458e58f7973df2e211648e78b7277deefa59eca6

    458e58f 2020-03-10 JaeyoungLim - Fix sweep cosine (Continuing #302) (#429)
ea2568d 2019-12-27 JaeyoungLim - Increase rudder angle limit
8b905c9 2019-12-27 JaeyoungLim - Add rudder control to sitl
08f8e6f 2020-03-10 Jan-Hendrik Ewers - Update README.md
de10edd 2020-03-10 iwishiwasaneagle - Fixes PX4/sitl_gazebo#424 for arch and ubuntu
4f596be 2020-03-10 Christian Clauss - Remove unused function isstring() in scripts/names.py (#346)
89db01c 2020-03-09 Matej Frančeškin - Handle MAV_CMD_SET_CAMERA_MODE
dae26ba 2020-03-08 JaeyoungLim - Handle videostream info and status
c13057d 2020-03-07 JaeyoungLim - Clear formatting and cleanups
639a6bb 2020-03-07 JaeyoungLim - Add parachute plugin
42d05bd 2020-03-09 RomanBapst - standard vtol: decrease rotorDragCoefficient to more realistic values
5669e5c 2020-03-07 leftytechie - Version check (#418)
82657d3 2020-03-07 Lorenz Meier - Fix geotagged images GPS position The GPS position was invalid, leading to incorrectly displayed geotag markers and to incorrect geotags in images.
8794a70 2020-03-02 Julian Oes - cmake: remove warning
7aba744 2020-02-26 TSC21 - gazebo_mavlink_interface: use class enum; use binary notation with the bitmask operations
0dc43a4 2020-02-26 TSC21 - gazebo_mavlink_interface: make sure to always send gyro and accel data in the HIL_SENSOR msgs
0c954a2 2020-02-25 TSC21 - mavlink_interface: split groundtruth stream from sensor stream; only apply rotations where needed
bc92d96 2020-02-25 TSC21 - set baro rate at 50Hz (averaging the PX4 baro drivers ODR)
94d16e6 2020-02-25 TSC21 - update magnetometer rate to 100Hz (fitting the ODR in most of the support PX4 mag drivers)
6cae120 2020-02-25 TSC21 - mavlink_interface: send HIL_SENSOR messages with the bitmask correctly defined IOT set each sensor stream rate separately",X,increase

"PX4-Autopilot
"," #711
",[9cd8bb4f889f1cda33941a99056061b0e5d2b9bf](https://github.com/PX4/PX4-Autopilot/commit/9cd8bb4f889f1cda33941a99056061b0e5d2b9bf),"sensors: move to WQ

Running the sensors module out of the same WQ thread as the estimator, position, and attitude controllers is a bit safer and prevents potential priority and starvation issues. There is a very small increase in latency (~50 us) between sensors and ekf2 execution (on average). This also saves a little bit of memory (~ 3 kB) and cpu (~1-1.5% depending on the board).",X,memory

"PX4-Autopilot
"," #712
",[46a09b711f1d669ee130de38c3988189638b98e7](https://github.com/PX4/PX4-Autopilot/commit/46a09b711f1d669ee130de38c3988189638b98e7),boards: increase STDIO buffer size where we can afford it,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #713
",[4b9e6964f4d3b620b685744e32b162c5cb22c600](https://github.com/PX4/PX4-Autopilot/commit/4b9e6964f4d3b620b685744e32b162c5cb22c600),uavcan:Support runtime setting of CAN interfaces,X,runtime

"PX4-Autopilot
"," #714
",[39e473f988638e1ca35c958334fbbfe62c99dfbf](https://github.com/PX4/PX4-Autopilot/commit/39e473f988638e1ca35c958334fbbfe62c99dfbf),"Gazebo plane model: Enable tighter turns
This helps to fly smaller / faster test missions.",X,faster

"PX4-Autopilot
"," #715
",[1bf791ba3fc2f1230a6ef950dd6e17c3d5b869c0](https://github.com/PX4/PX4-Autopilot/commit/1bf791ba3fc2f1230a6ef950dd6e17c3d5b869c0),"MC_HTE: Stability improvements

- Use a low-passed value of the signed innovation test ratio to trigger
the state variance boost. The threshold of 0.2 has been chosen using log
replay and simulation scenarii.
- Do not reset the learned accel noise during a state variance boost.
After a few tests, this does not seem to help at all.
- Continue to learn the accel noise even if the measurement got rejected
to avoid ignoring sudden changes of noise
- Lower the acceleration noise time constant and increase min/max
values to avoid learning quickly a small variance that could temporarly
destabilize the filter
- Update filter time constants. Increasing the speed of the residual lpf
improves the quality of the learned accel noise","New:unstable_and_slow_noise_handling
New:General:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #716
",[6ccf55b6fd67d8cc93c7cf0b5cffcba724b15fef](https://github.com/PX4/PX4-Autopilot/commit/6ccf55b6fd67d8cc93c7cf0b5cffcba724b15fef),"MPC: add updateHoverThrust function

This function updates the vertical velocity integrator with the change
in hover thrust to avoid propagating discontinuities through the
controller when changing the hover thrust.
This is also important when using the hover thrust estimator as its
estimate has unconstrained dynamics and can cause drops or kicks when
the estimate updates faster than the velocity integrator.",X,faster

"PX4-Autopilot
"," #717
",[f851f65f8dd0a9281aad7dcf57ceeb370ebad487](https://github.com/PX4/PX4-Autopilot/commit/f851f65f8dd0a9281aad7dcf57ceeb370ebad487),"i2c spi: add type to I2CSPIInstance

Needed to distinguish runtime instance types of the same driver (e.g.
bmi055 accel vs gyro).",X,runtime

"PX4-Autopilot
"," #718
",[83b6f6456b89feebaf3f3ca35edfda3e1664e890](https://github.com/PX4/PX4-Autopilot/commit/83b6f6456b89feebaf3f3ca35edfda3e1664e890),"refactor I2CSPIInstance: store running instances in a global linked list

instead of a static per-driver array.

Reduces BSS RAM usage by a couple of 100 Bytes (linear increase with num
drivers).

Downsides:
- a bit more runtime overhead
- less isolation, locking required
- a bit more complex",X,runtime

"PX4-Autopilot
"," #719
",[8f3ba81c4ab3b6173de5bc0e36b2421d97ba58d0](https://github.com/PX4/PX4-Autopilot/commit/8f3ba81c4ab3b6173de5bc0e36b2421d97ba58d0),"refactor atxxxx: use driver base class

and increase update rate to 20Hz","New:Fixed_Communication_Rate
New:General:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #720
",[3233e0794d0856ace2016133983bfc726409276a](https://github.com/PX4/PX4-Autopilot/commit/3233e0794d0856ace2016133983bfc726409276a),"navigator: fix edge case with valid idle setpoint

This is an attempt to fix an edge case in the triplet publication which
can lead to crashes on autopilots with slow SD cards.

The sequence of events before this patch is:
1. Switch to POSCTL when disarmed. At this point current valid with
   setpoint idle is published.
2. Arm, takeoff, and fly using joystick/RC.
3. Switch to RTL (or trigger RTL using RC loss). At this point the
   setpoint is valid but still idle and the motors will shut off.
4. Once navigator has published the new setpoint (which can take up to
   1.5 seconds on slow SD cards) we will hopefully recover.

With this patch we omit this edge case, so we never publish this idle
setpoint when landed. The assumption is that this idle setpoint is no
longer required with the current flight task code, however, that needs
to be further verified.",X,slow

"PX4-Autopilot
"," #721
",[8738c26426c243040dd02cf546096bc81bd97b6a](https://github.com/PX4/PX4-Autopilot/commit/8738c26426c243040dd02cf546096bc81bd97b6a),"boards: enable NuttX SPI DMA buffers

 - update to NuttX with stm32f4 and stm32f7 SPI DMA internal buffers

 - remove explicit DMA buffer allocations from new IMU drivers

 - restore original BOARD_DMA_ALLOC_POOL_SIZE

 - decrease SPI DMA thresholds based on fmu-v2/v3/v4/v5 bench testing",New:General:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #722
",[404e781cd9b4a8b66f5a230f0cbfa0da62aeb15e](https://github.com/PX4/PX4-Autopilot/commit/404e781cd9b4a8b66f5a230f0cbfa0da62aeb15e),px4_work_queue: increase SPI stack uniformly to silence warnings,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #723
",[dc38930bb2232b4bc3b4481e42ab4538b1451789](https://github.com/PX4/PX4-Autopilot/commit/dc38930bb2232b4bc3b4481e42ab4538b1451789),"AutoSmoothVel: desynchronize XY from Z for small changes in speed

This fixes the issue that makes the drone slow-down even in straight
lines due to the Z component being constrained to a really small value",General:Hard-coding,slow

"PX4-Autopilot
"," #724
",[2b82b471c1ec4baf9fa4aeacb6788bf0109c1db4](https://github.com/PX4/PX4-Autopilot/commit/2b82b471c1ec4baf9fa4aeacb6788bf0109c1db4),sensor_accel_fifo increase to 32 samples,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #725
",[3bcd8c63f8cf8e9b7134dce435af9aec970db9bc](https://github.com/PX4/PX4-Autopilot/commit/3bcd8c63f8cf8e9b7134dce435af9aec970db9bc),"SMBus battery (a.k.a. smart battery) enhancement. (#14496)

 * Enhancement: State of health, and max_error value is added. Both shows battery health of SMBUS smart battery.

 * Enhancement: BAT_C_MULT parameter is introduced. This is for high-current capable SMBUS-based battery.

As SMBUS only provides 16-bit for current, it could only be +-32768mA which is about +-32A.

But with proper treatment, it could be extended with little accuracy loss.

This factor can be set for individual battery system with available information.

    * Relative SOC introduced. Proper SMBUS battery should provide percentage of remaining battery

directly. Therefore it does not have to be computed like before.

    * State of Health introduced. Proper SMBUS battery should provide SOH value.

    * Max error: this shows estimation error of BMS.

 * Enhancement: With smart battery, precise estimation of time remaining is provided

with impedance track. It is unit of minute, so 60 seconds multiplied.

Update rate of this is not fast, but very useful.



Co-authored-by: Hyon Lim <lim@uvify.com>",X,fast

"PX4-Autopilot
"," #726
",[0d8d4cd6e0e090a90537ac1265033f52b8ff3d86](https://github.com/PX4/PX4-Autopilot/commit/0d8d4cd6e0e090a90537ac1265033f52b8ff3d86),"SITL configs: improve L1 tracking and increase backtransition duration
-decrease L1 period for tighter mission tracking in fw mode
- increase backtransition duration, we can now do this is we have active
deceleration control

Signed-off-by: RomanBapst <bapstroman@gmail.com>",X,increase

"PX4-Autopilot
"," #727
",[0a7cde48197f2cfd6c1dcd14f70de0b11599585c](https://github.com/PX4/PX4-Autopilot/commit/0a7cde48197f2cfd6c1dcd14f70de0b11599585c),"arch.sh: use binary repository for gazebo

This makes installation a lot faster and less error prone.",X,faster

"PX4-Autopilot
"," #728
",[a89bba470a289e4369b325a8ad7fbd30f3e967d2](https://github.com/PX4/PX4-Autopilot/commit/a89bba470a289e4369b325a8ad7fbd30f3e967d2),"boards: STM32F76xxx/STM32F77xxx linker add ITCM RAM and .ramfuncs handling

 - this doesn't currently change anything, but gets us ready to start
experimenting with using the small amount of instruction tightly memory
on STM32F7
 - the .ramfuncs section works with NuttX CONFIG_ARCH_RAMFUNCS",X,memory

"PX4-Autopilot
"," #729
",[66eacd24bc8ba26f6d22a4596c16040e841d5dc3](https://github.com/PX4/PX4-Autopilot/commit/66eacd24bc8ba26f6d22a4596c16040e841d5dc3),"px4_fmu-v5_stackcheck: update stack sizes and add to Jenkins

 - increase stack sizes to run cleanly under stackcheck

     - this is likely overkill for most boards, but using stackcheck to set our minimum ensures we have a very safe margin on regular builds and it's something we can currently afford

 - remove holybro_durandal-v1_stackcheck from test rack (there's only one unit)",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #730
",[d5e0a52f3fcd5967ee07550feb9404354c8b1010](https://github.com/PX4/PX4-Autopilot/commit/d5e0a52f3fcd5967ee07550feb9404354c8b1010),Jenkins: increase history for remaining builds,"New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #731
",[7c7ee115e3bbbb51e1807dcee44b52f5f6fab088](https://github.com/PX4/PX4-Autopilot/commit/7c7ee115e3bbbb51e1807dcee44b52f5f6fab088),"boards: px4_io-v2 defconfig optimizations to save memory

* disable CONFIG_ARMV7M_MEMCPY to save flash

* disable CONFIG_LIB_BOARDCTL

* remove unnecessary pthread and task settings

* reduce preallocated watchdogs

* reduce console buffer size

* reduce IDLE thread stack

* reduce user main stack



Co-Authored-By: David Sidrane <David.Sidrane@Nscdg.com>","New:General:Hard-coded-fine-tuning
Smith:General:Unnecessary_Processing",memory

"PX4-Autopilot
"," #732
",[70329ce396dc9187144363c7433415bc059c4b57](https://github.com/PX4/PX4-Autopilot/commit/70329ce396dc9187144363c7433415bc059c4b57),"Update submodule nuttx to latest Sat Apr 25 12:38:14 UTC 2020

    - nuttx in PX4/Firmware (2c938af28051250f90baf7c411179b9b01dc5d0c): https://github.com/PX4/NuttX/commit/7fffab1610d2ea08a95383febd0579e0037b6b51
    - nuttx current upstream: https://github.com/PX4/NuttX/commit/66b4f2c4f2128994f8e8a908d4888f6d37565cfd
    - Changes: https://github.com/PX4/NuttX/compare/7fffab1610d2ea08a95383febd0579e0037b6b51...66b4f2c4f2128994f8e8a908d4888f6d37565cfd

    66b4f2c4f2 2020-04-21 Peter van der Perk - [Backport] Added S32K1XX progmem driver to use the FlexNVM memory
1b3fc1c668 2020-04-10 Peter van der Perk - Added net_trylock so we can call can_input while being in a interrupt handler",X,memory

"PX4-Autopilot
"," #733
",[97bdfd9cece22b71417af8d468f5a6117029dce3](https://github.com/PX4/PX4-Autopilot/commit/97bdfd9cece22b71417af8d468f5a6117029dce3),"Update submodule ecl to latest Mon Apr 27 12:39:40 UTC 2020

    - ecl in PX4/Firmware (27232514fcaf04924ecb405e144615c23ac6e2e0): https://github.com/PX4/ecl/commit/8a9d961f0d7b0cf6371ab1fcd6d0d2ccb581d3d1
    - ecl current upstream: https://github.com/PX4/ecl/commit/8b6d665a1331f94091caf2f262e09d508eb8975c
    - Changes: https://github.com/PX4/ecl/compare/8a9d961f0d7b0cf6371ab1fcd6d0d2ccb581d3d1...8b6d665a1331f94091caf2f262e09d508eb8975c

    8b6d665 2020-04-26 kamilritz - Avoid subtraction of two uint
70d65ea 2020-04-16 kamilritz - Test:Increase GPS jump need for rejection
c19f40e 2020-04-15 Kamil Ritz - Add reset position test for GPS and VISION
78a6b9f 2020-04-15 Kamil Ritz - SensorSimulator: Fix GPS horizontal position step
050298f 2020-04-08 Kamil Ritz - Improve matrix library usage
5749273 2020-04-08 Kamil Ritz - refactor resetPosition",X,increase

"PX4-Autopilot
"," #734
",[682aa700bb6da790969906ebe925b1be6dbb4a2c](https://github.com/PX4/PX4-Autopilot/commit/682aa700bb6da790969906ebe925b1be6dbb4a2c),px4_work_queue: increase wq:attitude_ctrl stack,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #735
",[1175c08829a44c5b69fa843baa88845984446fb4](https://github.com/PX4/PX4-Autopilot/commit/1175c08829a44c5b69fa843baa88845984446fb4),"bmm150: more explicit data conversion & reduce to 30Hz

- 30Hz is the sensors max update rate in continous mode
  (though not in forced mode as we are using it)
- 30Hz allows to increase the quality of the measurements","New:Fixed_Communication_Rate
New:General:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #736
",[71b942392d3cff66bbf006b3d14ab35bcd4b8028](https://github.com/PX4/PX4-Autopilot/commit/71b942392d3cff66bbf006b3d14ab35bcd4b8028),"bmm150: cleanup, slightly increase data accuracy

- increased REP_XY and REP_Z: improves accuracy a bit, while increasing
  measurement time (still allows to go to 50Hz, previous max was 100Hz)
- avoid extra transfer in measure()
- extend regdump output
- general code style cleanup",X,increase

"PX4-Autopilot
"," #737
",[6d846143dc7461d9a8ca4fd377763a9f1c04d55c](https://github.com/PX4/PX4-Autopilot/commit/6d846143dc7461d9a8ca4fd377763a9f1c04d55c),"pwm_out: update pwm outputs up to twice as fast as actual pwm frequency

 - this is done to minimize real end-to-end latency
 - actual pulse width only updated for next period regardless of output module
 - add cycle interval perf counter",New:Fixed_Communication_Rate,fast

"PX4-Autopilot
"," #738
",[b933557f56c7287d4338b3f112310eb2a999431d](https://github.com/PX4/PX4-Autopilot/commit/b933557f56c7287d4338b3f112310eb2a999431d),"Update submodule ecl to latest Tue May 12 00:39:54 UTC 2020

    - ecl in PX4/Firmware (286bf4f0b911fcc040788117ea79c432f6a95a83): https://github.com/PX4/ecl/commit/97b437233e6aad5ddb8a4511697a38ced7bc9b87
    - ecl current upstream: https://github.com/PX4/ecl/commit/03191847f9c162dedc2cb45ff775b75cbc9c8b36
    - Changes: https://github.com/PX4/ecl/compare/97b437233e6aad5ddb8a4511697a38ced7bc9b87...03191847f9c162dedc2cb45ff775b75cbc9c8b36

    0319184 2020-05-11 kritz - Fix ev_pos_obs_var(1) entry (#809)
440383f 2020-05-09 Kamil Ritz - Increase matrix library usage and remove white line",X,increase

"PX4-Autopilot
"," #739
",[3897030c6f378ad5e4e911c111d654a454d3838a](https://github.com/PX4/PX4-Autopilot/commit/3897030c6f378ad5e4e911c111d654a454d3838a),"Support odometry velocity in body and local frame (#14703)

* Update submodule ECL



* increase lower bound on EVV param",X,increase

"PX4-Autopilot
"," #740
",[9c6f42a8676f5d6250869d1851828e420f491219](https://github.com/PX4/PX4-Autopilot/commit/9c6f42a8676f5d6250869d1851828e420f491219),"v5x defconfig: increase TELEM2 UART TX buffer size to 3000

Required for very high-rate log streaming @3MBit baudrate.","New:Fixed_Communication_Rate
New:General:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #741
",[8ee0a5d328ebe59ce65d37bbe48ab4e10fbe1665](https://github.com/PX4/PX4-Autopilot/commit/8ee0a5d328ebe59ce65d37bbe48ab4e10fbe1665),"px4_work_queue: minor status changes

 - only record start time on first run rather than init
 - increase name length
 - round average interval to nearest microsecond
 - basic formatting consistency (google style guide)",X,increase

"PX4-Autopilot
"," #742
",[05856c102949841387c0fc510f6e5e357f8f66fc](https://github.com/PX4/PX4-Autopilot/commit/05856c102949841387c0fc510f6e5e357f8f66fc),ROMFS: holybro s500 decrease filter defaults,New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #743
",[0ec48cfef369bce210a32bcc9c0def35c1b0ec45](https://github.com/PX4/PX4-Autopilot/commit/0ec48cfef369bce210a32bcc9c0def35c1b0ec45),ekf2: increase default baro noise 2 -> 3.5 m,"New:Hard-coded-fine-tuning
New:unstable_and_slow_noise_handling",increase

"PX4-Autopilot
"," #744
",[11585dfb6756fc6a27058a19d0604c6baf7b8aab](https://github.com/PX4/PX4-Autopilot/commit/11585dfb6756fc6a27058a19d0604c6baf7b8aab),ekf2: decrease default GPS horizontal velocity noise,"New:Hard-coded-fine-tuning
New:unstable_and_slow_noise_handling",decrease

"PX4-Autopilot
"," #745
",[31fe7af45453394feda9d253fb056be9ba7a1999](https://github.com/PX4/PX4-Autopilot/commit/31fe7af45453394feda9d253fb056be9ba7a1999),"selectively increase optimization -Os -> -O2

 - targetted at modules/libraries that benefit without drastically
increasing flash usage
 - ignored on boards with CONSTRAINED_FLASH set",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #746
",[a1b0634258b8c35c847e2ce681c6907992e99c28](https://github.com/PX4/PX4-Autopilot/commit/a1b0634258b8c35c847e2ce681c6907992e99c28),"Jenkins HIL test fix sensor timeouts

 - stop logger when running tests
 - decrease test priorities
 - hrt test don't flush output",X,decrease

"PX4-Autopilot
"," #747
",[5286ed3a1179900ed2a15cd98bcf5910781fe9e4](https://github.com/PX4/PX4-Autopilot/commit/5286ed3a1179900ed2a15cd98bcf5910781fe9e4),"imu/invensense/mpu6000: minor improvements

 - at start perform full sensor signal path reset and wait for max time
 - issue full sensor reset on any error
 - only allocate DRDY perf counter if GPIO is available
 - allow running faster than accel ODR (safe limit of 2 kHz in place)","New:Fixed_Communication_Rate
New:General:Hard-coded-fine-tuning
New:Hard-coded-timing",faster

"PX4-Autopilot
"," #748
",[10afcdce2e9a49d7a2e54999414e200abc816a3d](https://github.com/PX4/PX4-Autopilot/commit/10afcdce2e9a49d7a2e54999414e200abc816a3d),Hex/Proficnc Cube Yellow: align firmware location in flash memory to be able to use the default bootloader,X,memory

"PX4-Autopilot
"," #749
",[588d551098bd238d26f49f2c74bb4676ba64eda4](https://github.com/PX4/PX4-Autopilot/commit/588d551098bd238d26f49f2c74bb4676ba64eda4),"mc_pos_control_params: set the ground slow down speed to the default maximum speed

This results in no change with defaults but a slow down to 10m/s if the maxiumum speed is set higher than that.",X,slow

"PX4-Autopilot
"," #750
",[be2081a2a2101dc9a7761b350c1b08b662f42a03](https://github.com/PX4/PX4-Autopilot/commit/be2081a2a2101dc9a7761b350c1b08b662f42a03),wq:attitude_ctrl small stack increase,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #751
",[0eea814ca1874b802a4093ed5702c5f79b6c9e61](https://github.com/PX4/PX4-Autopilot/commit/0eea814ca1874b802a4093ed5702c5f79b6c9e61),decrease all wq:SPIx stack,New:General:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #752
",[dc69d9976428131c99f1c242af98886ad3dafec2](https://github.com/PX4/PX4-Autopilot/commit/dc69d9976428131c99f1c242af98886ad3dafec2),add support to FastRTPS 2.0.0 (Fast-DDS),X,fast

"PX4-Autopilot
"," #753
",[38588f0c37f4512ab4c5f32d2ce4efc838dede46](https://github.com/PX4/PX4-Autopilot/commit/38588f0c37f4512ab4c5f32d2ce4efc838dede46),"Update submodule ecl to latest Tue Jun 30 00:38:47 UTC 2020

    - ecl in PX4/Firmware (bd4d3f2b9929271b2616d2e1d6952059a7e8bc72): https://github.com/PX4/ecl/commit/e4b44f704bb641fa93bedc81734c5249fcd9ed42
    - ecl current upstream: https://github.com/PX4/ecl/commit/5356077a3244a9a29adfae4aeaaab900cd28e9e8
    - Changes: https://github.com/PX4/ecl/compare/e4b44f704bb641fa93bedc81734c5249fcd9ed42...5356077a3244a9a29adfae4aeaaab900cd28e9e8

    5356077 2020-06-21 kamilritz - Make flow_innov/-var a matrix Vector2f
c2801eb 2020-06-21 kamilritz - Add const modifier and increase matrix library usage
d9afc2f 2020-06-21 kamilritz - Remove repeated division by same value
d16b43a 2020-06-21 kamilritz - Get rid of non functional piece of code
c3653e6 2020-06-21 kamilritz - Add const modifier
48f0eb1 2020-06-21 kamilritz - Remove uninformative comments
4a69b41 2020-06-21 kamilritz - Increase matrix library usage even more
630be60 2020-06-21 kamilritz - Increase matrix library usage
22274b1 2020-06-21 kamilritz - Add const modifier
61c139e 2020-06-21 kamilritz - Remove unused variable
afd4f3f 2020-06-21 kamilritz - Fix typo
a3706fd 2020-06-21 kamilritz - Make relative wind computation more compact
b8f9376 2020-06-21 kamilritz - Make mag_innov/-var a Matrix::Vector3f
0ea7cd8 2020-06-25 Kamil Ritz - Attempt to fix CI firmware build test
2927132 2020-06-25 Daniel Agar - clang-format set BreakBeforeBraces to Linux style
b96c62e 2020-06-25 sevenbill - Optionalized build dependency on git
794e6ec 2020-06-25 Bill Morris - Enforce tabs via editorcofig",X,increase

"PX4-Autopilot
"," #754
",[96a6b5c914afa44a01aa782944dce034ce6b4a2b](https://github.com/PX4/PX4-Autopilot/commit/96a6b5c914afa44a01aa782944dce034ce6b4a2b),"load_mon: decrease warning threshold for stack check builds

 - enabling stack check increases stack usage and will assert if there's
any overflow",X,decrease

"PX4-Autopilot
"," #755
",[4ad7ea6c1a7e8e2837e24dcd2c9546486e19de80](https://github.com/PX4/PX4-Autopilot/commit/4ad7ea6c1a7e8e2837e24dcd2c9546486e19de80),"mavsdk_tests: increase the poll time resolution

With only 10 steps for e.g. 60 seconds we are likely to miss updates.",X,increase

"PX4-Autopilot
"," #756
",[079c5a11c2e2eefe88cd1bf7a9a92b74a1222cf5](https://github.com/PX4/PX4-Autopilot/commit/079c5a11c2e2eefe88cd1bf7a9a92b74a1222cf5),"FlightTaskAuto: allow rc assist to stop descend

Before the autohority was only enough to slow down the descend but not
stop to zero vertical velocity.",X,slow

"PX4-Autopilot
"," #757
",[fd66d429064bf7f515431873e9efa28d1cf6a070](https://github.com/PX4/PX4-Autopilot/commit/fd66d429064bf7f515431873e9efa28d1cf6a070),"load_mon updates

 - increase rate
 - cpu load calculation grab timestamp atomically
 - only check one task per cycle (but cycle at a higher rate)
 - decrease available FD threshold
 - minor cleanup",X,increase

"PX4-Autopilot
"," #758
",[bdb4251fa4a8f758b00c03f76f48cc621772bf1b](https://github.com/PX4/PX4-Autopilot/commit/bdb4251fa4a8f758b00c03f76f48cc621772bf1b),"fw_pos_control_l1: if using air data (baro) copy every cycle

 - vehicle_air_data won't necessary have an update every iteration and these adjusted throttle values aren't stored

 - this only would have worked in the past because the vast majority of systems were using the ms5611 barometer with a publication rate that's faster than the controller",X,faster

"PX4-Autopilot
"," #759
",[42493b3d59d9a7f69e43ff74b81810d78cd73856](https://github.com/PX4/PX4-Autopilot/commit/42493b3d59d9a7f69e43ff74b81810d78cd73856),"logger: add full commander and safety logging by default

 - increase battery_status rate to be useful","New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #760
",[b54dea0ccdec72290733233ffb439de82756febe](https://github.com/PX4/PX4-Autopilot/commit/b54dea0ccdec72290733233ffb439de82756febe),wq:attitude_ctrl: small stack increase to silence warning,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #761
",[26021b01cb68c3d1b77ff1db1adae07f793bab00](https://github.com/PX4/PX4-Autopilot/commit/26021b01cb68c3d1b77ff1db1adae07f793bab00),"Tools: abort SITL start if gzserver fails

Sometimes gzserver seems to not start or not start fast enough. In this
case, instead of stalling forever, it would be nice to abort.",X,fast

"PX4-Autopilot
"," #762
",[9426c68a13fd9c167352dea864672e03307fa9c1](https://github.com/PX4/PX4-Autopilot/commit/9426c68a13fd9c167352dea864672e03307fa9c1),"cmake: only allow gold linker for posix builds

 - the gold linker doesn't currently work for NuttX builds
 - NuttX skip --print-memory-usage if using the GOLD linker
 - fixes #15400",X,memory

"PX4-Autopilot
"," #763
",[1b30bd328e3d40170f1e875b52813b4af65d1acb](https://github.com/PX4/PX4-Autopilot/commit/1b30bd328e3d40170f1e875b52813b4af65d1acb),logger: decrease try subsribe interval 1000 ms -> 20 ms,"New:Fixed_Communication_Rate
New:General:Hard-coded-fine-tuning",decrease

"PX4-Autopilot
"," #764
",[e4fa7597f4916185d0b1e97bc334b605fcde713c](https://github.com/PX4/PX4-Autopilot/commit/e4fa7597f4916185d0b1e97bc334b605fcde713c),"logger: SDLOG_PROFILE remove estimator replay from default to minimize log rate

 - log full sensor_combined by default for now

 - small decrease to input_rc rate (manual_control_setpoint is no longer filtered)

 - sensor_correction can be logged at full rate (low publication rate)",X,decrease

"PX4-Autopilot
"," #765
",[3345bf39b8d990acf817a27750ca1142689ab565](https://github.com/PX4/PX4-Autopilot/commit/3345bf39b8d990acf817a27750ca1142689ab565),"cdev: remove unnecessary virtuals and increase opt level

 - poll, poll_notify, register_class_devname, unregister_class_devname aren't virtual
 - increase max optimization level on platforms that aren't flash constrained (MAX_CUSTOM_OPT_LEVEL)",X,increase

"PX4-Autopilot
"," #766
",[0c91a29c3f401ebe567ff25ba6a21e95c5be507a](https://github.com/PX4/PX4-Autopilot/commit/0c91a29c3f401ebe567ff25ba6a21e95c5be507a),wq:attitude_ctrl increase stack,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #767
",[ad3e6ee5ddeb534d04392ae614c7bcfc9c2f8f01](https://github.com/PX4/PX4-Autopilot/commit/ad3e6ee5ddeb534d04392ae614c7bcfc9c2f8f01),wq:attitude_ctrl increase stack by 16 bytes (again),New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #768
",[7958586f35e31b8f2a17e2dcfde010ac36f7a5b8](https://github.com/PX4/PX4-Autopilot/commit/7958586f35e31b8f2a17e2dcfde010ac36f7a5b8),"Only use roll/pitch not centered for RC override, and increase override threshold",New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #769
",[2bb04f2261c75cb48d36ed9f826414871ccfaf2b](https://github.com/PX4/PX4-Autopilot/commit/2bb04f2261c75cb48d36ed9f826414871ccfaf2b),"commander: increase COM_ARM_MAG_ANG 35 -> 45 degrees

 - in practice this is mostly useful for identifying incorrect rotations
which we mostly have in 45 degree increments
 - handling a vehicle on the ground can easily disturb one mag by more than 30 degrees, so this is often distracting noise","New:unstable_and_slow_noise_handling
New:General:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #770
",[dd9676b73e0ffb79a4bfd4afd7cb97c8689e0de0](https://github.com/PX4/PX4-Autopilot/commit/dd9676b73e0ffb79a4bfd4afd7cb97c8689e0de0),boards: px4/fmu-v5_debug increase interrupt stack 512 -> 768 bytes,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #771
",[7c2bb6a983509ae4ba5133898b76f9f373122a91](https://github.com/PX4/PX4-Autopilot/commit/7c2bb6a983509ae4ba5133898b76f9f373122a91),Jenkins: hardware increase timeout,X,increase

"PX4-Autopilot
"," #772
",[3fa9ff6d20ba33ebc4d6e888bfd703da5612a7f3](https://github.com/PX4/PX4-Autopilot/commit/3fa9ff6d20ba33ebc4d6e888bfd703da5612a7f3),boards: px4_fmu-v5_debug increase LPWORK stack 1632 -> 1728 bytes,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #773
",[e906106ea267450b706f0e80d294b8c5acb16135](https://github.com/PX4/PX4-Autopilot/commit/e906106ea267450b706f0e80d294b8c5acb16135),gps: fix memory leak on module exit (delete _helper),General:C:not_deallocating,memory

"PX4-Autopilot
"," #774
",[a5a577a6c469b52bfb84f56349f4231e637b2141](https://github.com/PX4/PX4-Autopilot/commit/a5a577a6c469b52bfb84f56349f4231e637b2141),"mavsdk_tests: use speed factor, increase timeouts

We had not actually properly adjusted the timeout to the lockstep speed
factor. Once we did that, we had to increase the timeouts quite a bit to
have the tests pass.",X,increase

"PX4-Autopilot
"," #775
",[f8f03835ad76529a70f8225d21f82f59a4996570](https://github.com/PX4/PX4-Autopilot/commit/f8f03835ad76529a70f8225d21f82f59a4996570),"mavsdk_tests: increase timeouts yet again

This is after using PX4 time to check for timeouts.",X,increase

"PX4-Autopilot
"," #776
",[d2cb27e0de2fc9d447a4557e2e1ab1d58e9ad098](https://github.com/PX4/PX4-Autopilot/commit/d2cb27e0de2fc9d447a4557e2e1ab1d58e9ad098),mavsdk_tests: try with faster RC rate,X,faster

"PX4-Autopilot
"," #777
",[012763e5f1876c27f0dbbfd2029888755c7d59a0](https://github.com/PX4/PX4-Autopilot/commit/012763e5f1876c27f0dbbfd2029888755c7d59a0),"mavsdk_tests: fly forward a bit longer

Hopefully, that's long enough for slow VTOLs.",X,slow

"PX4-Autopilot
"," #778
",[44b4a6eb74c407fb26923ed36714bd80944a409b](https://github.com/PX4/PX4-Autopilot/commit/44b4a6eb74c407fb26923ed36714bd80944a409b),mavsdk_tests: increase time for manual tests,X,increase

"PX4-Autopilot
"," #779
",[d676e65294b27b592e06381a12b0f3b40b6139f0](https://github.com/PX4/PX4-Autopilot/commit/d676e65294b27b592e06381a12b0f3b40b6139f0),logger: log_writer_file increase stack 1170 -> 1472 bytes (#15765),New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #780
",[0dc8bb9c864dc49bbbe255ea0177480b46522d7d](https://github.com/PX4/PX4-Autopilot/commit/0dc8bb9c864dc49bbbe255ea0177480b46522d7d),"uORB: increase ORB_MULTI_MAX_INSTANCES 4 -> 10

 - put more realistic bounds on maximum number of battery instances, gps, etc",X,increase

"PX4-Autopilot
"," #781
",[60252dde08ac33a97bda3b8497035483b250097b](https://github.com/PX4/PX4-Autopilot/commit/60252dde08ac33a97bda3b8497035483b250097b),"Jenkins: SITL tests disable ninja build to reduce build parallelism

 - test slaves have limited memory",X,memory

"PX4-Autopilot
"," #782
",[e792c46f20bb6709afc4a1151df29546b165d1d1](https://github.com/PX4/PX4-Autopilot/commit/e792c46f20bb6709afc4a1151df29546b165d1d1),mavlink: increase stack 2650 -> 2848 bytes (#15821),New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #783
",[c648d529090e3ba6f26b3e1bca3a03757ce3a758](https://github.com/PX4/PX4-Autopilot/commit/c648d529090e3ba6f26b3e1bca3a03757ce3a758),"uavcan: Increase uavcan main stack size

I observed stack overflows when executing `uavcan params list`, so the
stack size probably needs to be increased.

Signed-off-by: Alex Mikhalev <alexmikhalevalex@gmail.com>",General:Hard-coding,increase

"PX4-Autopilot
"," #784
",[84455ac9e35f872db88b67dce5b08be7923b9b00](https://github.com/PX4/PX4-Autopilot/commit/84455ac9e35f872db88b67dce5b08be7923b9b00),"logger: increase logging rate of airspeed_validated from 1Hz to 5Hz

Signed-off-by: Silvan Fuhrer <silvan@auterion.com>","New:Fixed_Communication_Rate
New:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #785
",[5c2cc531343638da15a9b33af804618e087d8d8e](https://github.com/PX4/PX4-Autopilot/commit/5c2cc531343638da15a9b33af804618e087d8d8e),"Revert ""logger: log_writer_file increase stack 1170 -> 1472 bytes (#15765)""

This reverts commit d676e65294b27b592e06381a12b0f3b40b6139f0.",New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #786
",[34ad85557e8ffc26dd882bfca186fbafb8126516](https://github.com/PX4/PX4-Autopilot/commit/34ad85557e8ffc26dd882bfca186fbafb8126516),"Revert ""mavlink: increase stack 2650 -> 2848 bytes (#15821)""

This reverts commit e792c46f20bb6709afc4a1151df29546b165d1d1.",New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #787
",[614a0ac2a20ac4292ff29b1def1eb8c79e84bfb1](https://github.com/PX4/PX4-Autopilot/commit/614a0ac2a20ac4292ff29b1def1eb8c79e84bfb1),"experimental/gyro_fft: improve peak detection, add start parameter

 - add new parameter `IMU_GYRO_FFT_EN` to start

 - add 75% overlap in buffer to increase FFT update rate

 - space out FFT calls (no more than 1 per cycle)

 - increase `IMU_GYRO_FFT_MIN` default

 - decrease main stack usage",New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #788
",[ea2fced6ad18fdc3ce7e0c63e69e92863780b982](https://github.com/PX4/PX4-Autopilot/commit/ea2fced6ad18fdc3ce7e0c63e69e92863780b982),"Tools/check_submodules.sh: always update if within vscode cmake configure

 - the interactive portion of check_git_submodule with hang waiting for user input",X,hang

"PX4-Autopilot
"," #789
",[e6ad321ab2df10b8585d4ae4140b5ff5765966a9](https://github.com/PX4/PX4-Autopilot/commit/e6ad321ab2df10b8585d4ae4140b5ff5765966a9),"gps: add GPS_{1,2}_PROTOCOL param to select protocol, default to u-blox

u-blox is the most widely used GPS, so module detection should be a bit
faster in general.",X,faster

"PX4-Autopilot
"," #790
",[91d1825fcf25bfe7f4f98379f0501bcde41ef51c](https://github.com/PX4/PX4-Autopilot/commit/91d1825fcf25bfe7f4f98379f0501bcde41ef51c),"Fix non-determinstic boot hang with crashdumps

On boot, if board_hardfault_init finds a hardfault stored in BBSRAM, it
checks if there is any data available on stdin to see if there is
somebody there to respond to a prompt. But on boards such as cubeorange
where there is not a serial console by default, the ioctl fails and
bytesWaiting is uninitialized. So it will non-deterministally hang the
boot process with no outside feedback if that value is not zero.

Signed-off-by: Alex Mikhalev <alexmikhalevalex@gmail.com>",X,hang

"PX4-Autopilot
"," #791
",[c60743b306a510a6e9059c96cc6b9c9c7d6ae702](https://github.com/PX4/PX4-Autopilot/commit/c60743b306a510a6e9059c96cc6b9c9c7d6ae702),boards: NuttX increase file name max 32 -> 40,X,increase

"PX4-Autopilot
"," #792
",[7ba73b46ca11cfb2167541d18a3e353681f43305](https://github.com/PX4/PX4-Autopilot/commit/7ba73b46ca11cfb2167541d18a3e353681f43305),"uORB: tests decrease stack

 - save a bit of memory for running on older boards",New:General:Hard-coded-fine-tuning,memory

"PX4-Autopilot
"," #793
",[963d101375d3dc6646b3d0e2fe432e4706a32fa1](https://github.com/PX4/PX4-Autopilot/commit/963d101375d3dc6646b3d0e2fe432e4706a32fa1),boards: fmu-v5 debug and stackcheck increase interrupt stack,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #794
",[ad4068f472e8c8416899d3437f5892f86956d126](https://github.com/PX4/PX4-Autopilot/commit/ad4068f472e8c8416899d3437f5892f86956d126),"platforms/posix: mlockall() support

 * add basic mlock support to increase stability when system is under high load and RAM is almost full

 * mainly about minimizing or completely eliminating RAM page swap time",X,increase

"PX4-Autopilot
"," #795
",[ed8a30d73ef3306b5bc18f8993600e5d0f85e148](https://github.com/PX4/PX4-Autopilot/commit/ed8a30d73ef3306b5bc18f8993600e5d0f85e148),"mavlink: STATUSTEXT directly use mavlink_log subscription

 - ORB_ID(mavlink_log) increase queue depth now that mavlink ringbuffer is gone",X,increase

"PX4-Autopilot
"," #796
",[e1168070d1065d406af90f37c36baef33e7312cf](https://github.com/PX4/PX4-Autopilot/commit/e1168070d1065d406af90f37c36baef33e7312cf),mavlink: decrease task stack,New:General:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #797
",[e69aea0a9bc830bbdae38d2325de45fd6279c2a0](https://github.com/PX4/PX4-Autopilot/commit/e69aea0a9bc830bbdae38d2325de45fd6279c2a0),parameters: don't keep in memory if set to default,X,memory

"PX4-Autopilot
"," #798
",[229f02a4f9491ca557b83f7e36160821b825e362](https://github.com/PX4/PX4-Autopilot/commit/229f02a4f9491ca557b83f7e36160821b825e362),mtd:Reduce functionality on memory constrained systems,X,memory

"PX4-Autopilot
"," #799
",[8d8a31c56da788792490e7a275d2eff237edc831](https://github.com/PX4/PX4-Autopilot/commit/8d8a31c56da788792490e7a275d2eff237edc831),WorkQueueManager:Increase stack size,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #800
",[1dd22acd128622550bc6c074c3704d7da254bbac](https://github.com/PX4/PX4-Autopilot/commit/1dd22acd128622550bc6c074c3704d7da254bbac),nxp_fmurt1062-v1:Fix memory overflow,X,memory

"PX4-Autopilot
"," #801
",[0433f4d33c27c066d4d710317256eab396228d9a](https://github.com/PX4/PX4-Autopilot/commit/0433f4d33c27c066d4d710317256eab396228d9a),land_detector: decrease default LNDFW_AIRSPD_MAX 8 -> 6 m/s,New:Hard-coded-fine-tuning,decrease

"PX4-Autopilot
"," #802
",[690c1158addf03cfd29be10945dca644707309e7](https://github.com/PX4/PX4-Autopilot/commit/690c1158addf03cfd29be10945dca644707309e7),"HTE: do not update the estimator during fast up/down motions

Drag and prop wash effects produce significant forces at high speed
that can bias the estimator when applied for an extended period of time",X,fast

"PX4-Autopilot
"," #803
",[c253badba4dfb52bc7e4a114d0f0646ccae320da](https://github.com/PX4/PX4-Autopilot/commit/c253badba4dfb52bc7e4a114d0f0646ccae320da),"HTE: remove dist_bottom validity check

Without range finder, the validity flag goes to false quite quickly and
if can be that a vehicle never starts HTE is the takeoff is too slow.
In this specific context of takeoff detection, since
the exact value is not important, we can safely ignore the validity flag.",X,slow

"PX4-Autopilot
"," #804
",[ec793615484370ab7fd1aacd42cc05c6a4b0ccb4](https://github.com/PX4/PX4-Autopilot/commit/ec793615484370ab7fd1aacd42cc05c6a4b0ccb4),"Update submodule sitl_gazebo to latest Mon Dec 21 00:39:43 UTC 2020

    - sitl_gazebo in PX4/Firmware (5868463d069eb652ff341427d3714133dde3c19d): https://github.com/PX4/PX4-SITL_gazebo/commit/563f0876a52d5c0fba1b7cd1aa420c613ec7025b
    - sitl_gazebo current upstream: https://github.com/PX4/PX4-SITL_gazebo/commit/4043287bbe07a9d091d579b755796e70d45058e8
    - Changes: https://github.com/PX4/PX4-SITL_gazebo/compare/563f0876a52d5c0fba1b7cd1aa420c613ec7025b...4043287bbe07a9d091d579b755796e70d45058e8

    4043287 2020-12-20 Silvan Fuhrer - tiltrotor: increase wing area to 0.5 per side (#678)
f004811 2020-12-20 JaeyoungLim - Update mavsdk version for SITL tests (#673)",X,increase

"PX4-Autopilot
"," #805
",[565da15f2f8176999077fac1933a4d5ba7010080](https://github.com/PX4/PX4-Autopilot/commit/565da15f2f8176999077fac1933a4d5ba7010080),MAVSDK test: Increase timeout,X,increase

"PX4-Autopilot
"," #806
",[6c9072720e01b02c43b9077d648325d936b0f5da](https://github.com/PX4/PX4-Autopilot/commit/6c9072720e01b02c43b9077d648325d936b0f5da),"invensense/icm42688p: use full 20 bit data, increase ODR, disable all filters","New:Fixed_Communication_Rate
New:General:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #807
",[c6af260a41acaf3e3586465656953847bb349fe2](https://github.com/PX4/PX4-Autopilot/commit/c6af260a41acaf3e3586465656953847bb349fe2),log_message increase queue depth 2->4,New:Fixed_Communication_Rate,increase

"PX4-Autopilot
"," #808
",[70e503cb919928493ee6acefaf22ce0a529e2cdb](https://github.com/PX4/PX4-Autopilot/commit/70e503cb919928493ee6acefaf22ce0a529e2cdb),"rotation: use Dcmf for all rotations that aren't direct swaps

 - increase optimization to ${MAX_CUSTOM_OPT_LEVEL} (max per board)",X,increase

"PX4-Autopilot
"," #809
",[967d35a6b69cda58be5154598433ba8ce9afb73c](https://github.com/PX4/PX4-Autopilot/commit/967d35a6b69cda58be5154598433ba8ce9afb73c),"rate limit most parameter_update subscriptions

 - parameter updates can be quite expensive because they trigger nearly all modules to reload all of their parameters immediately

 - limit modules from updating faster than once per second",New:Fixed_Communication_Rate,faster

"PX4-Autopilot
"," #810
",[1ac70cc72f1409a84c78da809f35324a426f83de](https://github.com/PX4/PX4-Autopilot/commit/1ac70cc72f1409a84c78da809f35324a426f83de),can-gps-v1:Correct Memory size used by app and bootloader size,X,memory

"PX4-Autopilot
"," #811
",[037c8211421ce28b6b227bce26a138b42c2a67b3](https://github.com/PX4/PX4-Autopilot/commit/037c8211421ce28b6b227bce26a138b42c2a67b3),"ROMFS: increase max distance between waypoints for VTOL and FW to 5km

Signed-off-by: Silvan Fuhrer <silvan@auterion.com>",X,increase

"PX4-Autopilot
"," #812
",[920d6d84b5d7a046971e20f307a3fad6d45a1121](https://github.com/PX4/PX4-Autopilot/commit/920d6d84b5d7a046971e20f307a3fad6d45a1121),rtps: increase non-alias ID range by reducing the alias space ID,X,increase

"PX4-Autopilot
"," #813
",[0e86ab47f645415854915ca251ef237344f4469d](https://github.com/PX4/PX4-Autopilot/commit/0e86ab47f645415854915ca251ef237344f4469d),"fix control_allocator: use 'delete' instead of 'free', guard against out-of-memory",X,memory

"PX4-Autopilot
"," #814
",[cea8ad4236b77c36669d9208db1a4869773c32b5](https://github.com/PX4/PX4-Autopilot/commit/cea8ad4236b77c36669d9208db1a4869773c32b5),"Control Zero F7 - RSSI Fix - SBUS Only/PPM Partial

This fixes RSSI for the Control Zero F7 but I have noticed that while this works perfectly for SBUS receivers, for PPM receivers it does not decrease the RSSI visual value in QGC when removing the RC transmitter connection.



When a PPM receiver is connected and the connection is lost the autopilot goes into RC Scan Mode (in the RC Update Module) to determine what is connected (even though something already is connected).



The main issue with this is that PPM receivers don't go into RC Failsafe but I don't think it is an issue with this autopilot. It looks to be an issue with the RC Update Module and how it is handled at the module level for non I/O coprocessor autopilots.





Tested with an X8R (SBUS) and a Dragonlink (PPM) as well as a Dragonlink set to SBUS as the output. SBUS worked as intended. See screenshots below.",X,decrease

"PX4-Autopilot
"," #815
",[d5c7e243a9923ad1d31797aa16f1afe1bb80f5ea](https://github.com/PX4/PX4-Autopilot/commit/d5c7e243a9923ad1d31797aa16f1afe1bb80f5ea),"vehicle_command: increase queue depth 4 -> 8

 - prevent slower modules from missing commands","New:Fixed_Communication_Rate
New:Hard-coded-fine-tuning",slower

"PX4-Autopilot
"," #816
",[15cbe8c09aa2cdcbd26d4f9fe524e8ab17792d5b](https://github.com/PX4/PX4-Autopilot/commit/15cbe8c09aa2cdcbd26d4f9fe524e8ab17792d5b),px4_work_queue: wq:nav_and_controllers increase stack 1730 -> 1760 bytes,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #817
",[a4745c6825e0dc10356f8151f969d93345175e8f](https://github.com/PX4/PX4-Autopilot/commit/a4745c6825e0dc10356f8151f969d93345175e8f),"Simulator: Fix for arg count increase breaking remote host option.

The number of arguments was increased by one, see: https://github.com/PX4/PX4-Autopilot/commit/1719ff9892f3c3d034f2b44e94d15527ab09cec6

Because the above commit was merged before https://github.com/PX4/PX4-Autopilot/pull/15443 . It broke support for the remote host option.

This has been fixed in this commit by increasing all argv's by one.

Signed-off-by: Peter Blom <peterblom.mail@gmail.com>",X,increase

"PX4-Autopilot
"," #818
",[14cb98a6b4642751041b22c06c13654a828c0644](https://github.com/PX4/PX4-Autopilot/commit/14cb98a6b4642751041b22c06c13654a828c0644),Increase corridor check thresholds for mission tests,X,increase

"PX4-Autopilot
"," #819
",[27138578f09560eabb9461e5b72304e91f756b02](https://github.com/PX4/PX4-Autopilot/commit/27138578f09560eabb9461e5b72304e91f756b02),"Disable unmaintained MAVROS tests
The overhead of the MAVROS setup means that most developers are not using it, leading to tests that are not suitable for day-to-day workflows. We are replacing these with MAVSDK tests that can be run locally pre-commit.",X,overhead

"PX4-Autopilot
"," #820
",[0c74028976ef13697522bacbc6ac13effc898db3](https://github.com/PX4/PX4-Autopilot/commit/0c74028976ef13697522bacbc6ac13effc898db3),FMUK66 Decrease telnetd ram usage,X,decrease

"PX4-Autopilot
"," #821
",[e2e5fc85f8f3c3ad64eddf79ec20f702ed6e72ad](https://github.com/PX4/PX4-Autopilot/commit/e2e5fc85f8f3c3ad64eddf79ec20f702ed6e72ad),state_machine_helper: fix infinite delay with intermittent failsafes,X,infinite

"PX4-Autopilot
"," #822
",[44872807b370b7c319451290be19de0e5f1ff48a](https://github.com/PX4/PX4-Autopilot/commit/44872807b370b7c319451290be19de0e5f1ff48a),"MC auto: add parameter to set the trajectory slow-down

In some cases e.g.: (VTOL in wind) a good tracking cannot be
achieved. This condition then needs to be relaxed, otherwise the
drone cannot land properly.",X,slow

"PX4-Autopilot
"," #823
",[72e34e02ef28eaa6a46791d43897209d70753440](https://github.com/PX4/PX4-Autopilot/commit/72e34e02ef28eaa6a46791d43897209d70753440),VTOL defaults: increase tracking tolerance for VTOL planes,X,increase

"PX4-Autopilot
"," #824
",[f8989fe5aa376388a017ad33dbefc2b4763611f2](https://github.com/PX4/PX4-Autopilot/commit/f8989fe5aa376388a017ad33dbefc2b4763611f2),"mavlink: speed up ftp transfers on POSIX

Around 900 KB/s - not fast, but should be fast enough for the use-cases.",New:Fixed_Communication_Rate,fast

"PX4-Autopilot
"," #825
",[c63107bb5795b1a63ba320536c2fcc73fd144de1](https://github.com/PX4/PX4-Autopilot/commit/c63107bb5795b1a63ba320536c2fcc73fd144de1),"uORB: tests increase priorities to minimize failures with stackcheck/debug enabled

 - also relax the maximum mean by 50%",X,increase

"PX4-Autopilot
"," #826
",[b8b13bb882cbeed672addfd3140114d699b0b566](https://github.com/PX4/PX4-Autopilot/commit/b8b13bb882cbeed672addfd3140114d699b0b566),parameters runtime defaults,X,runtime

"PX4-Autopilot
"," #827
",[48b00ff67881f4f2cfeffa18980191e38f896fd3](https://github.com/PX4/PX4-Autopilot/commit/48b00ff67881f4f2cfeffa18980191e38f896fd3),"Support for gimbal v2 protocol

- add command to request a message
- add gimbal attitude message

mavlink_receiver handle GIMBAL_MANAGER_SET_ATTITUDE

first implementation of new vmount input MavlinkGimbalV2
- setup class
- decode gimbal_manager_set_attitude in ControlData

add gimbal information message

add gimbal manager information and vehicle command ack

mavlink messages: add stream for GIMBAL_MANAGER_INFORMATION

mavlink_receiver: handle GIMBAL_DEVICE_INFORMATION

remove mavlink cmd handling from vmount input MavlinkGimbalV2

complete gimbal manager:
- send out fake gimbal_device_information for dummy gimbals
- complete ROI handling with nudging

small fixes

fix typos

cleanup
- gimbal device information
- flags lock
- check sanity of string

add support for CMD_DO_GIMBAL_MANAGER_ATTITUDE

stream GimbalDeviceAttitudeStatus for dummy gimbals
- add uROB gimbal_attitude_status
- fill status in vmount output_rc for dummy gimbals not able to send the
status themselves
- stream mavlink GimbalDeviceAttitudeStatus

better handle the request for gimbal infomation request

clean up

bring gimbal information back on vmount init

add new gimbal message to mavlink normal stream

fix publication of gimbal device information

rename gimbal_attitude_status to gimbal_device_attitude_status

stream gimbal_manager_status at 5Hz

mavlink: send information only on request

Sending the information message once on request should now work and we
don't need to keep publishing it.

mavlink: debug output for now

make sure to copy over control data

mavlink: add missing copyright header, pragma once

mavlink: address review comments

mavlink: handle stream not updated

Our answer does not just depend on whether the stream was found but
whether we actually were able to send out an update.

mavlink: remove outdated comment

vmount: add option for yaw stabilization only

The stabilize flag is used for gimbals which do not have an internal IMU
and need the autopilot's attitude in order to do stabilization. These
gimbals are probably quite rare by now but it makes sense to keep the
functionality given it can e.g. be used by simple servo gimbals for
sensors other than highres cameras.

The stabilize flag can also be re-used for gimbals which are capable of
stabilizing pitch and roll but not absolute yaw (e.g. locked to North).
For such gimbals we can now set the param MNT_DO_STAB to 2.

We still support configuring which axes are stabilized by the
MAVLink command DO_MOUNT_CONFIGURE, however, this is generally not
recommended anymore.

vmount: fix incorrect check for bit flag

mavlink_messages: remove debug message

Signed-off-by: Claudio Micheli <claudio@auterion.com>

use device id

remove debug print

gimbal attitude fix mistake

clang tidy fix

split:
- gimbal_attitude -> gimbal_device_set_attitude, gimbal_manager_set_attitude
- gimbal_information -> gimbal_device_informatio, gimbal_manager_information

add gimbal protocol messages to rtps msg ids

support set attitude for gimbal directly speaking mavlink

clean up gimbal urob messages

vmount: address a few small review comments

vmount: split output into v1 and v2 protocol

This way we can continue to support the MAVLink v1 protocol. Also, we
don't send the old vehicle commands when actually using the new v2
protocol.

vmount: config via ctor instead of duplicate param

vmount: use loop to poll all topics

Otherwise we might give up too soon and miss some data, or run too fast
based on commands that have nothing to do with the gimbal.

typhoon_h480: use gimbal v2 protocol, use yaw stab

Let's by default use the v2 protocol with typhoon_h480 and enable yaw
lock mode by stabilizing yaw.",X,fast

"PX4-Autopilot
"," #828
",[17dce18b32a1f0fc3aa144a34ab03078bde1e161](https://github.com/PX4/PX4-Autopilot/commit/17dce18b32a1f0fc3aa144a34ab03078bde1e161),"mavlink: reduce GIMBAL_MANAGER_STATUS message rate

This was way too fast.","New:Fixed_Communication_Rate
New:General:Hard-coded-fine-tuning",fast

"PX4-Autopilot
"," #829
",[6672be040ae51a17546927d25a26127f2ec4c1da](https://github.com/PX4/PX4-Autopilot/commit/6672be040ae51a17546927d25a26127f2ec4c1da),mavlink: limit mavlink channels based on memory,General:Hard-coding,memory

"PX4-Autopilot
"," #830
",[8747b343d9e62f7234c436b4aa183ffb50e3cb89](https://github.com/PX4/PX4-Autopilot/commit/8747b343d9e62f7234c436b4aa183ffb50e3cb89),"Non-compliant nodes support

WorkQueueManager:Increase UAVCAN stack size",New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #831
",[8c2678bca12c7ade5ac0126a6d0738ebdb8998e7](https://github.com/PX4/PX4-Autopilot/commit/8c2678bca12c7ade5ac0126a6d0738ebdb8998e7),"uavcan_servers:Reworked file naming and use ROM fs as fall back

   Supporting direct down loads from ROMFS with preferece give to the
   files fould on the SD card first. This will allow a user to provide
   an updated uavcan firware on the SD card, and there is no overhead
   of coping files from the ROM FS to the SD card.",X,overhead

"PX4-Autopilot
"," #832
",[93b1a148b7b4df9eebe6ab261d0ce256ca9ee78f](https://github.com/PX4/PX4-Autopilot/commit/93b1a148b7b4df9eebe6ab261d0ce256ca9ee78f),"batt_smbus: Pass device address to base class

Fixes a warning printed at runtime

Signed-off-by: Alex Mikhalev <alex@corvus-robotics.com>",X,runtime

"PX4-Autopilot
"," #833
",[6bd4dff51fe241c08e46b3442f95f0efd783e1bf](https://github.com/PX4/PX4-Autopilot/commit/6bd4dff51fe241c08e46b3442f95f0efd783e1bf),"drivers/smbus: Increase max block size to 34

batt_smbus for BQ40Z80 transfers up to 34 bytes (32 byte block + 2 byte
address), but this was overflowing and failing the PEC check.
So increase the buffer size

Signed-off-by: Alex Mikhalev <alex@corvus-robotics.com>",X,increase

"PX4-Autopilot
"," #834
",[382e0cbaecfa7805edab25833902cf2cd6533170](https://github.com/PX4/PX4-Autopilot/commit/382e0cbaecfa7805edab25833902cf2cd6533170),px4_work_queue: increase wq:nav_and_controllers stack 1760->1824,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #835
",[4a65ad914864b607eb5b2dbb5e29759a74da2e39](https://github.com/PX4/PX4-Autopilot/commit/4a65ad914864b607eb5b2dbb5e29759a74da2e39),"github actions decrease max ccache size

 - lower compression level to 5 as recommended by ccache manual",X,decrease

"PX4-Autopilot
"," #836
",[e38560b928acac52c178b421e8fec46c4d47ddb7](https://github.com/PX4/PX4-Autopilot/commit/e38560b928acac52c178b421e8fec46c4d47ddb7),"sensor_calibration: increase threshold for updating calibration offsets or scale

 - this is to minimize needlessly writing negligible parameter changes and triggering unnecessary estimator bias resets","New:Hard-coded-fine-tuning
New:unstable_and_slow_noise_handling",increase

"PX4-Autopilot
"," #837
",[1be4163506021f44a5cc36bafd545ccf1a36feba](https://github.com/PX4/PX4-Autopilot/commit/1be4163506021f44a5cc36bafd545ccf1a36feba),"mc_pos_control_params: increase velocity limits a bit

I hit those on my vehicle",X,increase

"PX4-Autopilot
"," #838
",[836c7c65755ab8f0fd3b0fd42fb06bdb903721b4](https://github.com/PX4/PX4-Autopilot/commit/836c7c65755ab8f0fd3b0fd42fb06bdb903721b4),"StickAccelerationXY: brake a bit faster

The drag is based on max_acc/max_vel, which means that increasing the
maximum velocity leads to slower braking (at the same starting speed).

Especially a combination of small max_acc (slow responsiveness) with high
max_vel led to an exceedingly high braking distance.
This improves that while still being smooth.",X,slow

"PX4-Autopilot
"," #839
",[dd3c3098f2dde5e64d99cb0c0959ae10970b2cac](https://github.com/PX4/PX4-Autopilot/commit/dd3c3098f2dde5e64d99cb0c0959ae10970b2cac),"nxp_ucans32k146:Add Can Bootloader build

nxp_ucans32k146:Relocation for Bootloader

nxp_ucans32k146:can_boot enable CAN

nxp_ucans32k146:Save Space use Non Optimize memcpy

nxp_ucans32k146:Increase to 24K

nxp/ucans32k146:Canbootloader LED Driver

nxp_ucans32k146:Can bootloader shut down CAN

nxp_ucans32k146:Use NVMEEPROM for Paramaters

nxp_ucans32k146:Use bootloader AppDescriptor

px4 mtd:Support onchip emulated eeprom",X,increase

"PX4-Autopilot
"," #840
",[70ff6703b7a071216acf1424c42cac3f02b9f093](https://github.com/PX4/PX4-Autopilot/commit/70ff6703b7a071216acf1424c42cac3f02b9f093),"uavcan_v1: More work on subscribers and reg access

Now running into issues with running out of stack frame memory
For now I'm going to leave the relevant code in so it's at least
readable, but in its current state it will not compile",X,memory

"PX4-Autopilot
"," #841
",[b88e8b6684df34e85232860e4cc32baeb439c36e](https://github.com/PX4/PX4-Autopilot/commit/b88e8b6684df34e85232860e4cc32baeb439c36e),"uavcan_v1: Increase stack size

Also increases stack frame size limit, which was what the compiler was
throwing an error on.",General:Hard-coding,increase

"PX4-Autopilot
"," #842
",[4d9e88141e5f341c331e795cde0cc8c8847dfed2](https://github.com/PX4/PX4-Autopilot/commit/4d9e88141e5f341c331e795cde0cc8c8847dfed2),px4_work_queue: increase wq:nav_and_controllers stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #843
",[1eff1aa83c881f92467d79c9b5c3198cb59bf0a7](https://github.com/PX4/PX4-Autopilot/commit/1eff1aa83c881f92467d79c9b5c3198cb59bf0a7),"Update submodule sitl_gazebo to latest Sat Mar  6 00:39:04 UTC 2021

    - sitl_gazebo in PX4/Firmware (263b00b65fc89c7fd9383f0364760fceb15ea12a): https://github.com/PX4/PX4-SITL_gazebo/commit/bebb9a95f0b61bf9e4c3de345fab70985c1329b3
    - sitl_gazebo current upstream: https://github.com/PX4/PX4-SITL_gazebo/commit/c7524aa977539d8cc972d9336355bc82e2f2cfa5
    - Changes: https://github.com/PX4/PX4-SITL_gazebo/compare/bebb9a95f0b61bf9e4c3de345fab70985c1329b3...c7524aa977539d8cc972d9336355bc82e2f2cfa5

    c7524aa 2021-02-28 Jaeyoung-Lim - Fix MAVSDK SITL tests
f4d5594 2021-02-28 JaeyoungLim - Increase rover model realtime factor (#715)",X,increase

"PX4-Autopilot
"," #844
",[a991e78e18575cd19f5f4821c2fa47b2a3fe4f29](https://github.com/PX4/PX4-Autopilot/commit/a991e78e18575cd19f5f4821c2fa47b2a3fe4f29),parameters: fix runtime default edge case,X,runtime

"PX4-Autopilot
"," #845
",[c356181f9066bc6361825b2ae17212aae01cd55f](https://github.com/PX4/PX4-Autopilot/commit/c356181f9066bc6361825b2ae17212aae01cd55f),px4_work_queue: increase wq:rate_ctrl stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #846
",[3665f9a3c49a16ca0d7019b368bfb544d87f0781](https://github.com/PX4/PX4-Autopilot/commit/3665f9a3c49a16ca0d7019b368bfb544d87f0781),gyro_fft: increase default range and length to improve test data,"New:Fixed_Communication_Rate
New:General:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #847
",[00016e53fac8af3dcf7935cd823692f924a951d4](https://github.com/PX4/PX4-Autopilot/commit/00016e53fac8af3dcf7935cd823692f924a951d4),boards: holybro/kakutef7 disable CONSTRAINED_FLASH to increase optimization,X,increase

"PX4-Autopilot
"," #848
",[2c5342acd4e77f7aa74f9a3dffd4f482339f8f92](https://github.com/PX4/PX4-Autopilot/commit/2c5342acd4e77f7aa74f9a3dffd4f482339f8f92),"commander: increase nav_test_failed hysteresis time

This is to avoid race condition with the yaw emergency estimator having
the same trigger delay of 1 second. Commander will now give more time to
EKF2 to reset itself before switching to altitude mode.","New:Hard-coded-fine-tuning
New:Hard-coded-timing",increase

"PX4-Autopilot
"," #849
",[6874e9fba03bbec52da09f134563f644f9299ca8](https://github.com/PX4/PX4-Autopilot/commit/6874e9fba03bbec52da09f134563f644f9299ca8),"boards: NuttX disable all NSH memory debug commands (mb, mh, mw) by default

 - closes https://github.com/PX4/PX4-Autopilot/issues/17062",X,memory

"PX4-Autopilot
"," #850
",[9171a843245e55a6deea74c62c111107bfc8a0ee](https://github.com/PX4/PX4-Autopilot/commit/9171a843245e55a6deea74c62c111107bfc8a0ee),IMU_DGYRO_CUTOFF increase default 10 -> 20 Hz,"New:Fixed_Communication_Rate
New:General:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #851
",[1ec8ce58c7e544e96cbda711d85c7f3b21731b9b](https://github.com/PX4/PX4-Autopilot/commit/1ec8ce58c7e544e96cbda711d85c7f3b21731b9b),Commander: Increase auto-disarm timeout to 25 seconds after arming,X,increase

"PX4-Autopilot
"," #852
",[1e88939605c99ebb056bb4e473ac076ef1d4aca7](https://github.com/PX4/PX4-Autopilot/commit/1e88939605c99ebb056bb4e473ac076ef1d4aca7),"mavsdk_tests: report speed factor every second

This helps in debugging slow CI.",X,slow

"PX4-Autopilot
"," #853
",[31b9efdaebe76937cf7ecda95014946ed98fcdc8](https://github.com/PX4/PX4-Autopilot/commit/31b9efdaebe76937cf7ecda95014946ed98fcdc8),sensors/vehicle_imu: increase threshold for clipping warning,"New:Fixed_Communication_Rate
New:General:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #854
",[f9d8c613b048f58eb3110e9af13cb3a89c4c866f](https://github.com/PX4/PX4-Autopilot/commit/f9d8c613b048f58eb3110e9af13cb3a89c4c866f),px4_work_queue: increase nav_and_controllers stack,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #855
",[59b70a881d5d5eed93ebe97889a1ae7886a9520a](https://github.com/PX4/PX4-Autopilot/commit/59b70a881d5d5eed93ebe97889a1ae7886a9520a),commander: temporarily increase worker thread stack substantially,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #856
",[32d354e5fef79fc19ad6c1e135712e22056049ca](https://github.com/PX4/PX4-Autopilot/commit/32d354e5fef79fc19ad6c1e135712e22056049ca),"Update submodule ecl to latest Sun May  2 12:39:08 UTC 2021

    - ecl in PX4/Firmware (cb999f37d4891ebfbbc21b4ce9b3851888b39ad4): https://github.com/PX4/PX4-ECL/commit/5d34d7a24ef72b826c320a3259ee0ec68b1936df
    - ecl current upstream: https://github.com/PX4/PX4-ECL/commit/a7b8afe420f438554ad90bcba0f1f4872325e75b
    - Changes: https://github.com/PX4/PX4-ECL/compare/5d34d7a24ef72b826c320a3259ee0ec68b1936df...a7b8afe420f438554ad90bcba0f1f4872325e75b

    a7b8afe 2021-04-30 Eike - Allow rangefinder fusion in vision height mode (Fix for #994) (#999)
4ac57d3 2021-04-25 Daniel Agar - EKF: increase fault flags value size to fit current flag bits (> 16)",X,increase

"PX4-Autopilot
"," #857
",[c28533677dbcbdc772524c3126921a6d322dd29b](https://github.com/PX4/PX4-Autopilot/commit/c28533677dbcbdc772524c3126921a6d322dd29b),"MulticopterLandDetector: use setpoint generation to infer decend intent

For any normal use case where a downwards velocity setpoint is set
this works exactly the same as before.
E.g. autonomous landing, landing in Altitude or Position mode

The advantage is that the very common case where a vehicle tries
to hold a constant altitude but fails to do so e.g. during a hard brake
with too much lift the resulting downwards velocity was interpreted
as descend intent and since the vehicle already struggled to hold altitude
with low thrust and was not moving fast anymore because it was braking
this lead to a lot more false positives on certain vehicle types.

The disadvantage is that not setting a downwards velocity setpoint but
just moving the position setpoint into the ground does not result in
land detection anymore. We do not use this method of landing anymore for
quite a while. It's not recommended and I wonder if there's some rare use
case like offboard where this is done.

We could add an additional case for the specific case to land with a
position setpoint only.",X,fast

"PX4-Autopilot
"," #858
",[3b7ce61901f6ec01439b10aae7fab75eb3719a74](https://github.com/PX4/PX4-Autopilot/commit/3b7ce61901f6ec01439b10aae7fab75eb3719a74),px4_work_queue: increase wq:rate_ctrl stack slightly,New:General:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #859
",[e265ebabc59575c1bd217f24b2d64a955aad1715](https://github.com/PX4/PX4-Autopilot/commit/e265ebabc59575c1bd217f24b2d64a955aad1715),"Update submodule ecl to latest Thu May  6 12:39:12 UTC 2021

    - ecl in PX4/Firmware (a300d32523e24df3f366a0d564b764261e1c1909): https://github.com/PX4/PX4-ECL/commit/a7b8afe420f438554ad90bcba0f1f4872325e75b
    - ecl current upstream: https://github.com/PX4/PX4-ECL/commit/29243ac5cbb5d27ac71744e88afcd786df6f748d
    - Changes: https://github.com/PX4/PX4-ECL/compare/a7b8afe420f438554ad90bcba0f1f4872325e75b...29243ac5cbb5d27ac71744e88afcd786df6f748d

    29243ac 2021-05-05 bresch - yaw_reset: reduce minimum vector length to compute yaw error
aad4840 2021-05-02 Kabir Mohammed - EKF: increase allowed difference between flow and gyro ODRs","New:unstable_and_slow_noise_handling
New:General:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #860
",[f15eefcc9503d2abe0713defe7f017519e337b0b](https://github.com/PX4/PX4-Autopilot/commit/f15eefcc9503d2abe0713defe7f017519e337b0b),ekf2: selector increase status rate before potential instance change,New:Fixed_Communication_Rate,increase

"PX4-Autopilot
"," #861
",[904f827df0e7b8c67b00635e4ecbf0433a9297a8](https://github.com/PX4/PX4-Autopilot/commit/904f827df0e7b8c67b00635e4ecbf0433a9297a8),Jenkins: increase timeout and build history,X,increase

"PX4-Autopilot
"," #862
",[87b861d0f08a8ad036a1000a890ba6f56695b04c](https://github.com/PX4/PX4-Autopilot/commit/87b861d0f08a8ad036a1000a890ba6f56695b04c),IMU_GYRO_CUTOFF and IMU_DGYRO_CUTOFF increase default slightly,"New:Fixed_Communication_Rate
New:General:Hard-coded-fine-tuning",increase

"PX4-Autopilot
"," #863
",[820a442fe3654353d5613efca1fcf4bcd0d23c10](https://github.com/PX4/PX4-Autopilot/commit/820a442fe3654353d5613efca1fcf4bcd0d23c10),"drivers/imu/analog_devices/adis16448: minor fixes and compatibility with older model

 - increase SPI stall time slightly

 - tolerate mag self test failure (could be due to local magnetic field)

 - register configuration compatible with older ADIS16448AMLZ

 - don't publish duplicate accel/gyro

 - only allocate CRC perf counter if using CRC",X,increase

"PX4-Autopilot
"," #864
",[3269ee8df13cfff055b272fb5b31bd57df7f1d1c](https://github.com/PX4/PX4-Autopilot/commit/3269ee8df13cfff055b272fb5b31bd57df7f1d1c),"sensors/vehicle_angular_velocity: accumualted notch filtering and reset improvements

 - apply sensor scaling immediately to keep things simple (FIFO vs regular)
 - inline filter helpers (minor performance improvement)
 - dynamic notch filtering
    - reorder by axis (applied per axis)
    - don't remove notch filters immediately if ESC or FFT data times out
    - constrain notch filter frequency and bandwidth to safe range (minimum bandwidth for flaot precision, Nyquist, etc)
 - add safe constraint on dt",New:unstable_and_slow_noise_handling,performance

"PX4-Autopilot
"," #865
",[806b46293537f3e63279b24c841553ad36051e3a](https://github.com/PX4/PX4-Autopilot/commit/806b46293537f3e63279b24c841553ad36051e3a),px4_work_queue: increase UART stack,New:Hard-coded-fine-tuning,increase

"PX4-Autopilot
"," #866
",[00229c4fd240f08e2b07ffb975249776cb217298](https://github.com/PX4/PX4-Autopilot/commit/00229c4fd240f08e2b07ffb975249776cb217298),"drv_pwm_output.h: increase highest max pwm limit from 2150 to 2500

 - servo linkages in vtol often need further travel of the servos to cover the full tilt travel",X,increase

"robonomics_contracts
"," #1
",[b0c6d713f5355a850cdc7c0cb4b00f5fb088c587](https://github.com/airalab/robonomics_contracts/commit/b0c6d713f5355a850cdc7c0cb4b00f5fb088c587),Fix keepalive deadlock when sender is not in memebers,X,deadlock

"robonomics_contracts
"," #2
",[ca2262837e070a3ea011b1faef014f44d2c0d6b7](https://github.com/airalab/robonomics_contracts/commit/ca2262837e070a3ea011b1faef014f44d2c0d6b7),Fixed deadlock when marker point out of members,X,deadlock

"turtlebot
"," #1
",[b9ab8e2c7e6c8c067c74ed6b7b05f27c09a639f5](https://github.com/turtlebot/turtlebot/commit/b9ab8e2c7e6c8c067c74ed6b7b05f27c09a639f5),Limit joint_states to 10hz for performance.,Smith:Is_Everything_OK,performance

"turtlebot
"," #2
",[f2d46b705722b61948313e3f2ec167dcaeeb3359](https://github.com/turtlebot/turtlebot/commit/f2d46b705722b61948313e3f2ec167dcaeeb3359),node now fast-fails if USB disconnected and has a --respawnable option to throttle restarting,New:Delayed_Sync_With_Physical_Events,fast

"turtlebot
"," #3
",[eadff801651b25ffc7114df7d48bb3be417464a6](https://github.com/turtlebot/turtlebot/commit/eadff801651b25ffc7114df7d48bb3be417464a6),trying a lower resolution depth mode to run faster,General:Hard-coding,fast

"turtlebot
"," #4
",[288c08370a41757a4612a5a118b049e40f9b9631](https://github.com/turtlebot/turtlebot/commit/288c08370a41757a4612a5a118b049e40f9b9631),Add support for Intel R200 camera,X,runtime

"turtlebot
"," #5
",[bf3e001b8d1e91269c61d9b22b969f438545fa3c](),Refactor urdf.xacro files to stop loading unnecessary content.,General:Performance:Extraneous_Fetching,memory

"Valetudo
"," #1
",[ddc1c5f74ec06d63d2438932220e369678998342](https://github.com/Hypfer/Valetudo/commit/ddc1c5f74ec06d63d2438932220e369678998342),applied some performance improvement,Smith:General:How_Many_Times_Do_I_Have_to_Tell_You,performance

"Valetudo
"," #2
",[0845ce1ba4d31eeaf723e21cae3744c638c0dc59](https://github.com/Hypfer/Valetudo/commit/0845ce1ba4d31eeaf723e21cae3744c638c0dc59),Change config file location to /mnt/data,X,memory

"Valetudo
"," #3
",[9a847a42b8382288180c0b2335a8f3aba32d7bd0](https://github.com/Hypfer/Valetudo/commit/9a847a42b8382288180c0b2335a8f3aba32d7bd0),"Downgrade Build to Node 8 since Node 10 seems to be leaking memory
There was a memory leak in node version up to 11.12 iirc. Thats why Valetudo was downgraded to Node 8.",X,memory

"Valetudo
"," #4
",[0ea6addff0aa945e55857289270cb8e22f3fae44](https://github.com/Hypfer/Valetudo/commit/0ea6addff0aa945e55857289270cb8e22f3fae44),Changed Node Version to 8 + Memory Limit,X,memory

"Valetudo
"," #5
","[91088195f869d6d6f96bb612770e3bcc7a1d00b8](https://github.com/Hypfer/Valetudo/commit/91088195f869d6d6f96bb612770e3bcc7a1d00b8)

## PR
https://github.com/Hypfer/Valetudo/pull/198",Limit memory allocation,Smith:General:Falling_Dominoes,memory

"Valetudo
"," #6
",[2b8e4e354a092cdb5e7aa0c5f68ce00a58c57e17](https://github.com/Hypfer/Valetudo/commit/2b8e4e354a092cdb5e7aa0c5f68ce00a58c57e17),Might fix memory leak,X,memory

"Valetudo
"," #7
",[a9fa64fcec23639b7367a0d3fa61b84cd07eaebe](https://github.com/Hypfer/Valetudo/commit/a9fa64fcec23639b7367a0d3fa61b84cd07eaebe),More attempts to prevent Valetudo from going out of memory,General:recreate_objects,memory

"Valetudo
"," #8
",[d96eb15c8f299ff49d98f9d6661c6f44225bc633](https://github.com/Hypfer/Valetudo/commit/d96eb15c8f299ff49d98f9d6661c6f44225bc633),feat: Added debug config option to continuously log memory usage,X,memory

"Valetudo
"," #9
",[890120c76930bb8941459a7e0d1baa0af8577d83](https://github.com/Hypfer/Valetudo/commit/890120c76930bb8941459a7e0d1baa0af8577d83),Fix map coloring,X,Increase

"Valetudo
"," #10
",[a0fa7f49f7f0779357c3ce61d354badd5bac07ed](https://github.com/Hypfer/Valetudo/commit/a0fa7f49f7f0779357c3ce61d354badd5bac07ed),fix(vendor.viomi): Fix basic control functionality,X,Increase

"Valetudo
"," #11
",[a128a91499d94f0e75d17f87396571f6c889a7ac](https://github.com/Hypfer/Valetudo/commit/a128a91499d94f0e75d17f87396571f6c889a7ac),"fix(vendor.viomi): Increase timeout for set_timezone


## PR
https://github.com/Hypfer/Valetudo/pull/806",New:Impatient_requester,Increase

"Valetudo
"," #12
",[a3905106347c1640f1817302e881de1dfce22133](https://github.com/Hypfer/Valetudo/commit/a3905106347c1640f1817302e881de1dfce22133),feat!(mqtt): Homie-compatible implementation,X,Increase

"Valetudo
"," #13
",[5f6068d7790a8f3f322f4825493608605ed80a63](https://github.com/Hypfer/Valetudo/commit/5f6068d7790a8f3f322f4825493608605ed80a63),"fix(vendor.viomi): Raise default miIO timeout


## PR
https://github.com/Hypfer/Valetudo/pull/817",New:Impatient_requester,slow

"Valetudo
"," #14
",[e6fd6e4534db0366078b7cd7797dc0f0051ade99](https://github.com/Hypfer/Valetudo/commit/e6fd6e4534db0366078b7cd7797dc0f0051ade99),feat(mqtt): Remove increase/decrease from intensity capability,X,Increase

"Valetudo
"," #15
",[f7b42edbb65e3860248e81e6c6b365d0f6be978c](https://github.com/Hypfer/Valetudo/commit/f7b42edbb65e3860248e81e6c6b365d0f6be978c),refactor(vendor.roborock): Improve map parser performance,General:Performance:for_if,performance

"Valetudo
"," #16
",[2f46d77a7d69c55cf744f78c47f1bec5681e8287](https://github.com/Hypfer/Valetudo/commit/2f46d77a7d69c55cf744f78c47f1bec5681e8287),refactor(vendor.roborock): Further improve map parser performance,X,performance

"Valetudo
"," #17
",[a05dcfec6ad6de3732430d561f4c68cc485133f8](https://github.com/Hypfer/Valetudo/commit/a05dcfec6ad6de3732430d561f4c68cc485133f8),chore(core): Increase the amount of allowed log requests,X,increase

"Valetudo
"," #18
",[98b2757aec0af94392038577eead7749ef659e17](https://github.com/Hypfer/Valetudo/commit/98b2757aec0af94392038577eead7749ef659e17),feat(mqtt): Stream map serialization to improve memory usage with large maps,X,memory

"Valetudo
"," #19
",[9000f51eaf818ca465ad0b2ef9f91ca421ac2da4](https://github.com/Hypfer/Valetudo/commit/9000f51eaf818ca465ad0b2ef9f91ca421ac2da4),fix(webserver): Properly report memory info for kernels older than 3.14 but newer than 2.6,X,memory

"Valetudo
"," #20
",[6578a99344a6d087450a0e4b45a630398fb3a544](https://github.com/Hypfer/Valetudo/commit/6578a99344a6d087450a0e4b45a630398fb3a544),fix: Try logging everything we can get about process memory before committing sudoku,X,memory

"Valetudo
"," #21
",[021213e8cd3b932685b590d896dcf640c311a2fc](https://github.com/Hypfer/Valetudo/commit/021213e8cd3b932685b590d896dcf640c311a2fc),feat(vendor.dreame): Map fast mapping status,X,fast

"Valetudo
"," #22
",[51ee17d601a65e83e1bf81b7031e501a2195ca7b](https://github.com/Hypfer/Valetudo/commit/51ee17d601a65e83e1bf81b7031e501a2195ca7b),Revert feat(mqtt): Stream map serialization to improve memory usage with large maps,X,memory

"Valetudo
"," #23
",[5202164714ae8cb9759529511fa9e9ec3c7eab7c](https://github.com/Hypfer/Valetudo/commit/5202164714ae8cb9759529511fa9e9ec3c7eab7c),chore(build): Bump pkg version and allow reuse of the bundled runtime,X,runtime

